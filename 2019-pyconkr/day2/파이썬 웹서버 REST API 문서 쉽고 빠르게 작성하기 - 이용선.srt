1
00:00:00,000 --> 00:00:01,810
안녕하세요 제 파이썬

2
00:00:01,810 --> 00:00:03,960
웹서버 rest API 문서 쉽고

3
00:00:03,960 --> 00:00:07,840
빠르게 작성하기 발표를 시작하겠습니다

4
00:00:07,840 --> 00:00:10,540
저는 지금 5년째 파이썬 밴드

5
00:00:10,540 --> 00:00:13,680
어플리케이션 개발을 주로 하고 있는 엔지니어 있고요

6
00:00:13,680 --> 00:00:15,460
그 처음에 한참 플라스크를 쓰다가

7
00:00:15,460 --> 00:00:18,780
요즘에는 잔고를 쓰고 있습니다

8
00:00:18,780 --> 00:00:21,740
아 그리고 회사 이름 에이아이트릭스 라고 있고요

9
00:00:21,740 --> 00:00:26,940
그리고 그 api 민서가 일하다가 필요했는데

10
00:00:26,940 --> 00:00:29,190
어떻게 하면 최대한 좀 날로 먹을 수 있을까

11
00:00:29,190 --> 00:00:33,340
고민을 하다가 그 아이콘에서 이 주제에 대해서 발표된

12
00:00:33,340 --> 00:00:38,740
저 없길래 다 같이 나눠 먹고 자기 세션을 준비하겠습니다

13
00:00:38,740 --> 00:00:40,100
내 먼저 rest api

14
00:00:40,100 --> 00:00:43,640
민서가 왜 필요한지 씻고 넘어 갈 거고요

15
00:00:43,640 --> 00:00:47,180
다음에 생성할 때 사용하는 오픈 api

16
00:00:47,180 --> 00:00:50,720
스페시피케이션 에 대해서 설명을 들을 거고

17
00:00:50,720 --> 00:00:54,110
파이썬 웹 어플리케이션으로 오픈 API

18
00:00:54,110 --> 00:00:55,850
스펙에 맞는 제일 싼 거야

19
00:00:55,850 --> 00:00:59,700
메일 어떻게 생성할 수 있는지 설명해 드릴 거고요

20
00:00:59,700 --> 00:01:03,420
이거 이걸 이용해서 어떻게 장고와 플라스크에서 API

21
00:01:03,420 --> 00:01:07,590
문서 생성을 되는지 알아 보겠습니다

22
00:01:07,590 --> 00:01:08,550
the rest API

23
00:01:08,550 --> 00:01:12,460
문서 필요성으로 시작을 해 보겠습니다

24
00:01:12,460 --> 00:01:14,790
베스트는 프레젠테이션을 스테이

25
00:01:14,790 --> 00:01:16,770
트랜스포머 예약자 이고요

26
00:01:16,770 --> 00:01:20,170
지금 보시면 uril 리소스를 지정을 하고 있어

27
00:01:20,170 --> 00:01:22,840
http 메소드 팽이를 지정해서

28
00:01:22,840 --> 00:01:27,200
웹 어플리케이션 과 통신하는 방식을 얘기를 합니다

29
00:01:27,200 --> 00:01:29,510
그리고 이걸 만족한 api 를 stepi

30
00:01:29,510 --> 00:01:32,260
또는 일부를 api 라고 하는데

31
00:01:32,260 --> 00:01:36,720
세세하게 들어가면 레스트의 달인 열어 줘 건드렸는데

32
00:01:36,720 --> 00:01:38,090
여기서 이렇게 간단히 예시로

33
00:01:38,090 --> 00:01:41,220
만 보고 넘어가도록 하겠습니다

34
00:01:41,220 --> 00:01:46,150
표를 보시면은 발표자 스피커를 리스로 정의를 했고요

35
00:01:46,150 --> 00:01:48,730
다음에 컬렉션 왼쪽에

36
00:01:48,730 --> 00:01:51,910
이제 스피커 컬렉션에 요청을 내린 부분이고

37
00:01:51,910 --> 00:01:54,550
다음에 오른쪽에 스피커 한 명을 지정을 해서

38
00:01:54,550 --> 00:01:57,060
이제 요청을 보내는 부분인데

39
00:01:57,060 --> 00:02:00,580
잭 앤 메서드는 주로 뭐를 조회할때 쓰고요

40
00:02:00,580 --> 00:02:02,800
포스트는 새 데이터생성

41
00:02:02,800 --> 00:02:05,880
남의 패치는 무수정 릴리트는 삭제

42
00:02:05,880 --> 00:02:07,680
이런 식으로 요청할 때 사용합니다

43
00:02:07,680 --> 00:02:10,980
완벽한 기존에 있는 게 아니라서

44
00:02:10,980 --> 00:02:12,860
주연의 따라서 패치

45
00:02:12,860 --> 00:02:16,790
딜리트 요청을 컬렉션에 보내는 걸

46
00:02:16,790 --> 00:02:18,720
허용하지 않을 수도 있고요

47
00:02:18,720 --> 00:02:21,700
어떤 객체에 대해서 패치를 요청을 했는데

48
00:02:21,700 --> 00:02:23,250
그 교체가 없을 경우

49
00:02:23,250 --> 00:02:27,920
새로 생성하는 식으로도 고양이 될 수 있습니다

50
00:02:27,920 --> 00:02:29,530
그래서 아이템 사과 왜 필요하냐

51
00:02:29,530 --> 00:02:31,940
하면은 사실 그 api

52
00:02:31,940 --> 00:02:35,140
뭔가 되게 잡고 사용하는사람 수도 적고

53
00:02:35,140 --> 00:02:37,290
이러면은 그때그때 전달하는 게

54
00:02:37,290 --> 00:02:39,210
더 효율적일 수도 있어요

55
00:02:39,210 --> 00:02:40,930
그리고 밴드랑 브런치 &

56
00:02:40,930 --> 00:02:42,620
개발을 한 사람이 다 하는 경우에도

57
00:02:42,620 --> 00:02:45,380
딱히 그 문제가 필요가 없고

58
00:02:45,380 --> 00:02:47,320
jpi 규모가 되게 크고

59
00:02:47,320 --> 00:02:49,770
업데이트도 잡고 뭐 쓰는 사람도 많고

60
00:02:49,770 --> 00:02:53,180
이렇다 보면은 매번 사용자들에게 에이피에스테크

61
00:02:53,180 --> 00:02:55,750
전달하기가 굉장히 힘들어지고 요

62
00:02:55,750 --> 00:02:56,350
이런 경우는 또

63
00:02:56,350 --> 00:03:01,060
보통 그랑프론트 개발을 다른 사람이 나눠서 하기 때문에

64
00:03:01,060 --> 00:03:02,060
질문서를 작성

65
00:03:02,060 --> 00:03:07,480
하면은 커뮤니케이션 코스트를 크게 낮출 수 있습니다

66
00:03:07,480 --> 00:03:10,570
Let'S eat 하면서 이런 것들 옥상에 되는데

67
00:03:10,570 --> 00:03:11,500
먼저고 간단히 소개

68
00:03:11,500 --> 00:03:16,660
나 라이센스 뭐 이런 것들도 들어가 다음에 접속 주소와 포트

69
00:03:16,660 --> 00:03:18,110
뭐 인증방법

70
00:03:18,110 --> 00:03:19,890
나는 어떤 uri 둘이 있고

71
00:03:19,890 --> 00:03:22,240
거기 어떤 메소드들이 지원이 되고

72
00:03:22,240 --> 00:03:23,670
또 그 안에서 어떻게 히트

73
00:03:23,670 --> 00:03:26,370
파라미터를 바꾸었던 리스폰스를 내려 주는데

74
00:03:26,370 --> 00:03:29,030
것들이 포함이 됩니다

75
00:03:29,030 --> 00:03:31,290
그래서 대충 이렇게 생겼는데

76
00:03:31,290 --> 00:03:33,800
쉬면은 패키지라는 컬렉션에

77
00:03:33,800 --> 00:03:38,180
포스트 요청을 보내면 패키지가 생성되는 API 있는데

78
00:03:38,180 --> 00:03:42,530
이쪽에 보시면은 젤리케이스를 보낼 때 뭘 보내야 되는지

79
00:03:42,530 --> 00:03:47,080
오른쪽에는 뭐 성공했을 때 201 응답이 왔을 때

80
00:03:47,080 --> 00:03:51,420
어떤 필드들이 내려 오는지 게 나타나 있습니다

81
00:03:51,420 --> 00:03:52,670
이런 게 있으면 좋은데

82
00:03:52,670 --> 00:03:56,660
내 손으로 직접 작성을 하려면은 일단 너무 귀찮고

83
00:03:56,660 --> 00:04:00,520
요 다음에 코디를 업데이트를 했을 때

84
00:04:00,520 --> 00:04:04,960
문서도 같이 업데이트 해줘야 되는데 이걸 자꾸 잊어버립니다

85
00:04:04,960 --> 00:04:06,360
가장 큰 되고

86
00:04:06,360 --> 00:04:09,120
다음에 반복되는 내용이 되게 많아서

87
00:04:09,120 --> 00:04:10,470
한 번만 더 껴도

88
00:04:10,470 --> 00:04:15,780
문서에서 수정해야 될 곳이 굉장히 많아져서 힘듭니다

89
00:04:15,780 --> 00:04:18,840
그래서 api 문서 작성을 이제 직접 하지 않고

90
00:04:18,840 --> 00:04:21,300
자동으로 생성되게 하고 싶은데

91
00:04:21,300 --> 00:04:24,560
이거 쉽게 해줄 하도록 해 주는 오픈 api

92
00:04:24,560 --> 00:04:28,040
스페시피케이션 일하는 게 존재합니다

93
00:04:28,040 --> 00:04:30,110
내가 뭐냐면 restful

94
00:04:30,110 --> 00:04:32,020
API 내용을 사람과

95
00:04:32,020 --> 00:04:35,140
컴퓨터가 모두 읽을 수 있도록 구조화한 것이고요

96
00:04:35,140 --> 00:04:39,620
그다음에 제 2서해안 또는 야매 형식으로 작성해 줘

97
00:04:39,620 --> 00:04:41,620
작성된 재밌었냐

98
00:04:41,620 --> 00:04:44,010
메르헨 jpi 문서를 그릴 거나

99
00:04:44,010 --> 00:04:45,260
아니면은 서버 클라이언트

100
00:04:45,260 --> 00:04:48,740
스켈레톤 코드생성 이러는데 쓰이고요

101
00:04:48,740 --> 00:04:51,640
처음에 이게 스웨거 해서 시작을 했는데

102
00:04:51,640 --> 00:04:53,760
지금 오픈 api 이니시에이티브 에서

103
00:04:53,760 --> 00:04:55,260
운영을 하고 있습니다

104
00:04:55,260 --> 00:04:56,340
여기서 스웨거가 뭔지

105
00:04:56,340 --> 00:05:01,570
잠깐 보면은 스웨거는 api 개발을 돕는 프로젝트인데

106
00:05:01,570 --> 00:05:05,250
현재 크게 3가지 2 세시 오픈소스 되어 있습니다

107
00:05:05,250 --> 00:05:08,590
첫 번째로 3가 코드 이제는 그 재밌었나

108
00:05:08,590 --> 00:05:12,700
열매를 이제 그 서버 클라이언트

109
00:05:12,700 --> 00:05:17,500
스켈레톤 코드로 변환을 해주는 소리 보여 다음에 3가

110
00:05:17,500 --> 00:05:20,400
에디터는 그 오픈 api 재밌었나

111
00:05:20,400 --> 00:05:23,820
연애를 쉽게 수정할 수 있도록 해주는 내리더라구요

112
00:05:23,820 --> 00:05:26,610
마지막으로 이게 이번 발표 핵심인데

113
00:05:26,610 --> 00:05:28,380
스웨거 UI 입니다

114
00:05:28,380 --> 00:05:30,750
얘는 이제 오픈 api json 야

115
00:05:30,750 --> 00:05:33,650
야 메르 받아서 이렇게 오른쪽처럼 api

116
00:05:33,650 --> 00:05:36,320
문서로 렌더링을 해 주는데

117
00:05:36,320 --> 00:05:38,710
얘는 지금 쐬고 유희왕에서

118
00:05:38,710 --> 00:05:41,800
그 공식으로 제공하는 데모페이지 있는데

119
00:05:41,800 --> 00:05:44,890
아래 URL 들어가시면 보실 수 있습니다

120
00:05:44,890 --> 00:05:50,930
서예를 잠깐 확대를 해보면 맨 위쪽에 KPI 이름과 뭐 설명

121
00:05:50,930 --> 00:05:53,480
버전 이런 것들이 들어가고요

122
00:05:53,480 --> 00:05:56,400
다음에 바로 아래쪽에는 지원하는 모든 URL

123
00:05:56,400 --> 00:05:59,390
아이들이랑 뭐 어떤 메소드들이 있는지

124
00:05:59,390 --> 00:06:04,670
나를 가게 이거 어떤 용도인지 설명이 연락해서 있고

125
00:06:04,670 --> 00:06:09,550
이중 하나 클릭을 하면은 플래쉬 불 켜 찾아서 어떤 리퀘스트

126
00:06:09,550 --> 00:06:11,130
파라미터와 어떤 리스톤

127
00:06:11,130 --> 00:06:14,910
스키마를 갔는지 확인 하실 수 있습니다

128
00:06:14,910 --> 00:06:18,890
즉 상단에 트라이 트라이 아웃이라는 버튼이 있는데

129
00:06:18,890 --> 00:06:21,440
이걸 클릭을 하면은 이렇게 또 펼쳐져서

130
00:06:21,440 --> 00:06:25,980
직접 htpb 퀘스트도 뭐 해 볼 수가 있구요

131
00:06:25,980 --> 00:06:28,040
예 그래서 문서가 이렇게 생겼는데

132
00:06:28,040 --> 00:06:31,940
이걸 만들어 주는 이제 오픈 API 스펙

133
00:06:31,940 --> 00:06:36,690
스페시피케이션 자 메리 어떻게 생겼는지 보겠습니다

134
00:06:36,690 --> 00:06:40,710
이렇게 생겼는데 일단 체이서는 이번 발표해서 안다르

135
00:06:40,710 --> 00:06:42,280
계속 야 메일로 진행을 할 텐데

136
00:06:42,280 --> 00:06:46,020
이제 이승헌이 너무 길어져 가지고 슬라이드 들어가질 않아서

137
00:06:46,020 --> 00:06:49,110
이렇게 야매로 진행을 할 거고요

138
00:06:49,110 --> 00:06:53,540
그럼 먼저 이렇게 api 보일은 설명 못 버전 라이센스

139
00:06:53,540 --> 00:06:56,340
이런 게 들어가고요

140
00:06:56,340 --> 00:07:00,640
다른 이거는 요청을 보낼 서버 정보인데

141
00:07:00,640 --> 00:07:03,870
접속 주소가 포트 같은 게 있고

142
00:07:03,870 --> 00:07:06,130
여기는 서버가 한대만 나와 있는데

143
00:07:06,130 --> 00:07:10,820
실제로는 뭐 용도에 따라 여러대가 될 수 있겠죠

144
00:07:10,820 --> 00:07:14,850
가장 중요한 apres 메소드별 설명입니다

145
00:07:14,850 --> 00:07:20,470
스피커라는 메소드의 컬렉션 요청을 보냈을 때

146
00:07:20,470 --> 00:07:23,730
어떤 응답이 돌아오는 지수 거고요

147
00:07:23,730 --> 00:07:29,280
응답형식 json 이라는 것과 다음에 스피커

148
00:07:29,280 --> 00:07:31,250
프랑스로 지정된 스피커들의 어레이가

149
00:07:31,250 --> 00:07:34,960
내려온다고 써 있고요

150
00:07:34,960 --> 00:07:36,990
이거 이렇게 앞에서 레퍼런스 영화 스피커

151
00:07:36,990 --> 00:07:38,990
에 어떤 필드들이 있는지

152
00:07:38,990 --> 00:07:43,460
써 주면 제가 가져다 쓸 수 있는 형태입니다

153
00:07:43,460 --> 00:07:46,080
그래서 이런 열매를 스웨거

154
00:07:46,080 --> 00:07:51,480
유아의 집어 넣으면 API 문서가 나오는 거고요

155
00:07:51,480 --> 00:07:52,280
내 말은

156
00:07:52,280 --> 00:07:55,180
즉 야매 까지만 자동 생성을 하면은 이후에

157
00:07:55,180 --> 00:08:00,860
문서는 자동으로 다 들어온다고 할 수 있습니다

158
00:08:00,860 --> 00:08:02,470
내일 어떻게 제 파이썬

159
00:08:02,470 --> 00:08:05,620
웹 어플리케이션 코드에서 저 오픈 API

160
00:08:05,620 --> 00:08:16,480
스펙 야매로 뽑아낼 수 있는지 보도록 하겠습니다

161
00:08:16,480 --> 00:08:18,520
저희가 그 열매를 뽑아 하늘

162
00:08:18,520 --> 00:08:20,710
웹어플리케이션서버 서버는 이런 것들

163
00:08:20,710 --> 00:08:22,650
구성이 되어 있는데요

164
00:08:22,650 --> 00:08:24,490
먼저 그 베이스 URL 노트

165
00:08:24,490 --> 00:08:27,650
이런 기본 서버정보 가입 다음에

166
00:08:27,650 --> 00:08:30,430
교통편 들을 원하는 패스에 맵핑을 해 놓은

167
00:08:30,430 --> 00:08:32,280
라우터 코드가 있고요

168
00:08:32,280 --> 00:08:35,310
그다음에 그리고 각 육성지원에 대해서 리퀘스트

169
00:08:35,310 --> 00:08:38,080
파라미터와 리스폰 스키마를 어떻게 내려 주고

170
00:08:38,080 --> 00:08:42,980
어떻게 결정하는 로직 있을 겁니다

171
00:08:42,980 --> 00:08:45,270
서버정보 를 나타내는 코드로는

172
00:08:45,270 --> 00:08:49,380
이쪽 깎아 버렸다 이 부분 양해를 생성을 하게 되고요

173
00:08:49,380 --> 00:08:50,630
다음에 라우터 코드로는

174
00:08:50,630 --> 00:08:53,050
이렇게 어떤 api 가 존재하는지

175
00:08:53,050 --> 00:08:55,520
나타내는 양해를 생성을 합니다

176
00:08:55,520 --> 00:08:57,690
오른쪽에는 스피커에서 하나만 있지만

177
00:08:57,690 --> 00:09:00,420
실제로는 이거 말고도 여러 패스 뭐

178
00:09:00,420 --> 00:09:04,600
그 안에 또 여러 메소드들이 있을 수 있죠

179
00:09:04,600 --> 00:09:06,960
리퀘스트 파라미터를 받는 코드로는

180
00:09:06,960 --> 00:09:08,960
해당 분야의 생성을 하는데

181
00:09:08,960 --> 00:09:11,000
저기 오른쪽 예시는 그림 테스트

182
00:09:11,000 --> 00:09:15,550
파라미터를 받지 않는 API 어서 비어 있습니다

183
00:09:15,550 --> 00:09:19,820
마지막으로 리스폰스를 내려주는 코드에서는 이쪽 리스폰스 부분

184
00:09:19,820 --> 00:09:21,660
자매를 생성을 하는데

185
00:09:21,660 --> 00:09:27,340
뭐 200 코드에서 스피커들의 아이들이 내려온다고

186
00:09:27,340 --> 00:09:29,920
이런 식으로 생성을 합니다

187
00:09:29,920 --> 00:09:32,640
가장 많이 쓰이는 프레임워크인 잔고란

188
00:09:32,640 --> 00:09:36,430
플라스크에 대해서 정보를 어떻게 가져 올 수 있는지

189
00:09:36,430 --> 00:09:40,190
한번 보겠습니다

190
00:09:40,190 --> 00:09:44,350
장고의 경우에는 서버 정보 같은 경우에는 어차피

191
00:09:44,350 --> 00:09:47,850
그 어플리케이션 내부 환경보다는 그 배포

192
00:09:47,850 --> 00:09:51,000
외부 환경에 따라서 달라지는 게 많기 때문에

193
00:09:51,000 --> 00:09:54,340
문서를 생성할 때 그냥 손으로 한번 적어 줘야 됨

194
00:09:54,340 --> 00:09:56,120
어차피 이거 잘 바꿔야 되는 것도 아니고

195
00:09:56,120 --> 00:10:00,590
양도 적어서 그냥 저거 줄만 합니다

196
00:10:00,590 --> 00:10:03,120
그리고 핵심인 라우팅 정보는

197
00:10:03,120 --> 00:10:07,490
저 restaurants 에서 볼 수 있고요

198
00:10:07,490 --> 00:10:09,090
단일테스트 파라미터를 20분

199
00:10:09,090 --> 00:10:12,510
스키마 정보는 뷰가 모델로부터 가져올 수 있습니다

200
00:10:12,510 --> 00:10:16,970
간단히 코드로 한번 보겠습니다

201
00:10:16,970 --> 00:10:19,870
이런 식으로 API 문서 표를 만들 때

202
00:10:19,870 --> 00:10:23,010
서버정보를 같이 적어 주고요

203
00:10:23,010 --> 00:10:25,200
아래쪽은 잔고를 써 보셨다면

204
00:10:25,200 --> 00:10:28,870
은 익숙하실 수밖에 없는 그 url 패턴스 있는데

205
00:10:28,870 --> 00:10:31,240
이걸 가져다가 어떤 api 들어 있는지

206
00:10:31,240 --> 00:10:34,920
나 일할 수가 있습니다

207
00:10:34,920 --> 00:10:36,270
리고 리퀘스트 파라미터란

208
00:10:36,270 --> 00:10:39,520
리스킹 하던 걸 갖고 와야 되는데

209
00:10:39,520 --> 00:10:41,800
리스트뷰에 경우에는 이제

210
00:10:41,800 --> 00:10:43,690
이렇게 파라미터를 받는 부분이

211
00:10:43,690 --> 00:10:46,190
딱 형식이 정해져 있는 게 아니고

212
00:10:46,190 --> 00:10:49,920
난 또 내려 주는 부분도 일정하지가 않아서

213
00:10:49,920 --> 00:10:52,900
좀 정보를 갖고 걔가 되게 힘들어 그렇다고

214
00:10:52,900 --> 00:10:56,290
저 오른쪽처럼 독스트링 으로 시작하는

215
00:10:56,290 --> 00:11:01,340
그냥 직접 문서 쓰는 거랑 다를 바가 없고요

216
00:11:01,340 --> 00:11:04,370
그래서 클래스 베이스 뷰는 좀 가능성이 있는데

217
00:11:04,370 --> 00:11:06,850
그때 창고에는 제네릭뷰 라는 게 있어요

218
00:11:06,850 --> 00:11:10,000
그 예를 들면은 오른쪽에 보시면 그레이트 뷰

219
00:11:10,000 --> 00:11:13,730
와 같이 그런 걸 제네릭뷰 라고 하는데

220
00:11:13,730 --> 00:11:18,720
어 이걸 쓰면 이제 포스트 메소드와 그다음에 테이터스 코드

221
00:11:18,720 --> 00:11:20,900
201

222
00:11:20,900 --> 00:11:22,690
201 응답을 자동으로 만들어주는

223
00:11:22,690 --> 00:11:24,800
코드들이 다 포함이 되어 있는 글래스고

224
00:11:24,800 --> 00:11:27,350
요 그레이트 뷰 말고도 뭐 리스트뷰

225
00:11:27,350 --> 00:11:30,110
업데이트 뷰 이런 것들이 있어서

226
00:11:30,110 --> 00:11:31,850
이제 이것만으로도 이 패스에

227
00:11:31,850 --> 00:11:35,850
어떤 메소드가 있는지 알 수 있습니다

228
00:11:35,850 --> 00:11:36,840
그리고 클래스 베이스

229
00:11:36,840 --> 00:11:40,110
뷰에는 이제 그 모델과 다음에

230
00:11:40,110 --> 00:11:43,770
내 폰 클래스라는 함수가 포함이 되어 있는데

231
00:11:43,770 --> 00:11:47,500
얘네들 로부터 이제 api 가 어떤 모델을 쓰는 주니까

232
00:11:47,500 --> 00:11:52,190
어떤 리소스에 대한 api 폼 클래스를 통해서 어떤 임프

233
00:11:52,190 --> 00:11:57,120
파라미터를 받는지 알아 낼 수가 있습니다

234
00:11:57,120 --> 00:12:01,080
플라스크 또 한번 보겠습니다 마찬가지로

235
00:12:01,080 --> 00:12:03,420
서버 정보는 개포 환경에 따라 달라지는 거라서

236
00:12:03,420 --> 00:12:05,640
직접 적어 줄 수밖에 없고요

237
00:12:05,640 --> 00:12:08,130
나머지 도장 거랑 되게 유사한데

238
00:12:08,130 --> 00:12:11,180
잔고에서 url 패턴 쓰라는 그 리스트에

239
00:12:11,180 --> 00:12:13,490
코데로 직접 저거 줬었는데

240
00:12:13,490 --> 00:12:15,380
플라스크는 데코레이터 를 통해서

241
00:12:15,380 --> 00:12:18,020
빌드를 라우터에 등록을 합니다

242
00:12:18,020 --> 00:12:24,330
그때 뷰 퍼미션 스라는 픽셔너리 에 들어가게 되는데

243
00:12:24,330 --> 00:12:26,650
내가 지금 함수를 보시면은

244
00:12:26,650 --> 00:12:31,290
이제 안에서 애들 url 호출을 하고요

245
00:12:31,290 --> 00:12:33,720
그다음에 애들 url 노래에서는 제평

246
00:12:33,720 --> 00:12:36,680
시원스레 엔드포인트란 규선이 맵핑을 해서

247
00:12:36,680 --> 00:12:39,020
이제 넣어 두는 것을 보실 수 있습니다

248
00:12:39,020 --> 00:12:44,800
이걸 꺼내서 아까 패스부분이 다음에 를 생성을 하면

249
00:12:44,800 --> 00:12:47,120
퀘스트와 리스폰스 부분은 사실

250
00:12:47,120 --> 00:12:51,220
플라스크는 익스텐션을 붙이지 않으면 되게 힘들어요

251
00:12:51,220 --> 00:12:55,010
그 이유는 장고항 마찬가지로 좀 다 되었고요

252
00:12:55,010 --> 00:12:59,400
클래스뷰 봐 저도 모처럼 모델이나 폼이 붙어 있는 게 아니라서

253
00:12:59,400 --> 00:13:04,640
익스텐션을 쓰지 않으면 가져오기가 힘듭니다

254
00:13:04,640 --> 00:13:06,370
그래서 정리를 해 보면

255
00:13:06,370 --> 00:13:07,710
서버 정보는 대포

256
00:13:07,710 --> 00:13:10,320
환경에 따라 달라져서 직접 적어 줘야 되고요

257
00:13:10,320 --> 00:13:13,280
제 라우팅 정보 는 어떤 프레임워크인가

258
00:13:13,280 --> 00:13:16,480
이걸 저장하고 있는 교체가 있어서 갖다 쓰면 되고

259
00:13:16,480 --> 00:13:18,980
제비퀘스트 랑 리스폰스 경우에는

260
00:13:18,980 --> 00:13:22,750
플라스크는 좀 코드로부터 정보얻기가 힘들었고요

261
00:13:22,750 --> 00:13:25,220
냉장고는 그나마 가능하긴 한데

262
00:13:25,220 --> 00:13:30,260
잔고 자체가 제이썬 api 보다는 그 템플릿 엔진을 써가지고

263
00:13:30,260 --> 00:13:32,040
html 리스폰스를 내려 주는데

264
00:13:32,040 --> 00:13:35,420
최적화 되어 있어서 좀 애매한 감이 있습니다

265
00:13:35,420 --> 00:13:39,330
그래서 잔고란 플러스 코드로는 좀 분

266
00:13:39,330 --> 00:13:45,570
api 아내를 만들어내기가

267
00:13:45,570 --> 00:13:49,010
그래도 둘 다 이제 익스텐션을 사용하면 충분히 가능한 데

268
00:13:49,010 --> 00:13:54,110
먼저 잔고 부터 어떻게 하는지 보겠습니다

269
00:13:54,110 --> 00:13:56,990
장고 sapi 서버를 만들려면

270
00:13:56,990 --> 00:14:00,270
이제 잔고 라이트 프레임워크를 쓰는 게 좋은데

271
00:14:00,270 --> 00:14:02,000
일단 작업이 랩핑을 해서

272
00:14:02,000 --> 00:14:04,470
그 더 쓰기 좋게 되어 있고요

273
00:14:04,470 --> 00:14:06,050
뷰가 다음에 모델

274
00:14:06,050 --> 00:14:09,470
벧엘과 같은 제네렉 비가 엄청 잘 되어 있는데

275
00:14:09,470 --> 00:14:11,330
여기 시리얼라이저 말 어떤 것인지

276
00:14:11,330 --> 00:14:13,860
명시를 하면은 크레이그 리스트

277
00:14:13,860 --> 00:14:15,940
리트리브 업데이트 딜리트

278
00:14:15,940 --> 00:14:19,380
이런 메소드들을 한 번에 다 만들어 줍니다

279
00:14:19,380 --> 00:14:22,530
여기서 시리얼라이저 라는 개념이 등장하는데

280
00:14:22,530 --> 00:14:25,880
10실 보시면은 일단 스피커라는 잔고

281
00:14:25,880 --> 00:14:29,650
모델 오브젝트가 있을 때 이거를 스피커

282
00:14:29,650 --> 00:14:33,020
시리얼라이저 에 넣으면은 지정된 필드만 정해진 형식으로

283
00:14:33,020 --> 00:14:38,330
이렇게 위로 변환해줍니다

284
00:14:38,330 --> 00:14:40,930
이거 이 경우는 보통 HP 를 테스트로

285
00:14:40,930 --> 00:14:43,300
클라이언트에서 이제 입력한 값을 처리할 때

286
00:14:43,300 --> 00:14:44,750
이렇게 되는데요

287
00:14:44,750 --> 00:14:47,010
거리를 시리얼라이저 데이터로

288
00:14:47,010 --> 00:14:50,100
이렇게 나오면은 밸리데이션 도 할 수가 있구요

289
00:14:50,100 --> 00:14:51,500
아래처럼 바로 모델

290
00:14:51,500 --> 00:14:55,220
어떻게 빛의 넣을 수 있는 데로 잘 바꿔줍니다

291
00:14:55,220 --> 00:14:57,320
여기서 크레이트 plaza

292
00:14:57,320 --> 00:14:59,890
티타임은 보통 자동생성 돼서

293
00:14:59,890 --> 00:15:00,930
굳이 입력하지 않아도 되는데

294
00:15:00,930 --> 00:15:03,430
여기서는 스트링이 데이트타임

295
00:15:03,430 --> 00:15:09,950
오브젝트로 되는 거를 보여 드리기 위해서 나왔음

296
00:15:09,950 --> 00:15:12,740
그리고 심지어 그 밸리데이션을 통보한 상태면

297
00:15:12,740 --> 00:15:14,700
그냥 이렇게 시리얼라이저

298
00:15:14,700 --> 00:15:18,080
다 세이브 만 해도 뒤에 바로 적용했어요

299
00:15:18,080 --> 00:15:21,400
이번 스피커가 추가되는 모습이고요

300
00:15:21,400 --> 00:15:22,200
내일까지 있다

301
00:15:22,200 --> 00:15:23,350
나올 거야 참고 api

302
00:15:23,350 --> 00:15:27,170
문서 생성을 핵심이 되는 시리얼라이저 에 대한 내용이었구요

303
00:15:27,170 --> 00:15:30,140
계속 보면 트위터 리셋을 이용을 하면은

304
00:15:30,140 --> 00:15:33,710
이제 클라이언트에서 api 결과를 필터 할 수 있는 이제

305
00:15:33,710 --> 00:15:37,730
파라미터들을 저절로 잘 만들어 주고 주고

306
00:15:37,730 --> 00:15:40,980
퓨마 다 팔 미션 클래스를 넣어서 좀 권한 관리

307
00:15:40,980 --> 00:15:43,650
더 쉽게 할 수 있습니다

308
00:15:43,650 --> 00:15:45,070
그리고 그 오픈 API

309
00:15:45,070 --> 00:15:48,290
스키머를 기본적으로 생성해주는 기능이 있는데

310
00:15:48,290 --> 00:15:50,060
이거는 잘 안 써요

311
00:15:50,060 --> 00:15:53,500
그 이유는 이따가 나올 거고요

312
00:15:53,500 --> 00:15:55,330
예 그래서 그랬지 표현하려

313
00:15:55,330 --> 00:15:59,810
이럴 때 프레임워크를 쓰는 것이 좋은데

314
00:15:59,810 --> 00:16:04,040
jest 프레임워크 위에서 API 문서를 생성해주는 라이브러리는

315
00:16:04,040 --> 00:16:07,780
이제 크게 이렇게 두 가지가 있었는데

316
00:16:07,780 --> 00:16:10,360
그중 잔고 레스트 스웨거

317
00:16:10,360 --> 00:16:13,960
라는 라이브러리가 지난 6월에 trick 되면서

318
00:16:13,960 --> 00:16:19,090
이제 산골에 trimethacrylate dryas

319
00:16:19,090 --> 00:16:23,680
하나만 남았습니다 해서 지금부터 griffis

320
00:16:23,680 --> 00:16:25,370
지금 어떻게 작동하는 지라

321
00:16:25,370 --> 00:16:33,820
난 어떻게 사용하면 되는지 설명 드리겠습니다

322
00:16:33,820 --> 00:16:34,950
verify AS

323
00:16:34,950 --> 00:16:36,570
지는 제비 마다 설정된 아까

324
00:16:36,570 --> 00:16:39,550
오셨던 시리얼라이저 들을 갖고 와서 이렇게 쓰라고

325
00:16:39,550 --> 00:16:39,890
리스폰

326
00:16:39,890 --> 00:16:41,880
스키마를 생성을 하고요

327
00:16:41,880 --> 00:16:45,480
자동생성기 잘 안될 경우에는 오버라이드할 수 있도록

328
00:16:45,480 --> 00:16:48,860
데코레이터 유틸도 잘 되어 있습니다

329
00:16:48,860 --> 00:16:51,150
어 그리고 오픈 api 식탁

330
00:16:51,150 --> 00:16:54,470
2.0 에 맞춰서 아메를 자체 생성하는데

331
00:16:54,470 --> 00:16:57,450
그 trf 갈비집 기본적으로 제공하는 게 아무리 3.0

332
00:16:57,450 --> 00:17:02,690
버전 인데도 거의 사용하지 않고 직접 생성

333
00:17:02,690 --> 00:17:05,400
왜냐면 그 기본적인 기본 제공

334
00:17:05,400 --> 00:17:07,220
그야 메일 좀 상태가 좋지가 않은데

335
00:17:07,220 --> 00:17:09,090
그런 저희 제품 중에

336
00:17:09,090 --> 00:17:13,050
건강검진 기록을 다른 api 에서 예시를 다운 건데요

337
00:17:13,050 --> 00:17:15,200
그 왼쪽에 레스트 프레임워크 기본 제공

338
00:17:15,200 --> 00:17:18,710
야멜 보시면은 페이지네이션 관련해서 뭐 카운트

339
00:17:18,710 --> 00:17:22,720
넥스트플러스 이런 파라미터도 하나도 없고요

340
00:17:22,720 --> 00:17:24,140
그리고 이 아이디 데이트

341
00:17:24,140 --> 00:17:27,870
패키지 3부분으로 나타나 있는 우측

342
00:17:27,870 --> 00:17:31,900
하단에 보시면 프랑스로 써 있는 레코드 부분인데

343
00:17:31,900 --> 00:17:35,440
이것도 레퍼런스 없이 그냥 하드코딩 돼 있고

344
00:17:35,440 --> 00:17:38,810
다음에 이제 리코드 올리라고 명시를 해 줘야 되는데

345
00:17:38,810 --> 00:17:41,090
그런 정보도 하나도 없습니다

346
00:17:41,090 --> 00:17:43,270
그래서 YS 지가

347
00:17:43,270 --> 00:17:48,130
그 drf 제공 양해를 쓰지 않는 거고요

348
00:17:48,130 --> 00:17:52,150
서울 이게 어떻게 그 오픈 API 연애를 생성을 하는 집

349
00:17:52,150 --> 00:17:54,330
데려다 보려고 하는데

350
00:17:54,330 --> 00:17:58,570
지금 잔고 그 역할을 패턴 새해에는 이렇게 어떤 &

351
00:17:58,570 --> 00:17:59,930
P 에서 어떤 글쎄

352
00:17:59,930 --> 00:18:00,660
잘 쓰는지

353
00:18:00,660 --> 00:18:02,870
어떤 기기를 사용한지 이렇게 저장이 되어 있는데

354
00:18:02,870 --> 00:18:06,720
이걸 M 라이트를 하면서 연애를 생성을 하는 거고요

355
00:18:06,720 --> 00:18:07,550
까까 글쎄

356
00:18:07,550 --> 00:18:10,500
그 시리얼라이저 만 이렇게 하면 알아서 개

357
00:18:10,500 --> 00:18:14,000
토스트 등 다 메세지를 만들어 준다고 했던

358
00:18:14,000 --> 00:18:17,810
걔네들이 있는데 이 중에서 맨 위에 있는 스티커

359
00:18:17,810 --> 00:18:23,940
psn 만 좀 덮어 보도록 하겠습니다

360
00:18:23,940 --> 00:18:28,370
이런 식으로 비세 시리얼라이저 클래스가 들어 있고

361
00:18:28,370 --> 00:18:32,010
스피커 시리얼라이저 오른쪽처럼 어떤 모델을 쓰고

362
00:18:32,010 --> 00:18:35,950
또 어떤 필드를 쓰는지 정보를 가지고 있습니다

363
00:18:35,950 --> 00:18:36,980
여기서 시리얼라이즈 안에

364
00:18:36,980 --> 00:18:40,820
또 시리얼라이저 가 들어갈 수가 있는데

365
00:18:40,820 --> 00:18:42,470
이런 식으로 오르가니제이션

366
00:18:42,470 --> 00:18:43,490
시리얼라이저 마제스티

367
00:18:43,490 --> 00:18:46,780
디시리얼라이저 로 붙어 있는 상황이고요

368
00:18:46,780 --> 00:18:49,800
저 시리얼라이저 들로부터 이렇게 스트와 리스펀스

369
00:18:49,800 --> 00:18:52,340
쪽잠 애를 만들어냄 이거 해

370
00:18:52,340 --> 00:19:03,030
줘 놓고 데를 한번 살짝 보겠습니다

371
00:19:03,030 --> 00:19:04,280
이건 api 문서

372
00:19:04,280 --> 00:19:08,310
페이지 접속하면 실행되는 그 규성 찾는데요

373
00:19:08,310 --> 00:19:10,160
지면 스키마 제너레이터에

374
00:19:10,160 --> 00:19:13,250
스키마로 얻은 스키마를 죄를 선수로 내려줍니다

375
00:19:13,250 --> 00:19:18,040
저 말을 타고 가 보면은 오픈 api

376
00:19:18,040 --> 00:19:21,170
스키마 제너레이터의 스키마 먼저

377
00:19:21,170 --> 00:19:24,340
화를 패턴 3에서 갖고 온 엔드포인트를 가지고

378
00:19:24,340 --> 00:19:26,850
이제 패스를 가져옵니다

379
00:19:26,850 --> 00:19:30,980
여기서 패스에는 아까 봤던 화면에서 apis

380
00:19:30,980 --> 00:19:34,940
테이블 갖고 있는 핵심 부분이었고

381
00:19:34,940 --> 00:19:36,680
그래서 개 테스트 코드를 보시면

382
00:19:36,680 --> 00:19:40,120
엔드포인트를 이터레이션 하면서 백합 API

383
00:19:40,120 --> 00:19:44,010
URL 메소드 별로 오퍼레이션을 뽑아내는데

384
00:19:44,010 --> 00:19:45,950
비서 오퍼레이션은 이 부분

385
00:19:45,950 --> 00:19:48,000
패스의 이 부분을 얘기를 합니다

386
00:19:48,000 --> 00:19:53,480
그래서 오퍼레이션 들을 모아서 패스를 만드는 거고요

387
00:19:53,480 --> 00:19:55,350
저 캔 오퍼레이션을 타고서

388
00:19:55,350 --> 00:19:58,510
이제 뷰 인스펙터에 괴롭혀 대전까지 들어가 보면

389
00:19:58,510 --> 00:20:01,300
이런 식으로 리퀘스트 파라미터란 리스폰스

390
00:20:01,300 --> 00:20:03,280
스키마를 구해서 모아서

391
00:20:03,280 --> 00:20:05,790
리턴을 해 주는 거를 볼 수 있고

392
00:20:05,790 --> 00:20:09,470
여기서 계속 리스폰스가 뭘 하는지를 보면은

393
00:20:09,470 --> 00:20:11,650
교회에서 시리얼라이저 를 갔다가

394
00:20:11,650 --> 00:20:14,470
이제 필드 인스펙터 라는 걸 제네시스

395
00:20:14,470 --> 00:20:17,410
시리얼라이저 소드 필드

396
00:20:17,410 --> 00:20:19,650
페이지네이션 이런 것들을 다 처리를 해서

397
00:20:19,650 --> 00:20:24,540
정확한 스키마를 만들어 냅니다

398
00:20:24,540 --> 00:20:26,940
내가 정리를 해 보면은 griffis

399
00:20:26,940 --> 00:20:32,260
주인은 restaurants 를 가져다가

400
00:20:32,260 --> 00:20:36,650
이제 저 아래 뷰클래스 맵핑을 획득을 하고요

401
00:20:36,650 --> 00:20:41,700
url 메소드 별로 내비 캐스트와 리스폰스를 찾는데

402
00:20:41,700 --> 00:20:44,330
이때 3대 인스펙터 로 네스티 시리얼라이즈

403
00:20:44,330 --> 00:20:46,960
이제 그 다양한 정보를 다 처리를 해서

404
00:20:46,960 --> 00:20:49,710
정확한 스키마를 만들어 냅니다

405
00:20:49,710 --> 00:20:51,270
이렇게 만든 스키마를 가지고

406
00:20:51,270 --> 00:20:54,400
오픈 api 예매를 생성을 하는 거고요

407
00:20:54,400 --> 00:20:56,850
아까 말씀드린 것처럼 이 안에만 있으면

408
00:20:56,850 --> 00:21:00,780
사실 문서는 새 걸로 하니까 다 그려주기 때문에

409
00:21:00,780 --> 00:21:05,390
이제 거의 되지 않아도 됩니다

410
00:21:05,390 --> 00:21:09,470
그래서 이거 어떻게 쓰는지 볼 건데

411
00:21:09,470 --> 00:21:11,970
예시 프로젝트를 하나 만들어 봤는데

412
00:21:11,970 --> 00:21:14,250
프로젝트 구조는 왼쪽에 보시는 거 같지

413
00:21:14,250 --> 00:21:16,320
엄청 간단하구요

414
00:21:16,320 --> 00:21:18,800
먼저 urls.PY 에 제 오픈 api

415
00:21:18,800 --> 00:21:22,940
SK 뷰 를 만들어서 등록을 합니다

416
00:21:22,940 --> 00:21:25,310
저 독스 팩스로 접속을 하면은

417
00:21:25,310 --> 00:21:28,230
이제 문서가 나오게 되는 거고요

418
00:21:28,230 --> 00:21:30,520
회의 때 비를 만들면서 API 이름이나 뭐

419
00:21:30,520 --> 00:21:33,320
버전 같은 정보들을 적어 주고요

420
00:21:33,320 --> 00:21:35,670
이렇게만 해 놓으면 사실 그 모든 AP

421
00:21:35,670 --> 00:21:38,470
아이들 다 찾아서 알아서 해 주기 때문에

422
00:21:38,470 --> 00:21:43,300
90% 는 끝나는 거나 다름없습니다

423
00:21:43,300 --> 00:21:45,320
더 직접 간단한 api 를 만들어서

424
00:21:45,320 --> 00:21:48,190
윤서가 어떻게 생성되는지 볼 건데요

425
00:21:48,190 --> 00:21:50,470
오른쪽은 발표자를 관리하는 모델과

426
00:21:50,470 --> 00:21:52,670
뷰티클래스를 만들어 봤는데

427
00:21:52,670 --> 00:21:56,500
모델 먼저 보시면 프라이머리키 이메일

428
00:21:56,500 --> 00:21:59,060
네임 이런 일들이 있고

429
00:21:59,060 --> 00:22:00,400
남의 발표자 소속 회사

430
00:22:00,400 --> 00:22:04,220
인월가는 제이션 franko 붙어 있습니다

431
00:22:04,220 --> 00:22:08,910
그리고 아래쪽은 모델 비슷해지는 세절 만에 스티커북

432
00:22:08,910 --> 00:22:09,960
클레이트리

433
00:22:09,960 --> 00:22:11,610
스트리트 업데이트 딜리트

434
00:22:11,610 --> 00:22:15,310
api 를 모두 한 번에 생성을 하는 모습이고요

435
00:22:15,310 --> 00:22:18,420
여기서 이렇게 어떤 이렇게 파라미터를 받고

436
00:22:18,420 --> 00:22:20,460
어떤 리스폰스를 내려 주는지

437
00:22:20,460 --> 00:22:23,360
시리얼라이저 클래스가 결정을 하는데

438
00:22:23,360 --> 00:22:24,750
스피커 시리얼라이저 가

439
00:22:24,750 --> 00:22:30,070
어떻게 생겼는지 한번 보겠습니다

440
00:22:30,070 --> 00:22:33,010
먼저 아래쪽에 메타 클래스를 보시면은

441
00:22:33,010 --> 00:22:34,970
스피커 모델을 사용하고

442
00:22:34,970 --> 00:22:39,360
또 모든 스피커 모드로 있는 모든 표제를 사용한다고

443
00:22:39,360 --> 00:22:40,920
이렇게 써 놨고요

444
00:22:40,920 --> 00:22:42,960
루이제 프랭키 처리를 해야 되는데

445
00:22:42,960 --> 00:22:46,530
그 리퀘스트 파라미터를 읽어 볼 때는 그냥 오르가니제이션

446
00:22:46,530 --> 00:22:48,960
아이디를 인티저로 받아오고

447
00:22:48,960 --> 00:22:52,220
리스폰스 내려 줄 때는 오브젝트로 펼쳐서

448
00:22:52,220 --> 00:22:54,460
그 갖고 싶단 말이에요

449
00:22:54,460 --> 00:22:56,270
그래서 이렇게 우리도 언니랑 라이트

450
00:22:56,270 --> 00:22:58,540
월례회를 나눠 놨고요

451
00:22:58,540 --> 00:23:01,100
3등은 리필 대로 오르가니제이션

452
00:23:01,100 --> 00:23:05,150
시리얼라이저 릴레이 티드 시리얼라이저 로 넣어 줘

453
00:23:05,150 --> 00:23:06,810
다음에 울 가지신 아이디는

454
00:23:06,810 --> 00:23:11,220
이렇게 인티저로 받을 수 있게 설정해 놨습니다

455
00:23:11,220 --> 00:23:14,160
서 여기 이렇게 요청을 보내 보면은 저울관리

456
00:23:14,160 --> 00:23:15,500
제이슨 아이디어 1번으로

457
00:23:15,500 --> 00:23:18,380
이렇게 어린 시절을 보내면은 생산 결과

458
00:23:18,380 --> 00:23:20,170
응답 에서는 오가니제이션

459
00:23:20,170 --> 00:23:21,630
이렇게 오브젝트로 펼쳐져서

460
00:23:21,630 --> 00:23:25,730
나오는 것을 보실 수 있습니다

461
00:23:25,730 --> 00:23:28,620
이렇게 해서 간단하게 api 를 만들어 갔는데

462
00:23:28,620 --> 00:23:31,550
이게 바로 이렇게 문서로 생성이 되고

463
00:23:31,550 --> 00:23:33,620
위도 과일을 사용을 했는데

464
00:23:33,620 --> 00:23:38,120
이렇게 깔끔하게 만들어진 것을 보실 수 있습니다

465
00:23:38,120 --> 00:23:39,900
근데 여기서 이렇게 스트랑 리스폰스

466
00:23:39,900 --> 00:23:43,500
락 리스폰스가 좀 이상한데

467
00:23:43,500 --> 00:23:44,910
그리스 언니랑 라이트 원리로

468
00:23:44,910 --> 00:23:48,940
설정에 좀 필드들이 그 양쪽에 다 들어 있고요

469
00:23:48,940 --> 00:23:50,880
그리고 내일 디시리얼라이저 로

470
00:23:50,880 --> 00:23:52,770
그 오르가니제이션 에다가 부칠 때

471
00:23:52,770 --> 00:23:55,930
이제 헬스 텍스트로 위드 올립니다 써 놨는데

472
00:23:55,930 --> 00:23:59,040
그것도 여기 안 들어왔음

473
00:23:59,040 --> 00:24:02,520
그래도 이런 걸 빼면은 0G 코드작성

474
00:24:02,520 --> 00:24:07,230
왜 아무것도 안 해도 거의 완벽하게 문서를 보여준다는 점에서

475
00:24:07,230 --> 00:24:09,170
지금 존재하는 라이브러리 중에

476
00:24:09,170 --> 00:24:13,540
가장 좋다고 할 수 있습니다

477
00:24:13,540 --> 00:24:15,430
근데 만약에 이렇게 그 스피커

478
00:24:15,430 --> 00:24:16,200
시리얼라이즈 랑

479
00:24:16,200 --> 00:24:18,060
관련 이 없는 그냥 발표

480
00:24:18,060 --> 00:24:24,130
접수를 해서 내려주는 api 가 있다면 어떻게 될까요

481
00:24:24,130 --> 00:24:25,640
galaxy S7

482
00:24:25,640 --> 00:24:27,800
기본적으로 시리얼라이저 에서만

483
00:24:27,800 --> 00:24:31,200
그 리퀘스트가 이십사시 정보를 가져 오기 때문에

484
00:24:31,200 --> 00:24:32,630
스피커 카운티 api 가

485
00:24:32,630 --> 00:24:34,510
어떤 이렇게 파라미터를 받는지

486
00:24:34,510 --> 00:24:38,320
또 뭐 어떤 리스폰스를 내려주는 지 알 방법이 없어요

487
00:24:38,320 --> 00:24:41,530
똑같이 그 저기 그 시리얼라이즈

488
00:24:41,530 --> 00:24:47,810
만 보고 싶은 스키마를 작성한 걸 보실 수가 있구요

489
00:24:47,810 --> 00:24:52,030
이걸 해결 하려면 어쩔 수 없이 이렇게 apieu Store

490
00:24:52,030 --> 00:24:54,730
스포츠 정보를 적어 줘야 되는데

491
00:24:54,730 --> 00:24:58,370
이게 지금 200호 된 경우 하나의 대해서 맛없고

492
00:24:58,370 --> 00:25:02,620
다음에 리퀘스트 파라미터도 없이 리스폰스 만 적었기 때문에

493
00:25:02,620 --> 00:25:06,340
코드가 이정도지 우리퀘스트 파라미터가 있다거나

494
00:25:06,340 --> 00:25:13,390
코드를 추가를 하고 싶다고 나는 굉장히 길어집니다

495
00:25:13,390 --> 00:25:16,960
그래서 이렇게 차라리 실제로 집에서 쓰지 않더라도

496
00:25:16,960 --> 00:25:19,020
맨 위에 보시는 것처럼 스티커 카운트

497
00:25:19,020 --> 00:25:21,480
시리얼라이즈 이런 거를 만들어서

498
00:25:21,480 --> 00:25:22,880
그 데코레이터에 넣어 주는 게

499
00:25:22,880 --> 00:25:25,150
코드가 훨씬 더 깔끔하고요

500
00:25:25,150 --> 00:25:26,790
이렇게 달아 주면은 이제 자

501
00:25:26,790 --> 00:25:30,990
인식해서 제대로 작성하는 거 보실 수 있습니다

502
00:25:30,990 --> 00:25:35,660
이렇게 위드가인 인티저 다 잘 나왔죠

503
00:25:35,660 --> 00:25:36,650
그래서 이제 장고

504
00:25:36,650 --> 00:25:40,710
레스트 프레임워크를 사용하실때는 이렇게 간단하게 설정하셔서

505
00:25:40,710 --> 00:25:45,890
문제 문서를 바로 생성 할 수가 있고

506
00:25:45,890 --> 00:25:48,100
몇 가지 한 개 점들이 있는데

507
00:25:48,100 --> 00:25:50,310
아까 보셨듯이 미드 언니랑 라이트

508
00:25:50,310 --> 00:25:52,960
언리쉬드를 인식을 못 하고요

509
00:25:52,960 --> 00:25:54,800
다음에 시리얼라이저블 쓰지 않는 A pin

510
00:25:54,800 --> 00:25:58,800
은 좀 직접 선택을 적어 줘

511
00:25:58,800 --> 00:26:01,870
이거는 뭘 쓰든 똑같이 마찬가지라서

512
00:26:01,870 --> 00:26:05,210
큰 단점은 아니라고 생각을 하고요

513
00:26:05,210 --> 00:26:08,860
그리고 여태 보신 스크린샷 드리도록 유아인 데

514
00:26:08,860 --> 00:26:11,380
여기는 그 http 리퀘스트를 보내

515
00:26:11,380 --> 00:26:14,370
볼 수 있는 기능이 없어

516
00:26:14,370 --> 00:26:19,440
근데 이제 스웨거 UI 에는 새 거

517
00:26:19,440 --> 00:26:21,160
유아기에는 그런 기능이 있긴 한데

518
00:26:21,160 --> 00:26:23,250
좀 그 예쁘지가 않아서

519
00:26:23,250 --> 00:26:25,790
보기가 안 좋아서 쓰지 않고 있고요

520
00:26:25,790 --> 00:26:28,170
이런 식으로 필드가 좀 7시간

521
00:26:28,170 --> 00:26:33,470
케 생겨서 저는 의지가 애를 쓰고 있습니다

522
00:26:33,470 --> 00:26:34,830
이거 지금 오픈 api 스펙

523
00:26:34,830 --> 00:26:36,130
최신 버전은 3.0

524
00:26:36,130 --> 00:26:40,500
점 2인데 2.0 을 쓰고 있어 3.0 해석

525
00:26:40,500 --> 00:26:43,530
좀 구조가 간단하게 변했고

526
00:26:43,530 --> 00:26:46,800
그 다음에 좀 더 표현할 수 있는 게 더 일어나긴 했는데

527
00:26:46,800 --> 00:26:50,940
기능 상에는 큰 차이가 없어서 괜찮구요

528
00:26:50,940 --> 00:26:53,450
궁금하신 분들은 아래의 링크에서 3.0

529
00:26:53,450 --> 00:26:58,200
버전 에 대해 확인하실 수 있습니다

530
00:26:58,200 --> 00:27:00,720
네 여기까지가 장보면서 자동 생성 있고요

531
00:27:00,720 --> 00:27:12,320
이제 플라스크에서 는 어떻게 하는지 한번 보겠습니다

532
00:27:12,320 --> 00:27:13,700
플라스크 도장골 ST

533
00:27:13,700 --> 00:27:16,250
프레임워크 처럼 익스텐션을 사용해야만

534
00:27:16,250 --> 00:27:18,840
제 api 문서 생성을 쉬운데

535
00:27:18,840 --> 00:27:22,060
그중 하나가 플러스 크레스트 풀이라는 건데요

536
00:27:22,060 --> 00:27:26,010
제가 알아 보시는 것처럼 단위로 귤을 만듭니다

537
00:27:26,010 --> 00:27:31,150
오시면 투덜이 슬슬 정리를 해서 이렇게 메소드를 만들어 놨지요

538
00:27:31,150 --> 00:27:32,510
이런 식으로 하고

539
00:27:32,510 --> 00:27:33,670
다음에 여기서 내릴 KT

540
00:27:33,670 --> 00:27:36,510
파라미터가 없어서 안 나왔는데

541
00:27:36,510 --> 00:27:38,310
자기만 gps 를 미리 만들어서

542
00:27:38,310 --> 00:27:40,540
이렇게 파라미터를 정리를 하고

543
00:27:40,540 --> 00:27:42,540
위스퍼스 키마 도저히 보시는 것처럼

544
00:27:42,540 --> 00:27:44,240
미소를 스피리츠 처럼

545
00:27:44,240 --> 00:27:46,470
미리 정리를 해 놓고 사용을 합니다

546
00:27:46,470 --> 00:27:48,290
저 딱 봐도 이거는 이거를 가지고

547
00:27:48,290 --> 00:27:53,180
이제 문서를 작성하면 될 거 같죠

548
00:27:53,180 --> 00:27:56,450
플라스크 레시피 플러스라는 것도 있는데

549
00:27:56,450 --> 00:27:58,660
처음에 플라스크 레시피 위해서 API

550
00:27:58,660 --> 00:28:02,640
문서만 생성해주는 라이브러리로 시작을 했고요

551
00:28:02,640 --> 00:28:05,460
그 API 문서 했으니까

552
00:28:05,460 --> 00:28:08,950
당연히 자체 생산 기능이 탑재가 되어 있 나머지

553
00:28:08,950 --> 00:28:12,660
포레스트 구하는 유틸 등은 이제 플라스크

554
00:28:12,660 --> 00:28:14,950
레스트풀 하고 거의 같습니다

555
00:28:14,950 --> 00:28:18,880
거기서 개발도 지금 요즘에 더 활발하게 되고 있어서

556
00:28:18,880 --> 00:28:20,300
사실상 현재 플러스

557
00:28:20,300 --> 00:28:21,330
생태계에서는 레스트

558
00:28:21,330 --> 00:28:26,300
플러스가 제일 좋다고 얘기를 할 수 있습니다

559
00:28:26,300 --> 00:28:28,870
만약에 레스트 플러스를 쓰지 않는다면

560
00:28:28,870 --> 00:28:33,210
JK 민서를 생성을 하기 위해서 쓸 수 있는 라이브러리가

561
00:28:33,210 --> 00:28:34,950
크게 플러스 크레스트 플스 4

562
00:28:34,950 --> 00:28:38,800
이거 그 다음에 sqlite 플러스 크레스트

563
00:28:38,800 --> 00:28:42,700
이거 이렇게 두 가지 정도 있는데

564
00:28:42,700 --> 00:28:44,500
flask restful 이거는

565
00:28:44,500 --> 00:28:48,330
이제 기존 프로젝트가 오픈 api 선택

566
00:28:48,330 --> 00:28:51,490
1.2 버전 을 지원하는 상태에서 멈춰 버렸구요

567
00:28:51,490 --> 00:28:57,150
새로 시작한 2.0 조별로 지금 활발히 개발되고 있지는 않아요

568
00:28:57,150 --> 00:29:00,720
sqlite 플러스 클래스풀 새 거는

569
00:29:00,720 --> 00:29:03,230
그리고 그 DB 모델의 이제 은서

570
00:29:03,230 --> 00:29:04,990
생산관련 클래스를 상속하는 좀

571
00:29:04,990 --> 00:29:07,360
독특한 방법을 쓰고 있는데

572
00:29:07,360 --> 00:29:08,390
이게 문제가 모델하고

573
00:29:08,390 --> 00:29:12,760
직접이 직접 관련되지 않은 메소드들은 독스트링

574
00:29:12,760 --> 00:29:15,520
해도 이전을 하고 있습니다

575
00:29:15,520 --> 00:29:17,450
이런 식으로 뭐 샌드 매일같이

576
00:29:17,450 --> 00:29:20,710
그 기본 crud 메소드에서 벗어나는 애들은

577
00:29:20,710 --> 00:29:24,770
이렇게 독스트링 으로 다 일일이 적어 줘야 되고요

578
00:29:24,770 --> 00:29:30,080
인덴테이션 도사 맞춰 줘야 돼서 굉장히 귀찮아

579
00:29:30,080 --> 00:29:34,750
사실상 플러스 크래프트 플러스가 유일한 선택지 고요

580
00:29:34,750 --> 00:29:36,840
이거를 코드로 이제 어떻게 쓰는지

581
00:29:36,840 --> 00:29:38,590
여실 보여 드릴 건데

582
00:29:38,590 --> 00:29:40,690
먼저 플라스크 앱을 만들고요

583
00:29:40,690 --> 00:29:46,240
다음에 베스트 플러스 해서 인포젠 api 로 한번 감싸줍니다

584
00:29:46,240 --> 00:29:50,270
작동원리는 아까 그 drf ysg 랑 비슷하니까

585
00:29:50,270 --> 00:29:54,540
그냥 넘어가도록 하고요

586
00:29:54,540 --> 00:29:55,810
그리고 아까 장 거랑

587
00:29:55,810 --> 00:29:58,460
똑같이 그 스티커랑 오르가니제이션

588
00:29:58,460 --> 00:30:01,430
모델을 만들어 봤고요

589
00:30:01,430 --> 00:30:02,510
이건 api 사용

590
00:30:02,510 --> 00:30:06,270
와이프 타고 아웃풋을 미리 정해 놓은 코디인데요

591
00:30:06,270 --> 00:30:07,820
먼저 스피커 아홉시 돼서

592
00:30:07,820 --> 00:30:10,180
크레스트 대표들을 사용할 오가니제이션

593
00:30:10,180 --> 00:30:13,220
아웃풋을 전화를 해 놨고

594
00:30:13,220 --> 00:30:15,970
스피커 api 리스폰스 에서 사용할 스피커

595
00:30:15,970 --> 00:30:18,610
아웃풋을 정리를 해 줬습니다

596
00:30:18,610 --> 00:30:21,920
그리고 아래는 리퀘스트 파라미터로

597
00:30:21,920 --> 00:30:26,560
이제 인터넷을 알기만 스팟으로 정해 해 줘

598
00:30:26,560 --> 00:30:27,880
박과장 거랑 똑같이

599
00:30:27,880 --> 00:30:31,690
리퀘스트 에서는 오가니제이션 아이디를 인티저로 받고

600
00:30:31,690 --> 00:30:33,940
그다음에 리스폰스를 받을 때는

601
00:30:33,940 --> 00:30:39,500
제 오브젝트로 펼쳐서 받을 수 있도록 해 줬습니다

602
00:30:39,500 --> 00:30:44,040
이걸 사용해서 주연한 api 뷰클래스 코디인데요

603
00:30:44,040 --> 00:30:45,990
제일 먼저 봐야 될 게 없다

604
00:30:45,990 --> 00:30:47,490
드라우트 가 아니라 api

605
00:30:47,490 --> 00:30:50,090
다들 아우트로 비율을 등록을 해서

606
00:30:50,090 --> 00:30:53,150
그 문서 생성을 준비를 해 주려고 있고요

607
00:30:53,150 --> 00:30:54,910
그다음에 리스트 api

608
00:30:54,910 --> 00:30:58,060
이제 크리에이트 api 를 간단하게 해 봤는데

609
00:30:58,060 --> 00:31:00,780
리스트는 이렇게 마샬 리스트

610
00:31:00,780 --> 00:31:05,030
위드로지스 포스타입 월요일 하는 걸 명시를 해 줬고

611
00:31:05,030 --> 00:31:10,020
아빠 정해 놨던 스피커 나오면 이제 그대로 리스트 만들어지고

612
00:31:10,020 --> 00:31:12,010
api 문서 해도 자동으로 들어갑니다

613
00:31:12,010 --> 00:31:19,190
파라미터가 필요해서 앞에서만 들어오는 아까 봤어

614
00:31:19,190 --> 00:31:22,650
그 스피커 인풋 api

615
00:31:22,650 --> 00:31:26,860
익스펙트 에 넣어서 문서에 나타나도록 해 주고요

616
00:31:26,860 --> 00:31:29,810
나 실제로 집에서도 이렇게 알게 만들어 갖고 와서

617
00:31:29,810 --> 00:31:32,880
스피커 모델의 넣어주는 모습입니다

618
00:31:32,880 --> 00:31:34,050
그리고 크리에이트 결과

619
00:31:34,050 --> 00:31:35,950
리스폰스를 내려 줘야 돼서

620
00:31:35,950 --> 00:31:39,480
마샬 위드도 같이 달아 주고요

621
00:31:39,480 --> 00:31:42,910
네 오른쪽은 이렇게 생성한 api 를 호출하는 결과입니다

622
00:31:42,910 --> 00:31:47,520
아까 잠 거랑 똑같죠

623
00:31:47,520 --> 00:31:50,360
여기까지만 하면 제로 G 코드

624
00:31:50,360 --> 00:31:51,850
작성해 해도 별거 안 했는데

625
00:31:51,850 --> 00:31:57,860
그렇게 깔끔한 API 민서를 날로 먹을 수가 있습니다

626
00:31:57,860 --> 00:32:02,120
이제 결론은 백신을 어떻게든 그 오픈 api

627
00:32:02,120 --> 00:32:05,120
아메리 낮에 이성을 생성하기 만 하면은 GS 이거

628
00:32:05,120 --> 00:32:08,250
이거 이거 다 그려진다는 거였구요

629
00:32:08,250 --> 00:32:12,820
다음에 잔고란 플라스크 외에도 보틀 바이버 라고

630
00:32:12,820 --> 00:32:16,990
이런 것들도 다 라우팅 정보를 저장했더니 객체를 가지고 있어

631
00:32:16,990 --> 00:32:19,690
이거를 런타임에 가져와서 그 오픈 api

632
00:32:19,690 --> 00:32:22,060
스키마를 생성을 할 수가 있고

633
00:32:22,060 --> 00:32:24,990
그 센의 경우에는 그 플러스 크레스트

634
00:32:24,990 --> 00:32:27,420
플러스 에서 파생된 건데

635
00:32:27,420 --> 00:32:28,460
그 센 EX 플러스

636
00:32:28,460 --> 00:32:31,010
라는 게 있어서 보시면 좋을 거 같고요

637
00:32:31,010 --> 00:32:36,220
배터리랑 5라는 좀 검색을 해 봤는데 안 나오더라고요

638
00:32:36,220 --> 00:32:38,610
그리고 마지막으로 잔고를 쓸 때는 drf

639
00:32:38,610 --> 00:32:41,370
yas 씨를 쓰시면 되고

640
00:32:41,370 --> 00:32:43,570
남의 플라스크를 쓸땐 플러스

641
00:32:43,570 --> 00:32:48,930
플러스 플러스 문서를 생성을 하시면 되겠습니다

642
00:32:48,930 --> 00:32:50,910
일단 여기까지고요

643
00:32:50,910 --> 00:32:52,090
잠깐 회사 온 걸로 하자

644
00:32:52,090 --> 00:32:54,350
하면은 저 섞여 있는 에이아이트릭스 있는지

645
00:32:54,350 --> 00:32:56,810
에이아이솔루션 회사인데

646
00:32:56,810 --> 00:32:58,400
지금 세브란스병원과 같이

647
00:32:58,400 --> 00:33:02,310
의료쪽 솔루션을 개발을 하고 있습니다

648
00:33:02,310 --> 00:33:05,130
개발자랑 머신러닝엔지니어 채용 중이니까

649
00:33:05,130 --> 00:33:06,810
만점 부탁드리고 다음에

650
00:33:06,810 --> 00:33:10,590
저희 회사에서 이번에 발표를 하게 됐는데

651
00:33:10,590 --> 00:33:14,940
하나는 지금 동시에 진행되서 보실 수가 없을 거고

652
00:33:14,940 --> 00:33:16,270
그 한시 오십오분 두시

653
00:33:16,270 --> 00:33:17,330
오십오분 에 또 발표

654
00:33:17,330 --> 00:33:19,170
재밌는 거 있으니까 참관 바랍니다

655
00:33:19,170 --> 00:33:22,210
네 끝까지 들어 주셔서 감사드립니다
