1
00:00:01,770 --> 00:00:06,560
안녕하세요 다들 일요일 아침에 어떻게 나

2
00:00:06,560 --> 00:00:08,550
지금 10시까지 나오는 게 쉽지가 않잖아

3
00:00:08,550 --> 00:00:11,700
다들 늦잠 자기 편하게 늦잠 자야 되는데

4
00:00:11,700 --> 00:00:15,420
그래도 아침에 이렇게 들어가 들어가 주시면 감사드립니다

5
00:00:15,420 --> 00:00:17,150
그리고 제가 알기로

6
00:00:17,150 --> 00:00:21,450
원래 그 슬라이드 스크립트를 미리 전화를 드리면

7
00:00:21,450 --> 00:00:23,190
저 문자 통역이나 뭐

8
00:00:23,190 --> 00:00:25,830
이런 거 하시는 분들 도움이 된다고 들었는데

9
00:00:25,830 --> 00:00:27,330
그래서 미리 M

10
00:00:27,330 --> 00:00:30,860
준비를 못 해서 어느 분께서 타이핑을 하고 계신지 모르겠지만요

11
00:00:30,860 --> 00:00:36,450
양해 말씀 부탁드리고 네 화이팅입니다

12
00:00:36,450 --> 00:00:41,780
제가 오늘 발표할 내용은 2월 더씽 카이온 주제입니다

13
00:00:41,780 --> 00:00:44,280
오래 팔콘 리스트를 보니까

14
00:00:44,280 --> 00:00:47,870
생각보다 리얼 월드라는 이름을 붙인 속이 더 말고도

15
00:00:47,870 --> 00:00:48,660
몇 개가 더 있더라고

16
00:00:48,660 --> 00:00:54,190
여기서 이게 이제 제가 내용을 팝콘에서 요거

17
00:00:54,190 --> 00:00:57,120
네 네 번째로 발표를 하는 건데

18
00:00:57,120 --> 00:01:01,970
이게 이제 그동안에는 맨 처음에 발표했던 거는

19
00:01:01,970 --> 00:01:06,780
2016년에 파이썬에서 하이퍼포먼스 네트워킹을 하기 위해서

20
00:01:06,780 --> 00:01:09,050
우리가 더 신카이 오라는데 아니 있고

21
00:01:09,050 --> 00:01:11,070
이거를 이제 어떻게 활용을 그 과정에서

22
00:01:11,070 --> 00:01:15,300
제가 간단한 벤치마크 같으면 돌려보면서 파이 0Q0

23
00:01:15,300 --> 00:01:19,770
인표 라이브러리에서 성능이슈 같은 것들을 어떤 식으로 해결했는지

24
00:01:19,770 --> 00:01:21,780
뭐 이런 것들에 대한 얘기를 했었고

25
00:01:21,780 --> 00:01:25,480
그 다음에 2017년에는 AI 오툴 주라고 해서

26
00:01:25,480 --> 00:01:27,950
제가 신카이 글을 쓰면서

27
00:01:27,950 --> 00:01:31,080
계속 반복적으로 작성해야 되는 코드들이 돼 있더라

28
00:01:31,080 --> 00:01:32,900
그래서 그런 것들을 나름대로

29
00:01:32,900 --> 00:01:36,320
이제 라이브러리로 해서 만들었던 aio210

30
00:01:36,320 --> 00:01:40,760
라이브러리에 대해서 소개를 드렸고

31
00:01:40,760 --> 00:01:46,460
다음에 작년 5권에서는 원이라고 해서 어차피 이거 말고

32
00:01:46,460 --> 00:01:50,110
원래 agm2 라고 불리는 이제 또 다른 것인가요

33
00:01:50,110 --> 00:01:52,130
집안에 라이브러리가 있는데

34
00:01:52,130 --> 00:01:54,460
거기에서 제공되는 rpc

35
00:01:54,460 --> 00:01:58,120
라이브러리 클라이언트가 서버로 접속을 해서

36
00:01:58,120 --> 00:01:59,990
어떤 함수호출을 하면은 감소

37
00:01:59,990 --> 00:02:01,990
처리결과를 비동기적으로 받아오고

38
00:02:01,990 --> 00:02:05,070
빅스비랑 같은 게 뜨면 있어 지하철에도 해 주고

39
00:02:05,070 --> 00:02:07,420
그런 걸 하는 라이브러리가 있는데

40
00:02:07,420 --> 00:02:08,820
그 라이브러리 제가

41
00:02:08,820 --> 00:02:12,040
원하는 몇 가지 기능들이 잘 안되는 분들도 있고

42
00:02:12,040 --> 00:02:14,840
결정적으로 파이썬 3.7 지원이 아직 되지 않습니다

43
00:02:14,840 --> 00:02:21,890
공식적으로 그런 문제들 때문에 이라고 불리는 영어로

44
00:02:21,890 --> 00:02:25,900
내외과 우반구를 연결한 굉장히 굵은 신경

45
00:02:25,900 --> 00:02:27,070
다발을 있는데

46
00:02:27,070 --> 00:02:29,960
특성이라는 라이브러리를 만들게 된 계기

47
00:02:29,960 --> 00:02:32,260
그다음에 드라이버를 만들면서 열어 가지고

48
00:02:32,260 --> 00:02:35,090
씽크 스케줄을 구현을 했는데

49
00:02:35,090 --> 00:02:37,460
그런 것들에 대해서 소개를 했어

50
00:02:37,460 --> 00:02:42,130
이제 그 올해는 제가 조금 다른 얘기를 해 보려고 하는 게

51
00:02:42,130 --> 00:02:45,640
그동안 그러면 혹시 타이어로 많이 쓴 거 날개 알겠는데

52
00:02:45,640 --> 00:02:47,500
실제로 쓰면서 어떤 문제들이 있었나

53
00:02:47,500 --> 00:02:53,120
그리고 이거를 옥션에 적용을 했을 때 이 신카이 오라는

54
00:02:53,120 --> 00:02:55,720
거 가 를 어떻게 주위에서

55
00:02:55,720 --> 00:02:57,160
어떤 부분을 주의해서 써야 되는가

56
00:02:57,160 --> 00:02:59,790
그리고 그런 부분을 주위 하지 않았을 때 없다는데

57
00:02:59,790 --> 00:03:01,310
천사들이 벌어지는가

58
00:03:01,310 --> 00:03:04,550
이런 것들을 얘기를 드리려고 합니다

59
00:03:04,550 --> 00:03:09,140
먼저 시작할게 없어서 간단하게 제 소개를 조금 드릴게요

60
00:03:09,140 --> 00:03:14,690
어 이건 이제 제키톡 프로필 그저께 찍은 스크린샷 찍고 요

61
00:03:14,690 --> 00:03:17,630
제가 이제 그 동안 오픈소스 프로젝트

62
00:03:17,630 --> 00:03:22,170
크게 한 세 가지 정도 가 있어 네 가지 전

63
00:03:22,170 --> 00:03:23,170
이제 다시 톡 해 보라고

64
00:03:23,170 --> 00:03:26,290
요새는 아마 아시는 분이 많이 계실지 모르겠어요

65
00:03:26,290 --> 00:03:27,930
한 30대 정도 되신

66
00:03:27,930 --> 00:03:30,330
분들은 들어온 적이 있을지 모르겠는데

67
00:03:30,330 --> 00:03:34,320
한 20년 전 쯤에 유행했던 블로그 설치형블로그

68
00:03:34,320 --> 00:03:41,160
오픈소스 입니다 php php 얘기를 하니

69
00:03:41,160 --> 00:03:41,880
좀 이상하지만

70
00:03:41,880 --> 00:03:42,770
어쨌든 php 로

71
00:03:42,770 --> 00:03:46,860
열심히 코딩을 했던 왜 그런 설치형블로그 였고요

72
00:03:46,860 --> 00:03:48,830
프로젝트를 한동안 했었고

73
00:03:48,830 --> 00:03:50,130
그 다음에 지금 여기 보면

74
00:03:50,130 --> 00:03:51,990
이상한 아이콘이 하나가 있는데

75
00:03:51,990 --> 00:03:57,210
그 파티 해서 윈도우용 이제 ssh 접속 하는 프로그램

76
00:03:57,210 --> 00:03:58,150
아마 많이 드시고요

77
00:03:58,150 --> 00:04:01,720
윈도우 쓰시는 분들은 얼마 전에 드디어

78
00:04:01,720 --> 00:04:02,970
이제 제대로 된 윈도우용

79
00:04:02,970 --> 00:04:05,780
터미널 앱을 윈도우 10용 으로 내놔서

80
00:04:05,780 --> 00:04:07,250
아마 앞으로는 조금

81
00:04:07,250 --> 00:04:09,780
입지가 줄어들 수도 있지 않을까라는 생각이 듭니다만

82
00:04:09,780 --> 00:04:13,210
어쨌든 현재까지 거의 윈도우에서 표준 ssh

83
00:04:13,210 --> 00:04:16,320
클라이언트 사용에 대해 다시 피하는 거

84
00:04:16,320 --> 00:04:17,810
원래 이거 이 프로젝트 가지

85
00:04:17,810 --> 00:04:19,080
여러 개의 포크가 있습니다

86
00:04:19,080 --> 00:04:22,080
그래서 저는 저번 보내다가 기여를 한 건 아니고

87
00:04:22,080 --> 00:04:26,870
그 중에서 이제 저 아는 분이 그 한글판 트라고 해서

88
00:04:26,870 --> 00:04:29,840
한글 입력 같은 것들을 매끄럽게 되는

89
00:04:29,840 --> 00:04:31,490
이제 포크로 만드신 게 있었는데

90
00:04:31,490 --> 00:04:34,300
그거를 메인테이너 를 이어받아서

91
00:04:34,300 --> 00:04:36,120
몇 년 동안 이전에 이틀 했었고요

92
00:04:36,120 --> 00:04:38,250
제가 했던 거는 유니코드

93
00:04:38,250 --> 00:04:41,180
같은 것들이 좀 더 잘 처리가 되게 한 자리에 있었고

94
00:04:41,180 --> 00:04:45,450
그 다음에 창 윈도우 윈도우 8.1

95
00:04:45,450 --> 00:04:47,090
투명도 기능 같은 것들을

96
00:04:47,090 --> 00:04:49,450
이제 또 다른 많은 분의 도움을 받아서

97
00:04:49,450 --> 00:04:52,950
그런 기능을 추가 한다든지 이런 거를 했었습니다

98
00:04:52,950 --> 00:04:57,710
그러다가 이제 감액 사용자가 되면서 쿠키를 되는 바람에 메인테이너

99
00:04:57,710 --> 00:04:59,340
그래 다른 분께 넘겨드립니다

100
00:04:59,340 --> 00:05:03,210
지금은 이제 이름만 올라가 있는 그런 상태 입니다

101
00:05:03,210 --> 00:05:07,680
그리고 대학원다니면서 했던 프로젝트는

102
00:05:07,680 --> 00:05:09,920
nba 라고 불리는 프로젝트인데요

103
00:05:09,920 --> 00:05:15,840
요거는 네트웍 밸런스 아는 동생도 한단어에 약자입니다

104
00:05:15,840 --> 00:05:18,430
gpu 를 기반으로 네트워크 패킷

105
00:05:18,430 --> 00:05:22,050
프로세싱을 가속하는 인텔 dpdk

106
00:05:22,050 --> 00:05:26,170
라는 구성로 토핑을 하기 위한 라이브러리가 있으니까

107
00:05:26,170 --> 00:05:28,990
그걸 이용해서 크다 를 이용하는 패킷처리

108
00:05:28,990 --> 00:05:32,180
가족을 구현하는 그럼 프로젝트를 했었고

109
00:05:32,180 --> 00:05:33,770
그 다음에 이제 지금 하고 있는 게

110
00:05:33,770 --> 00:05:37,630
백엔드 다 내야 이라고 하는 뒤에 저기

111
00:05:37,630 --> 00:05:39,790
저희 회사 볼 수도 있는 여기에 가시면

112
00:05:39,790 --> 00:05:42,320
이제 뭐 실제 태원아 이런 것들 보실 수 있고

113
00:05:42,320 --> 00:05:45,790
저희 프로젝트도 다 서버사이드

114
00:05:45,790 --> 00:05:47,950
완전히 파이썬으로 짜여져 있고

115
00:05:47,950 --> 00:05:50,170
제가 이제 씽크웨이 http

116
00:05:50,170 --> 00:05:53,590
뭐 이런 일을 굉장히 헤비하게 활용을 해서

117
00:05:53,590 --> 00:05:56,010
실제로 프로덕션의 마 가고 있습니다

118
00:05:56,010 --> 00:06:00,190
그 다음에 이제 프로젝트를 하면서

119
00:06:00,190 --> 00:06:03,420
파생 돼서 나온 게 요새 가지 프로젝트인데요

120
00:06:03,420 --> 00:06:06,850
AI 놓고는 어제 아마 맞아

121
00:06:06,850 --> 00:06:10,080
타이머신 정든님 발표를 들으신 분은 아시겠지만

122
00:06:10,080 --> 00:06:12,060
저희가 200여대의 하라는 프로젝트

123
00:06:12,060 --> 00:06:15,270
항상 굉장히 많은 그 일거리 산을 살았는데

124
00:06:15,270 --> 00:06:18,530
그 중에 도커를 어떻게 가요 를 쓰는

125
00:06:18,530 --> 00:06:22,730
그 라이브러리가 지원이 안 돼 있어서

126
00:06:22,730 --> 00:06:24,950
aio 조커라는 프로젝트를 찾았는데

127
00:06:24,950 --> 00:06:27,330
프로젝트가 사실상 지금

128
00:06:27,330 --> 00:06:31,760
원래 원작자가 보니 시간이 없어서 버려도 상태였고

129
00:06:31,760 --> 00:06:33,960
제가 필요한 지능이 이제 빠져 있다 보니까

130
00:06:33,960 --> 00:06:39,790
그걸 구현하면서 직접 메인테이너 같은 케이스입니다

131
00:06:39,790 --> 00:06:43,230
이거를 하면서 여기 앞에 보시면 AI

132
00:06:43,230 --> 00:06:47,570
오립스 라고 불리는 그 업체 오가니제이션 있는데요

133
00:06:47,570 --> 00:06:53,010
이건 archttp 를 만든 앤드류스

134
00:06:53,010 --> 00:06:56,240
레트로라는 이제 그 한성컴퓨터 분이 계세요

135
00:06:56,240 --> 00:07:00,680
그 분이 신카이 요렇게 하면서 어

136
00:07:00,680 --> 00:07:01,610
신카이 오늘 위해서는

137
00:07:01,610 --> 00:07:03,280
어떤 카이온 라이브러리들이

138
00:07:03,280 --> 00:07:05,090
생태계가 완전히 새로 만들어 줘

139
00:07:05,090 --> 00:07:06,780
왜냐면 이제 비동기 코드 하고

140
00:07:06,780 --> 00:07:08,430
전기코드 호환이 안 되거든요

141
00:07:08,430 --> 00:07:12,360
물론 동기 코드를 비동기 코드에서 부를 수는 있지만

142
00:07:12,360 --> 00:07:15,620
그렇게 되면 비동기 8.2 완전히 사라지기 때문에

143
00:07:15,620 --> 00:07:19,050
그래서 데이터베이스 접속하는 라이브러리

144
00:07:19,050 --> 00:07:20,290
단지 이런 것들을 처음부터

145
00:07:20,290 --> 00:07:22,990
싱크로 만들어진 버전을 써야 됩니다

146
00:07:22,990 --> 00:07:25,660
그러다 보니까 하는 게 나온 이후로

147
00:07:25,660 --> 00:07:30,570
그 기존에 있는 다양한 파이썬에 있는 접속 라이벌이 뭐 퍼스트

148
00:07:30,570 --> 00:07:34,180
클래스 접속 라이브러리 레이디스 접속 라이브러리

149
00:07:34,180 --> 00:07:37,580
http 라이브러리 등 등 등 등 등이 다

150
00:07:37,580 --> 00:07:38,230
사용할 수가 없는 거야

151
00:07:38,230 --> 00:07:39,940
그래서 이걸 이제 사람들이 없인

152
00:07:39,940 --> 00:07:43,000
카에덴 버전을 다 새로 만들기 시작을 했는데

153
00:07:43,000 --> 00:07:46,550
그 중에서 이제 잘 쓸 만한 어느 정도

154
00:07:46,550 --> 00:07:48,870
퀄리티가 보장되는 라이브러리들을 모아서

155
00:07:48,870 --> 00:07:50,460
한 군데서 관리를 해보자

156
00:07:50,460 --> 00:07:54,280
라는 컨셉으로 만들어진 jiu 쓰라고 하나

157
00:07:54,280 --> 00:07:55,180
오르가니제이션 있다

158
00:07:55,180 --> 00:07:57,940
그래서 저도 여기 멤버로 들어가 있고

159
00:07:57,940 --> 00:08:02,240
프로젝트 제가 갖고 들어 가면서

160
00:08:02,240 --> 00:08:04,340
저도 같이 멤버가 됐습니다

161
00:08:04,340 --> 00:08:05,720
요런 프로젝트가 있었고

162
00:08:05,720 --> 00:08:08,960
다음에 이제 방금 전에 제가 파이콘

163
00:08:08,960 --> 00:08:11,870
작년 재작년에 발표했었던 내용들을 참고해

164
00:08:11,870 --> 00:08:15,100
주시면 되겠습니다

165
00:08:15,100 --> 00:08:19,140
내가 그래서 이제 제가 뭐 하고 있는 일은 이제 뜻 아니야

166
00:08:19,140 --> 00:08:21,230
이라는 거를 이렇게 말을 하고 있고

167
00:08:21,230 --> 00:08:24,430
앞에 프로필은 간단하게 소개를 드렸고

168
00:08:24,430 --> 00:08:25,990
신카이 오늘 처음 쓴 거

169
00:08:25,990 --> 00:08:28,110
이거 처음 나왔을 때부터 썼어요

170
00:08:28,110 --> 00:08:32,920
파이썬 3.32 US from 이라고 불리는 이제 제네레이터

171
00:08:32,920 --> 00:08:35,340
그진리 게이션 문법이 들어왔는데

172
00:08:35,340 --> 00:08:42,420
이거 이걸 바탕으로 이라는 이름의

173
00:08:42,420 --> 00:08:43,940
그 프로젝트가 있었습니다

174
00:08:43,940 --> 00:08:48,310
이게 이제 레퍼런스 임플리멘테이션 이었고

175
00:08:48,310 --> 00:08:50,870
이거를 이제 P2P 3 1 5

176
00:08:50,870 --> 00:08:55,550
6 번 을 통해서 공식 파이썬 표준라이브러리

177
00:08:55,550 --> 00:08:57,700
애통함이 되게 이름이다

178
00:08:57,700 --> 00:08:59,770
상당히 오래 전부터 써 뭐야

179
00:08:59,770 --> 00:09:05,130
그래서 제가 매년 팔콘 에서 하는 게 올해는 이제 좀 어떠신가요

180
00:09:05,130 --> 00:09:06,660
가수 한혜진 거 같아요

181
00:09:06,660 --> 00:09:10,270
그 다음에 뭐 이런 이런 api 란 이런 기능이 추가돼 서

182
00:09:10,270 --> 00:09:11,830
이번에는 진짜 것인가요

183
00:09:11,830 --> 00:09:13,010
가지고 쓸 만 천 친 거 같아요

184
00:09:13,010 --> 00:09:14,900
라는 얘기를 한 3년 좀 한 거 같아요

185
00:09:14,900 --> 00:09:17,500
근데 오늘 여기는 아직

186
00:09:17,500 --> 00:09:20,830
갈길이 멀었다는 결론을 미리 스포일러로 해드립니다

187
00:09:20,830 --> 00:09:27,550
그래서 왜 그런 발표를 통해서 설명을 드리도록

188
00:09:27,550 --> 00:09:30,730
오늘 주로 중심적으로 얘기했거든

189
00:09:30,730 --> 00:09:34,090
제목에는 그냥 열여덟시 사이라고 짧게 적었는데

190
00:09:34,090 --> 00:09:35,180
캔슬레이션 에 대해서

191
00:09:35,180 --> 00:09:41,030
좀 집중적으로 다른 걸로 합니다 이 얘기는 비동기로

192
00:09:41,030 --> 00:09:42,830
뭔가 실행하다가 멈췄어

193
00:09:42,830 --> 00:09:46,310
다른 일 하다가 또 실행하다가 멈춰서 다른 일 하다가

194
00:09:46,310 --> 00:09:49,070
계속 이런 것들을 반복한다는 얘기예요

195
00:09:49,070 --> 00:09:53,570
근데 그러면 잠깐 멈추는 무슨 일이 일어날지 모르는 거 같거든

196
00:09:53,570 --> 00:09:54,840
내토 커넥션이 있다

197
00:09:54,840 --> 00:09:57,860
그러면 커넥션이 갑자기 끊겨 수도 있는 거고

198
00:09:57,860 --> 00:09:59,530
아니면은 사용자가 컨트롤

199
00:09:59,530 --> 00:10:01,940
C 를 눌러서 갑자기 프로그램을 종료하려고 할 수도

200
00:10:01,940 --> 00:10:03,120
있는 거고

201
00:10:03,120 --> 00:10:06,260
그런 상황들에 대해서 어떻게 대처를 야 그리고

202
00:10:06,260 --> 00:10:09,780
이제 그 라이브러리들을 조합해서 쓰다 보니까

203
00:10:09,780 --> 00:10:12,430
어떤 제 경우들이 있는가

204
00:10:12,430 --> 00:10:15,370
어떤 문제점들을 내가 잘못 이해를 해야 되는가

205
00:10:15,370 --> 00:10:17,980
이런 것들을 얘기를 하려고 하니까

206
00:10:17,980 --> 00:10:20,340
그런 사람들은 몇 가지를 소개를 해 드리고

207
00:10:20,340 --> 00:10:24,670
다음에 이제 최근에 이야기가 되는 것들 중에

208
00:10:24,670 --> 00:10:28,060
속초로 컨커런시 라는 개념이 있습니다

209
00:10:28,060 --> 00:10:29,790
근데 이거는 그 우리가

210
00:10:29,790 --> 00:10:32,350
이제 스트럭처드 프로그래밍 이라고 하면

211
00:10:32,350 --> 00:10:34,390
아주 고전적 개념이 없어

212
00:10:34,390 --> 00:10:37,230
아주 옛날에 어셈블리로 코딩을 하던 시절

213
00:10:37,230 --> 00:10:41,040
베이직 정도로 코딩을 하던 시절에는 한술 하든지

214
00:10:41,040 --> 00:10:43,170
이런 개념들이 계약 했기 때문에

215
00:10:43,170 --> 00:10:48,000
다 고투를 점프를 하면서 코드를 작습니다 이 고추

216
00:10:48,000 --> 00:10:51,130
같은 것들은 문제점이 추상화를 할 수 없게 만들어요

217
00:10:51,130 --> 00:10:56,390
왜냐하면 현재 맥락을 그대로 가진채로 다른 지점으로 건너뛰어서

218
00:10:56,390 --> 00:10:58,210
코드를 실행을 하기 때문에

219
00:10:58,210 --> 00:11:00,970
추석날 하는 작동을 잘 안 하게 되면

220
00:11:00,970 --> 00:11:02,310
문제점들의 생기는데

221
00:11:02,310 --> 00:11:04,510
이런 거를 언어적으로 우리가 몇 가지

222
00:11:04,510 --> 00:11:08,510
어떤 구조를 제공함으로써 오늘 저는 무조건 문제라던지

223
00:11:08,510 --> 00:11:10,020
반복문 이라던지 여러분들

224
00:11:10,020 --> 00:11:13,010
이제 코딩을 하는 거보다 요새는 당연하게 배우는 건데

225
00:11:13,010 --> 00:11:15,540
그런 것들에 개념이 정확하게

226
00:11:15,540 --> 00:11:16,900
성적이 안 되어 있었습니다

227
00:11:16,900 --> 00:11:21,010
초기에는 50년대 60년대 그런데

228
00:11:21,010 --> 00:11:22,620
구조화된 프로그램의 개념을 쳐서

229
00:11:22,620 --> 00:11:24,450
우리가 현재는 훨씬 더

230
00:11:24,450 --> 00:11:27,000
프로그램을 잘 추상화된 방식으로

231
00:11:27,000 --> 00:11:28,470
할 수가 있게 되는데요

232
00:11:28,470 --> 00:11:30,670
마찬가지로 이런 비동기프로그래밍 해서

233
00:11:30,670 --> 00:11:32,960
또 우리가 비슷한 개념들이 필요하겠다

234
00:11:32,960 --> 00:11:34,420
뭐 이런 것들 하기 위해서는

235
00:11:34,420 --> 00:11:38,010
어떤 요소들이 필요하냐 라고 해서 여신 카이요

236
00:11:38,010 --> 00:11:40,320
개발자들이 와 또 어디인가요 를 사용하면서

237
00:11:40,320 --> 00:11:42,980
이제 어떤 불만을 느꼈던 여러분

238
00:11:42,980 --> 00:11:46,870
소스 개발자 나름대로 이렇게 대안을 제시 한 것들이 있습니다

239
00:11:46,870 --> 00:11:52,190
그런 것들에 대해서 간단하게 소개를 드리려고 합니다

240
00:11:52,190 --> 00:11:55,000
혹시 카이 요를 써보신분 계신가요

241
00:11:55,000 --> 00:12:03,860
여기 손 들어 주시겠어요 오 생각보다 많이 보셨네요

242
00:12:03,860 --> 00:12:10,530
그 제가 그저께 튜토리얼을 했어요 ggpk 반에 간다네

243
00:12:10,530 --> 00:12:15,700
프로그램 대출을 어르신분들이 여기 계속 저도 모르겠는데

244
00:12:15,700 --> 00:12:17,560
그 생각보다 엄청 타요

245
00:12:17,560 --> 00:12:19,750
나 이런 거를 써 보신 분이 별로 없더라고요

246
00:12:19,750 --> 00:12:22,300
그래서 제가 혹시나 그런 일이 있을까 봐

247
00:12:22,300 --> 00:12:25,680
저 요약 슬라이드 들고 왔는데

248
00:12:25,680 --> 00:12:29,770
이거를 설명을 길게 하면은 이것만 해도

249
00:12:29,770 --> 00:12:33,570
아마 그 시간을 꽉채우기 날 텐데 간단하게만 하고 넘어가겠습니다

250
00:12:33,570 --> 00:12:36,340
써 보신 분들이 많은 것 같으니까

251
00:12:36,340 --> 00:12:38,480
아이유 기본적으로 이름이 아이오라

252
00:12:38,480 --> 00:12:40,450
던전에서 알 수 있다

253
00:12:40,450 --> 00:12:43,920
연산을 격려로 해 주거나 그런 라이브러리가 아니고요

254
00:12:43,920 --> 00:12:46,830
아이유 블로킹 아이유가 발생을 했을 때

255
00:12:46,830 --> 00:12:49,640
맥락 전환을 코루틴 일하는 방식 을 이용해서

256
00:12:49,640 --> 00:12:51,050
보다 쉽게 할 수 있도록

257
00:12:51,050 --> 00:12:53,840
도와주는 프레임워크를 보시면 되겠습니다

258
00:12:53,840 --> 00:13:00,040
저기 파이썬에 싱크대 문법이 있고요

259
00:13:00,040 --> 00:13:03,930
다음에 어웨이트 라는 문법 있으면 83.1

260
00:13:03,930 --> 00:13:05,020
새로 들어왔는데

261
00:13:05,020 --> 00:13:07,790
이걸 이용하면 기존에는 제대로 히터를 박현영

262
00:13:07,790 --> 00:13:11,500
해 가지고 계신 설교했던 프로틴을 활성

263
00:13:11,500 --> 00:13:12,450
어머 레벨에서 아

264
00:13:12,450 --> 00:13:14,920
이거는 이런 식으로 돌아 가야 되는 거예요 라고

265
00:13:14,920 --> 00:13:17,300
이제 딱 정해 줄 수가 있는 거야

266
00:13:17,300 --> 00:13:20,150
이거를 이용해서 사실은 신카이 5가 아닌

267
00:13:20,150 --> 00:13:22,750
다른 서드파티 그분들도 존재로

268
00:13:22,750 --> 00:13:24,770
내가 뒤에서 설명을 들을 건데

269
00:13:24,770 --> 00:13:26,680
트리오 머큐리 요런

270
00:13:26,680 --> 00:13:29,590
이제 다른 이름에 라이브러리를 문제라고

271
00:13:29,590 --> 00:13:32,540
이것들은 어 신카이 학원을 전혀 상관없어

272
00:13:32,540 --> 00:13:35,090
씽크에이티 문법은 활용을 하지만

273
00:13:35,090 --> 00:13:36,620
내부적으론 완전히 새로운 현대

274
00:13:36,620 --> 00:13:41,400
이제 그런 이벤트 로 푸들이 있습니다

275
00:13:41,400 --> 00:13:45,240
비동기 코드의 특징은 뭐냐면 이벤트로 프로 하는 게 아니라면

276
00:13:45,240 --> 00:13:48,230
운영체제가 어떤 아이유 작업이 끝났을 때

277
00:13:48,230 --> 00:13:51,090
어떤 유저프로그램 한테 야 네가 이거 저거 끝났으니까

278
00:13:51,090 --> 00:13:53,580
이제 다음 일을 계속 해도 된다 라고 알려 주는 거는 사실

279
00:13:53,580 --> 00:13:55,730
운영체제에서 지원을 해야 되거든요

280
00:13:55,730 --> 00:13:58,970
운영체제 마다 다양한 비동기 ioapi 드렸습니다

281
00:13:58,970 --> 00:14:01,220
리눅스에서 대표적으로 셀렉트

282
00:14:01,220 --> 00:14:02,980
나 이불 같은 것들이 있고요

283
00:14:02,980 --> 00:14:05,940
그다음에 윈도우 같은 경우에는 아이유 컴플리션 포트가

284
00:14:05,940 --> 00:14:08,420
그래서 iocp 라고 불리는 그럼 비동기 아이고

285
00:14:08,420 --> 00:14:10,080
기술들이 있습니다

286
00:14:10,080 --> 00:14:15,090
저 너는 그런 것도 다 캡 트랙션을 해서 하이 레벨 1

287
00:14:15,090 --> 00:14:20,040
인터페이스는 일관되게 쓸 수 있도록 제공을 해 주는데요 보니까

288
00:14:20,040 --> 00:14:23,350
이제 이벤트루프 라는 주체가

289
00:14:23,350 --> 00:14:27,360
내가 생성한 코루틴 들을 직접 호출 해 줘야 많이 이벤트

290
00:14:27,360 --> 00:14:29,430
비동기 코드들이 돌아가게 됩니다

291
00:14:29,430 --> 00:14:33,670
그래서 그런 최상의 호출자가 없으면 2동

292
00:14:33,670 --> 00:14:35,490
리코더 돌릴 수가 없어요

293
00:14:35,490 --> 00:14:37,110
그냥 제네레이터 하고 똑같습니다

294
00:14:37,110 --> 00:14:38,880
제네레이터 처럼 불러 수동으로

295
00:14:38,880 --> 00:14:40,640
내가 한 땀 한 땀 넥스트

296
00:14:40,640 --> 00:14:42,980
암소를 불러 가지고 실행을 할 수도 있지만

297
00:14:42,980 --> 00:14:45,540
이벤트 기본적으로는 이벤트를 통해서

298
00:14:45,540 --> 00:14:48,720
어떤 깨어날 시점을 알고서 컨택 스위치를 한다

299
00:14:48,720 --> 00:14:51,420
그런 개념으로 보시면 되고요

300
00:14:51,420 --> 00:14:54,330
어 그래서 이제 파이썬 이라는 언어는

301
00:14:54,330 --> 00:14:56,000
언어가 처음 만들어진 때부터

302
00:14:56,000 --> 00:14:58,720
비동기로 만들어진 게 아니에요 이 기능이 나중에 추가된

303
00:14:58,720 --> 00:15:01,280
거기 때문에 파이썬은 당연히 기본적으로

304
00:15:01,280 --> 00:15:03,780
동기 모드로 돌게 돼 있고요

305
00:15:03,780 --> 00:15:06,630
공기 모델하고 굳이 새로운 영어로 붙잡지마

306
00:15:06,630 --> 00:15:08,120
사실은 그냥 파이썬

307
00:15:08,120 --> 00:15:10,490
코트가 동기 모드로 돌고 있는 거고요

308
00:15:10,490 --> 00:15:14,580
그 다음에 이런 일하는 파이썬 3.7 추가된 2편

309
00:15:14,580 --> 00:15:18,870
기존에는 이벤트를 캡처를 최고로 넘쳐 컴플렉스를 하는데

310
00:15:18,870 --> 00:15:23,270
소드를 불러 줘 종료되거나 남북전 클로저를 해 주고

311
00:15:23,270 --> 00:15:25,720
그 와중에도 프로에 남아있는 테스트들이 있으면

312
00:15:25,720 --> 00:15:27,260
뭐 수동으로 취소를 해 준다

313
00:15:27,260 --> 00:15:30,590
건가 등의 여러가지 귀찮은 처리되지 필요했는데

314
00:15:30,590 --> 00:15:32,990
그런 것들을 이제 편하게 쓸 수 있도록

315
00:15:32,990 --> 00:15:35,450
라이브러리로 해 놓은 겁니다

316
00:15:35,450 --> 00:15:36,360
선생이라는 공기 코드

317
00:15:36,360 --> 00:15:40,060
QR 코드로 진입하는 이제 최초 진입함 수가 있고

318
00:15:40,060 --> 00:15:44,700
이게 저기 말하자면은 최상위 루트 테스트가 됩니다

319
00:15:44,700 --> 00:15:46,610
다른 캐스트를 만드는 거

320
00:15:46,610 --> 00:15:48,930
비동기적으로 계속 홈택스 컨텍스트

321
00:15:48,930 --> 00:15:51,880
스위칭 대각선으로 동시에 돌아가는 것처럼

322
00:15:51,880 --> 00:15:54,850
보일 어떤 코드를 흐름을 맥락을 만드는 거를

323
00:15:54,850 --> 00:15:56,070
이제 어떠신가요

324
00:15:56,070 --> 00:15:57,480
좀 크리에이트 테스트를 하는 걸로

325
00:15:57,480 --> 00:15:59,870
또 다른 함수를 부르면 이 함수는 이제

326
00:15:59,870 --> 00:16:03,740
원래 그 함수를 부른 태스크와 동시에

327
00:16:03,740 --> 00:16:05,310
이제 돌아가게 됩니다

328
00:16:05,310 --> 00:16:08,410
다음에 다른 비동기함수 를 비동기함수 대해서

329
00:16:08,410 --> 00:16:11,030
이제 동기적으로 호출 하는 거잖아

330
00:16:11,030 --> 00:16:14,060
업데이트 하는 거는 웨이트 이름에서 알 수 있듯이

331
00:16:14,060 --> 00:16:16,220
그 실행결과를 기다려 기다리는데

332
00:16:16,220 --> 00:16:17,950
이거는 비동기함수 니까

333
00:16:17,950 --> 00:16:21,030
나는 잠깐 멈춰 있을게 그 비동기함수 를 실행해 줘

334
00:16:21,030 --> 00:16:25,570
그리고 그 함수가 다 끝나면 알려 줘 실행하는 동안

335
00:16:25,570 --> 00:16:27,990
또 다른 할 일이 있으면

336
00:16:27,990 --> 00:16:29,610
그 할 일을 그 사이에 실행 해도 돼

337
00:16:29,610 --> 00:16:33,350
이제 뭐 이런 뜻이라고 보시면 좋겠습니다

338
00:16:33,350 --> 00:16:34,840
그리고 사실 요거

339
00:16:34,840 --> 00:16:38,150
두 개만 있어도 모든 기능들을 다 만들 순 있는데

340
00:16:38,150 --> 00:16:43,330
거기에서 추가적으로 싱크 싱크 위드라는 이제 파이썬 루프

341
00:16:43,330 --> 00:16:47,200
이터레이터 프로토콜에서 그다음 아이템들을 가져 오는 거 자체가

342
00:16:47,200 --> 00:16:51,770
코루틴 경우를 문법적으로 지원을 하고 믿으라고 해서

343
00:16:51,770 --> 00:16:54,500
제 파이썬에서 컨텍스트 매니저라고 하자

344
00:16:54,500 --> 00:16:56,870
블록에 진입하기 전에 코드를 실행하고

345
00:16:56,870 --> 00:16:59,470
그 블록에서 빠져나올때 코드를 실행하고

346
00:16:59,470 --> 00:17:01,650
블로그 안에서 뭔가 있을 시간이 발생하거나

347
00:17:01,650 --> 00:17:03,450
이상한 일을 발생했더라도

348
00:17:03,450 --> 00:17:07,760
어쨌든 문법적으로 블록을 빠져나오는 시점에 어떤 리소스

349
00:17:07,760 --> 00:17:10,180
클리너를 할 수 있도록 보장을 해주는

350
00:17:10,180 --> 00:17:12,640
그런 문법 구조가 있는데

351
00:17:12,640 --> 00:17:15,360
그 앞뒤 과정이 둘 다 코루틴 경우

352
00:17:15,360 --> 00:17:20,690
처리할 수 있도록 우리들은 여기 이제 파이썬 3.6

353
00:17:20,690 --> 00:17:25,230
싱크제너레이터 라는 개념이 들어와서 뽀로로 사용되는 객체를

354
00:17:25,230 --> 00:17:28,660
예전에는 클래스로 다 일일이 뭐 A L A 넥스트

355
00:17:28,660 --> 00:17:30,960
메소드 를 다 손으로 구현을 해 줬어야 되는데

356
00:17:30,960 --> 00:17:36,060
제 싱크대 프로 선언된 코루틴함수 안에 일드 명령어를 넣음으로써

357
00:17:36,060 --> 00:17:42,940
이제 보다 쉽게 싱크제너레이터 녹음할 수 있게

358
00:17:42,940 --> 00:17:44,660
인터넷에 것인가요

359
00:17:44,660 --> 00:17:46,790
관련된 여러 가지 못해 처리율 예제코드

360
00:17:46,790 --> 00:17:50,830
이런 것들을 찾아 보면은 여기까지는 탁 자야를 설명을 해

361
00:17:50,830 --> 00:17:52,330
아마 저보다 훨씬 더 알아듣기

362
00:17:52,330 --> 00:17:54,270
쉽게 잘 설명한 자료들이 검색하면

363
00:17:54,270 --> 00:17:58,150
많이 나올 네 잘 설명을 안 하는 부분이 있는데

364
00:17:58,150 --> 00:18:00,960
캔슬레이션 에 대해서는 자세히 다른 자료를 제가

365
00:18:00,960 --> 00:18:03,550
별로 못 본 거 같아요

366
00:18:03,550 --> 00:18:07,190
캔슬 일하는 게 어떤 개념이야 아까 말씀드린 것처럼

367
00:18:07,190 --> 00:18:08,700
코루틴 일하는 거는

368
00:18:08,700 --> 00:18:11,100
잠시 다른 애가 다른 일을 할 수가 있어요

369
00:18:11,100 --> 00:18:12,410
근데 그 다른 일을 하는

370
00:18:12,410 --> 00:18:16,200
누군가가 나를 중단시킬 수도 있는 거야

371
00:18:16,200 --> 00:18:19,190
그거는 이제 나를 내가 어떤 테스트인데

372
00:18:19,190 --> 00:18:21,250
그 나 자신의 호출 해 줘

373
00:18:21,250 --> 00:18:23,260
테스트가 나를 취소 할 수도 있고

374
00:18:23,260 --> 00:18:26,070
또 다른 테스트가 나를 취소를 할 수도 있습니다

375
00:18:26,070 --> 00:18:28,900
그리고 스스로 취소를 할 수도 있습니다

376
00:18:28,900 --> 00:18:30,440
그러니 취소라는 것은 뭐냐면

377
00:18:30,440 --> 00:18:34,050
이제 내가 더 이상 그 실행을 안 하고

378
00:18:34,050 --> 00:18:35,290
지금 하던 일을 중단하고

379
00:18:35,290 --> 00:18:37,360
빠져나가게 따라고 하는 어떻게 보면

380
00:18:37,360 --> 00:18:40,700
예외란 굉장히 비슷한 개념으로 근데

381
00:18:40,700 --> 00:18:42,530
이제 이건 어떤 말 그대로

382
00:18:42,530 --> 00:18:45,080
예외적인 거에 대해서 발생하는 예

383
00:18:45,080 --> 00:18:50,400
라기보다는 내가 의도한 예외라는 전에서 약간의 이제

384
00:18:50,400 --> 00:18:51,990
그 개념적인 차이가 있습니다

385
00:18:51,990 --> 00:18:56,090
그래서 이제 파이썬에서 또 해서도 캔슬레이션 이라는 거를

386
00:18:56,090 --> 00:19:02,710
예외처리 메커니즘을 통해서 여러분들이 코루틴으로 어떠신가요

387
00:19:02,710 --> 00:19:03,460
코딩을 하셨다

388
00:19:03,460 --> 00:19:06,190
되게 주의를 하셔야 될 부분이 뭐냐면

389
00:19:06,190 --> 00:19:08,990
모든 어웨이트 그다음에 뭐

390
00:19:08,990 --> 00:19:11,870
씽크폴 같은 경우에는

391
00:19:11,870 --> 00:19:16,210
이제 골프를 돌리는 아이템을 하나씩 꺼내서 가입했던 마다

392
00:19:16,210 --> 00:19:18,180
이제 바디를 고추를 하잖아요

393
00:19:18,180 --> 00:19:20,360
그 바디워크 다음 아이템

394
00:19:20,360 --> 00:19:23,800
왜 대한 바디 실행되는 고충 간사이 강적들

395
00:19:23,800 --> 00:19:25,640
그다음에 싱크대에 경우에도

396
00:19:25,640 --> 00:19:28,350
귀두부분에 들어가는순간 나가는 숨

397
00:19:28,350 --> 00:19:30,630
모든 시점에 캔슬레이션

398
00:19:30,630 --> 00:19:33,270
아무 때나 발생을 할 수가 있습니다

399
00:19:33,270 --> 00:19:37,630
이거를 항상 마음에 염두에 두셔야 돼요

400
00:19:37,630 --> 00:19:39,540
그리고 이제 그런 업데이트가 없는

401
00:19:39,540 --> 00:19:42,110
그냥 오시면 함수도 정리를 할 수가 있는데

402
00:19:42,110 --> 00:19:43,680
여기 나와 있는 두 번째 처럼

403
00:19:43,680 --> 00:19:46,850
이건 그냥 동기적으로 계속 돌리는 거 잖아

404
00:19:46,850 --> 00:19:48,250
이런 경우에는 이거는

405
00:19:48,250 --> 00:19:51,780
아무리 코드가 길어도 캔슬하는 생각했을 되지 않습니다

406
00:19:51,780 --> 00:19:55,950
우리가 멀티스레드 프로그래밍을 하게 되면은 운영체제

407
00:19:55,950 --> 00:19:57,980
레벨에서 시그널을 하는 거를 알려서

408
00:19:57,980 --> 00:20:01,930
그 쓰레드가 어떤 시스템콜을 스윙 중이거나

409
00:20:01,930 --> 00:20:04,910
이벤트 찍어서 핸들러가 달렸을 그런대로 호출

410
00:20:04,910 --> 00:20:05,940
해 줄 수가 있잖아요

411
00:20:05,940 --> 00:20:12,640
근데 이거는 이제 코루틴이 이용해서 코퍼레이티브

412
00:20:12,640 --> 00:20:15,860
협조적 멀티태스킹을 하는 방식이 때문에

413
00:20:15,860 --> 00:20:19,280
아무리 내가 밖에서 캔슬을 하고 싶어도

414
00:20:19,280 --> 00:20:24,220
컨텍스트스위칭 삭제를 하지 않으면 캔슬 일어나지 않습니다

415
00:20:24,220 --> 00:20:24,840
차이점이 있다

416
00:20:24,840 --> 00:20:27,100
이거는 아까 말씀드린 대로

417
00:20:27,100 --> 00:20:30,620
저는 제 모든 라이브러리를 타워

418
00:20:30,620 --> 00:20:32,010
싱카이 OF 왕이 되는

419
00:20:32,010 --> 00:20:37,720
라이브러리를 써야 된다고 말씀드린 것과 같은 맥락이라고 보시면

420
00:20:37,720 --> 00:20:40,360
캔슬하는 작업 자체는 테스크

421
00:20:40,360 --> 00:20:43,990
또는 휠체어에 대해서 대한 참조를 가진 쪽에서 점

422
00:20:43,990 --> 00:20:45,660
캔슬 이라는 거둬들이지 달렸어

423
00:20:45,660 --> 00:20:50,570
캐슬 메소드를 부르면 돼 그러면 끝날 것 같지만

424
00:20:50,570 --> 00:20:51,660
사실은 이걸 하기 위해서

425
00:20:51,660 --> 00:20:57,600
굉장히 주의해야 될 이제 여러가지 디테일들이 나옵니다

426
00:20:57,600 --> 00:21:00,420
캐슬 메소드 호출 하면 되는데

427
00:21:00,420 --> 00:21:06,390
이수철 하는 게 있고 테스트라는 개념 있어요

428
00:21:06,390 --> 00:21:07,920
지금 가요를 써보시면

429
00:21:07,920 --> 00:21:12,220
아마 여러분들이 이제 기존에 있는 라이브러리를 활용해서

430
00:21:12,220 --> 00:21:14,370
그냥 워싱턴 프로그램을

431
00:21:14,370 --> 00:21:16,540
애플리케이션을 만드는 입장에서는

432
00:21:16,540 --> 00:21:19,180
퓨처 라는 개체를 직접 다들 일이 별로 없을 겁니다

433
00:21:19,180 --> 00:21:22,290
대부분은 그냥 테스크로 표현이 되고요

434
00:21:22,290 --> 00:21:25,860
차이점은 뭐냐면 퓨처 는 어떤 작업이 끝날 거

435
00:21:25,860 --> 00:21:28,150
다 어떤 오래 걸리는 작업이 있고

436
00:21:28,150 --> 00:21:30,960
뒤로 돌아 가는 그 작업이 언젠가 끝날 거 다

437
00:21:30,960 --> 00:21:34,930
끝난 시점에 나한테 어떤 알림을 좋으라고 하는 건

438
00:21:34,930 --> 00:21:37,030
그 상태만 표현을 하는 게 최고예요

439
00:21:37,030 --> 00:21:40,900
태스크는 캡처 하고 동일한데

440
00:21:40,900 --> 00:21:43,140
중간에 그 테스트가 여러번 멈췄다

441
00:21:43,140 --> 00:21:45,420
갈 수도 있다라는 이제 가정으로서 깔고 있는 거라고

442
00:21:45,420 --> 00:21:47,680
보시면 좋겠습니다

443
00:21:47,680 --> 00:21:51,750
그래서 같은 경우는 그냥 캡처를 취소

444
00:21:51,750 --> 00:21:54,510
하면은 그냥 그 상태로 바로 취소가 되는 거고

445
00:21:54,510 --> 00:21:57,170
테스크 같은 경우는 테스트도 캔슬을 똑같이 할 수가

446
00:21:57,170 --> 00:21:59,350
인터페이스가 거의 공원이 되는데

447
00:21:59,350 --> 00:22:00,530
큰 수술을 하고 나서

448
00:22:00,530 --> 00:22:03,550
그 태스크가 할 일이 많이 있을 수도 있어요

449
00:22:03,550 --> 00:22:05,020
예를 들면 클리너를 하기 위해서

450
00:22:05,020 --> 00:22:07,840
다른 코루틴을 부를 수가 있어

451
00:22:07,840 --> 00:22:13,570
그런 경우에는 이 테스트를 항상 그 사이트를 한 번 더 걸어서

452
00:22:13,570 --> 00:22:17,260
그 테스트가 실제로 종료 처리를 할 수 있는

453
00:22:17,260 --> 00:22:20,190
그 스케줄링 기회를 줘야 됩니다

454
00:22:20,190 --> 00:22:22,260
이게 이제 많이 빠뜨리는 실수 중에 하나

455
00:22:22,260 --> 00:22:26,740
그냥 어 그리고 이제 그 태스크가 캔슬레이션

456
00:22:26,740 --> 00:22:29,600
에러를 내부적으로 캐치를 하느냐

457
00:22:29,600 --> 00:22:34,880
안 하느냐에 따라서 그 우리 그 물에 캐슬 테러를 내가 잡느냐

458
00:22:34,880 --> 00:22:37,410
안 잡느냐 값도 달라

459
00:22:37,410 --> 00:22:40,610
이런 식으로 이제 체인이 되기 때문에

460
00:22:40,610 --> 00:22:44,010
캔슬레이션 에러를 어떻게 처리를 하느냐에 따라서

461
00:22:44,010 --> 00:22:46,550
내가 그 코트입니다

462
00:22:46,550 --> 00:22:50,060
테스트를 사용하는 방법 2 이제 차이가 생기게 됩니다

463
00:22:50,060 --> 00:22:53,250
그렇게 스스로 취소를 할 때는 자기가 생각 없으니까

464
00:22:53,250 --> 00:22:55,710
일정 퀘스트 8 스스로 레이저를 하면은 그 시점에

465
00:22:55,710 --> 00:22:58,990
그 코르테스를 담고 있는 테스트가 이제

466
00:22:58,990 --> 00:23:01,470
취소 되는 걸로 처리가 됩니다

467
00:23:01,470 --> 00:23:03,740
여기서 한 가지도 주의하실 게 있는데

468
00:23:03,740 --> 00:23:07,550
싱크 ioapi 보시면 신카이 어떤 커렌트 테스크

469
00:23:07,550 --> 00:23:11,230
라는 api 가정에 대한 이거에 이것도 테스크 교체

470
00:23:11,230 --> 00:23:15,240
잖아요 테스트를 캔슬 할 수 있어요

471
00:23:15,240 --> 00:23:20,950
이렇게 캔슬을 하게 되면 상태는 캔슬도 로 바뀌는데

472
00:23:20,950 --> 00:23:26,220
디캐슬 돼 에러가 발생할 하지 않습니다

473
00:23:26,220 --> 00:23:30,140
그래서 바깥에서 이 테스트가 캔슬 있는지를

474
00:23:30,140 --> 00:23:32,100
예외로 알 수가 없어요

475
00:23:32,100 --> 00:23:35,630
그럼 또 문제가 생겨서 이 방법은 쓰면 안 되고요

476
00:23:35,630 --> 00:23:37,400
그냥 명시적으로 했을 때

477
00:23:37,400 --> 00:23:40,890
너를 항상 익셉션 으로 레이저로 시켜 주셔야 됩니다

478
00:23:40,890 --> 00:23:41,890
이런 것들이 이제 조금씩

479
00:23:41,890 --> 00:23:45,740
뭔가 주의사항들이 하나씩 나오기 시작합니다

480
00:23:45,740 --> 00:23:47,970
제가 대표적으로 이제 처음 오신

481
00:23:47,970 --> 00:23:51,010
가요 를 쓰기 시작했을 때 겪었던 문자 드리네요

482
00:23:51,010 --> 00:23:55,140
아마 이제 여러분 파이썬 코딩을 조금 중급이상 하시는 분들

483
00:23:55,140 --> 00:23:59,780
같은 경우에는 트라이 세트에 아무것도 없는 그래

484
00:23:59,780 --> 00:24:02,900
부모를 쓰지 마라 그런 거 쓰지 않는 게 좋다

485
00:24:02,900 --> 00:24:04,640
이제 이런 말들을 많이 들어보셨을

486
00:24:04,640 --> 00:24:09,380
그래서 모든 예배를 굳이 잡고 싶으면 익셉션 객체를 잡으세요

487
00:24:09,380 --> 00:24:11,650
하는 가이드들이 이제 많이 있습니다

488
00:24:11,650 --> 00:24:14,750
이거 이렇게 하는 이유는 뭐냐면 파이썬예제 있었잖아요

489
00:24:14,750 --> 00:24:20,480
럭키가 베이스 익셉션 일하는 게 있고요

490
00:24:20,480 --> 00:24:24,330
그리고 네 아래 그냥 있을 시간이 있습니다

491
00:24:24,330 --> 00:24:26,820
그래서 이제 우리가 일반적으로 관찰하는 무슨 뭐

492
00:24:26,820 --> 00:24:31,650
벨류 에러 라든지 타입에러 라든지 뭐 런타임 에러 라든지

493
00:24:31,650 --> 00:24:34,530
이런 아니면 어떤 라이브러리가 정의한 테러드롬

494
00:24:34,530 --> 00:24:37,420
보통 대부분 그냥 있을 것입니다

495
00:24:37,420 --> 00:24:40,660
그런데 익셉션 일반 있어

496
00:24:40,660 --> 00:24:43,330
아니 예외적인 다른 종류의 있으시면 있습니다

497
00:24:43,330 --> 00:24:46,540
그 개 산책 파이썬에서 세 가지가 정리가 되어 있는데

498
00:24:46,540 --> 00:24:51,280
하나는 키보드인터럽트 고요

499
00:24:51,280 --> 00:24:56,260
그리고 시스템 엑스트라는 이제 미션 있고

500
00:24:56,260 --> 00:24:59,440
제대로 택시 2라는 익셉션 있습니다

501
00:24:59,440 --> 00:25:00,870
저 이 세 가지가 뭐 하는 거냐면

502
00:25:00,870 --> 00:25:02,670
키보드인터럽트 는 파이썬 프로그램

503
00:25:02,670 --> 00:25:06,050
은 컨트롤 씨 로 눌렀을 때 발생하는 여러분들이 제시

504
00:25:06,050 --> 00:25:08,780
그린트 핸들러를 명시적으로 그런 걸로 먹어라

505
00:25:08,780 --> 00:25:11,590
애들 하지 않았다면 기본적으로 파이썬을

506
00:25:11,590 --> 00:25:13,770
그 컨트롤 C 를 누른 시점에

507
00:25:13,770 --> 00:25:21,120
현재 프로그램의 프레임 에다가 키보드인터럽트 찾아 봐

508
00:25:21,120 --> 00:25:24,420
키스 X 시스 텍스트 미 셉션 을 여러분들

509
00:25:24,420 --> 00:25:25,850
이제 씻으라는 기본패키지

510
00:25:25,850 --> 00:25:29,440
X2 메소드를 불렀을 때 발생하는 있으시고요

511
00:25:29,440 --> 00:25:33,810
혹은 바깥에서 시급 번호를 알려 쓸 때 발생을 하면

512
00:25:33,810 --> 00:25:37,920
그리고 제대로 텍스트 같은 경우는 제네레이터 돌다가

513
00:25:37,920 --> 00:25:38,700
중간에 제 2

514
00:25:38,700 --> 00:25:40,040
외곽 발생했을 때

515
00:25:40,040 --> 00:25:42,030
바깥에서 제네레이터를 증가시켜 때

516
00:25:42,030 --> 00:25:44,760
발생하는 그런 내려오라고 보시면

517
00:25:44,760 --> 00:25:47,980
에러들을 이렇게 특별식을 하는 이유는 뭐냐면

518
00:25:47,980 --> 00:25:50,600
이것들은 제발 하셨다면

519
00:25:50,600 --> 00:25:52,890
프로그램에 종료라는 적던 맥락에

520
00:25:52,890 --> 00:26:00,140
중단이라는 거를 표현하기 위한 예외상황이 말하자면은 미션

521
00:26:00,140 --> 00:26:01,890
일하는 거 아까 말씀드린 말 그대로

522
00:26:01,890 --> 00:26:07,520
예외적인 상황을 예측하지 않은 없던 내가 이 프로그램을 짤때

523
00:26:07,520 --> 00:26:08,460
기대하지 않았던

524
00:26:08,460 --> 00:26:11,420
어떤 상태가 발생을 했을 때 를 알아 내기 위해서

525
00:26:11,420 --> 00:26:13,800
우리가 있으면 일하는 거는 점을 쓰는 거

526
00:26:13,800 --> 00:26:15,330
이것들을 어떻게 보면은

527
00:26:15,330 --> 00:26:18,430
특수한 의미를 가지고 있는 리셉션

528
00:26:18,430 --> 00:26:20,580
내가 의도적으로 컨트롤

529
00:26:20,580 --> 00:26:22,230
C 를 눌러서 프로그램을 적용시키는 게

530
00:26:22,230 --> 00:26:23,550
잘못된 게 아니잖아요

531
00:26:23,550 --> 00:26:29,310
물론 근데 그 프로그램은 입장에서는 꼭 갑자기 아닌밤중에홍두깨

532
00:26:29,310 --> 00:26:32,550
처럼 갑자기 뭔가 인터럽트가 들어오는 건데

533
00:26:32,550 --> 00:26:34,410
그런 거를 예외처리란 메커니즘으로

534
00:26:34,410 --> 00:26:36,170
표현을 한 것 뿐이지

535
00:26:36,170 --> 00:26:41,470
사실은 이 자체는 제가 우리가 오류라고 얘기하는

536
00:26:41,470 --> 00:26:44,250
그런 상태를 이야기하는 게 아니라는 거죠

537
00:26:44,250 --> 00:26:49,790
그래서 저 파이썬에서는 우리 개념상 분리를 이제 문제가 뭐냐면

538
00:26:49,790 --> 00:26:52,320
아까 어싱 카이로에서는 캔슬레이션 하려면

539
00:26:52,320 --> 00:26:56,300
어싱크 캐슬 대로를 발생시킨다고 했잖아요

540
00:26:56,300 --> 00:26:59,450
그 캐슬 대런은 데이식스 시간이 아니라

541
00:26:59,450 --> 00:27:00,960
그 있으셔야 됩니다

542
00:27:00,960 --> 00:27:03,220
이걸로 인해서 발생하는 문제가 있는데

543
00:27:03,220 --> 00:27:06,280
사실은 여러분들이 비동기 코드를 하실 때는

544
00:27:06,280 --> 00:27:10,240
이렇게 그냥 액션을 잡으려는 큰일 납니다

545
00:27:10,240 --> 00:27:13,980
왜냐면은 캐슬 대로 다 먹어 버리거든요

546
00:27:13,980 --> 00:27:17,860
사실대로 먹어 버리면 이제 여러 가지 문제들이 생기게되는데

547
00:27:17,860 --> 00:27:20,160
뒤에서 설명을 해 드리기로 하고

548
00:27:20,160 --> 00:27:23,680
그래서 비동기 코드를 짤 때는 반드시 캔슬

549
00:27:23,680 --> 00:27:26,820
데리러 오라는 거를 항상 명시적으로 잘하셔야 됩니다

550
00:27:26,820 --> 00:27:30,290
그래서 이거를 보통은 레이저를 해야 되고요

551
00:27:30,290 --> 00:27:32,220
레이저를 하면은 최상위

552
00:27:32,220 --> 00:27:34,850
테스크 코팅까지 타고 올라가서

553
00:27:34,850 --> 00:27:37,120
거기서 이제 차를 하게 되고

554
00:27:37,120 --> 00:27:42,530
내가 태스크에 최상의 코루틴이 다 테스크로 호출

555
00:27:42,530 --> 00:27:44,840
크리에이터 테스트를 할 때 부르는 할 수 있잖아요

556
00:27:44,840 --> 00:27:46,430
그 비동기함수

557
00:27:46,430 --> 00:27:48,900
이제 그 테스커 최상의 코루틴 있는데

558
00:27:48,900 --> 00:27:51,230
그 코루틴으로 다른 콜라텍에서 또 호철아 호철아

559
00:27:51,230 --> 00:27:52,090
그렇게 할 수도 있겠다

560
00:27:52,090 --> 00:27:53,820
거기까지 타고 올라 갔을 때

561
00:27:53,820 --> 00:27:56,170
내가 테스트를 아이테스트

562
00:27:56,170 --> 00:27:58,900
그 캔슬레이션 발생했던 적절한 처리를 해서

563
00:27:58,900 --> 00:28:02,140
나는 깔끔하게 그냥 클린 업 해서 종류로 하면 된다

564
00:28:02,140 --> 00:28:05,020
라는 걸 확신 할 때만 의뢰를 하지 않고

565
00:28:05,020 --> 00:28:08,350
이제 종료를 시키면 됩니다

566
00:28:08,350 --> 00:28:11,390
벌써 이제 못 갔다고 복잡해지기 시작해

567
00:28:11,390 --> 00:28:13,210
그래서 이 문제 때문에

568
00:28:13,210 --> 00:28:16,990
파이썬개발자 사이에서도 많은 논의가 있었어요

569
00:28:16,990 --> 00:28:19,310
캔슬 테러를 그러면

570
00:28:19,310 --> 00:28:20,290
우리가 데이트 있으셔도

571
00:28:20,290 --> 00:28:23,840
만들면 어떡해 있느냐라는 이제 이슈 있었는데

572
00:28:23,840 --> 00:28:26,480
처음에는 다들 반대를 했어요

573
00:28:26,480 --> 00:28:28,790
왜냐하면 이 아시겠지만

574
00:28:28,790 --> 00:28:31,890
베이스 클래스를 바꾼다는 거는

575
00:28:31,890 --> 00:28:34,190
그 셉션 앞에서처럼 2세트

576
00:28:34,190 --> 00:28:36,970
구문에서 없던 익셉션 타입을 잡았는데

577
00:28:36,970 --> 00:28:41,000
따라서 이게 갑자기 잠뜰

578
00:28:41,000 --> 00:28:43,760
미션을 못 찾게 되는 상황이 될 수도 있잖아요

579
00:28:43,760 --> 00:28:45,620
이거는 어떠신가요 를

580
00:28:45,620 --> 00:28:46,930
사용하는 모든 프로그램을

581
00:28:46,930 --> 00:28:49,440
굉장히 중대한 영향을 주는 문제입니다

582
00:28:49,440 --> 00:28:51,690
그래서 더군다나 이수가 나온 게

583
00:28:51,690 --> 00:28:53,990
3.62 나오니 후였는데

584
00:28:53,990 --> 00:28:58,140
팔선 상점 처음이 어색하여 가도 되고

585
00:28:58,140 --> 00:29:01,830
나서 계속 프로비저널 api 이라는 상태였습니다

586
00:29:01,830 --> 00:29:04,280
이거는 지금 시험적으로 도움이 된 것 때문에

587
00:29:04,280 --> 00:29:05,790
앞으로 바뀔 수도 있다

588
00:29:05,790 --> 00:29:09,180
여러분들의 이거를 그런 사실을 인지하고 쓰셔야 됩니다

589
00:29:09,180 --> 00:29:13,440
라는 상태였다가 3.6 에서 스테이블 apr 같거든요

590
00:29:13,440 --> 00:29:14,720
스테이블 api 같은데

591
00:29:14,720 --> 00:29:16,970
켜질 때는 아주 중요한 택시

592
00:29:16,970 --> 00:29:20,070
미션을 베이스 클래스를 바꾸자는 그니까

593
00:29:20,070 --> 00:29:22,870
이제 다들 처음에는 판단을 했죠

594
00:29:22,870 --> 00:29:27,390
근데 이제 이슈트래커 를 열어 보시면 아시겠지만

595
00:29:27,390 --> 00:29:29,810
이제 몇 가지 얘기가 오고 하다가

596
00:29:29,810 --> 00:29:34,430
그 앤드류스 가요를 개발했던 분께

597
00:29:34,430 --> 00:29:36,540
여러 활성 컨퍼런스를 다녀보신 거야

598
00:29:36,540 --> 00:29:39,660
그러더니 사람들한테 좋으신가요 쓰는 경험이었던 야

599
00:29:39,660 --> 00:29:41,280
뭐 이런 것들을 물어봤더니

600
00:29:41,280 --> 00:29:43,580
이런 것들은 삭제를 많이 했어요 라고 하는데

601
00:29:43,580 --> 00:29:49,220
다들 공통적으로 하는 얘기가 캔슬 누군가 먹어버리다

602
00:29:49,220 --> 00:29:52,500
그래서 그것 때문에 뭐 여러가지 문제가 많이 생기더라

603
00:29:52,500 --> 00:29:55,140
이런 얘기를 여러 군데서 듣고 나서

604
00:29:55,140 --> 00:29:57,380
이제 2분이 마음을 바꾼 거야

605
00:29:57,380 --> 00:30:02,900
이거는 앞으로 베이스 있었지 파이썬 3.8

606
00:30:02,900 --> 00:30:04,860
올해 말에 릴리즈 될 거 같은데

607
00:30:04,860 --> 00:30:09,210
여기서부터는 이 나머지 세 개

608
00:30:09,210 --> 00:30:11,620
그 익셉션 은파 있어

609
00:30:11,620 --> 00:30:14,600
어 너 자체에 정해 같은 편이라고 보시면 돼요

610
00:30:14,600 --> 00:30:16,430
근데 유일하게 이 캐슬

611
00:30:16,430 --> 00:30:19,750
드라마 라이브러리에서 정의하는 에러인데

612
00:30:19,750 --> 00:30:22,540
이제 베이스 스테이션 으로 하면 된다

613
00:30:22,540 --> 00:30:29,460
이제 중대한 이런 것들 때문에 캔슬레이션 일하는 거

614
00:30:29,460 --> 00:30:30,500
그럼 도대체 뭐길래

615
00:30:30,500 --> 00:30:33,020
이렇게 저런 다낭까지 이끌어

616
00:30:33,020 --> 00:30:36,420
낼 정도로 복잡한 거였냐 라고 보시면

617
00:30:36,420 --> 00:30:38,160
제가 제 캔슬레이션 일어날 때

618
00:30:38,160 --> 00:30:40,120
색칠을 어떤 일이 벌어지는지

619
00:30:40,120 --> 00:30:47,290
예제를 1 보여 드리려고 합니다

620
00:30:47,290 --> 00:30:51,240
실제로는 아무 일도 하지 않는 그냥 3시간

621
00:30:51,240 --> 00:30:53,090
시엄마는 걸어 놓는 이제 이런 갖다 놓고

622
00:30:53,090 --> 00:30:55,040
버튼이 있다고 생각해 볼게 시작할 때

623
00:30:55,040 --> 00:30:57,820
워킹 종료되면 돈을 찍고

624
00:30:57,820 --> 00:31:00,110
중간에 캔슬이 되면 캐슬 더라고 찍고

625
00:31:00,110 --> 00:31:02,610
그 캔슬 대로 다시 레이즈를 해 주고

626
00:31:02,610 --> 00:31:07,670
그다음에 이게 어찌 됐건 종료가 되면 클리너를 한다

627
00:31:07,670 --> 00:31:09,950
이런 간단한 콜트 있습니다

628
00:31:09,950 --> 00:31:10,920
그러면 이제 이거를

629
00:31:10,920 --> 00:31:14,660
캔슬 하는 방법이 몇 가지가 있는데

630
00:31:14,660 --> 00:31:18,540
여기 앞에 1초가 걸리고 이 이 이 테스트가 뭔가

631
00:31:18,540 --> 00:31:20,510
어떤 일을 하는데 걸리고

632
00:31:20,510 --> 00:31:22,370
그 다음에 그 테스트를 종료해서

633
00:31:22,370 --> 00:31:25,610
클리너를 하는 데 1초가 걸리는 체크입니다

634
00:31:25,610 --> 00:31:29,270
그러면서 이거를 우리가 캔슬을 해보면 영점 이거를

635
00:31:29,270 --> 00:31:31,560
이제 크리에이트 테스트를 해서 실행을 해 놓으면은 0

636
00:31:31,560 --> 00:31:32,410
3 온다고 했잖아

637
00:31:32,410 --> 00:31:34,320
그러면은 여기 싱카이 오션스

638
00:31:34,320 --> 00:31:38,090
일레븐 여의치가 걸리는 순간 이 포르티니 테스트

639
00:31:38,090 --> 00:31:41,580
새로 만들어진 코루틴 이제 진행을 하게 됩니다

640
00:31:41,580 --> 00:31:44,530
슬리피 를 걸어 놨으니까 6도 멈춰 있겠지

641
00:31:44,530 --> 00:31:46,120
나는 0.5 첨 하셨기 때문에

642
00:31:46,120 --> 00:31:48,780
얘가 쉬고 있는 동안 영상 고쳐 같이 나눠요

643
00:31:48,780 --> 00:31:51,180
코드로 다음 코드가 실행이 됐다

644
00:31:51,180 --> 00:31:55,310
캔슬하고 태스크가 클리너를 할 수도 있으니까

645
00:31:55,310 --> 00:31:56,980
일단 무조건 테스트에 대해서 넣어

646
00:31:56,980 --> 00:31:58,430
웨이트를 하나 걸어 주셔야 됩니다

647
00:31:58,430 --> 00:32:00,840
그래서 만약에 이 테스트가 아무것도

648
00:32:00,840 --> 00:32:02,890
캔슬을 현시점에 아무것도 안 하고

649
00:32:02,890 --> 00:32:03,970
그냥 리턴을 할 수도 있고요

650
00:32:03,970 --> 00:32:05,720
그럼 그냥 바로 끝이 나는 거고

651
00:32:05,720 --> 00:32:07,440
뭔가 다른 일을 할 수도 있죠

652
00:32:07,440 --> 00:32:08,810
그래서 캔슬 하면은

653
00:32:08,810 --> 00:32:10,840
얘네들이 캔슬도 에러가 내 보조

654
00:32:10,840 --> 00:32:16,440
레이스가 되고 이 캔슬도 에러 찍고

655
00:32:16,440 --> 00:32:18,950
그 다음에 빠졌더니 레이저를 해서 빠져나갈때 2

656
00:32:18,950 --> 00:32:21,210
파이널 블로그 실행해 되겠죠

657
00:32:21,210 --> 00:32:23,480
블록에 슬리피 또 걸려 있습니다

658
00:32:23,480 --> 00:32:26,620
그래서 얘는 20점 에서 1초가 또 추가로 걸립니다

659
00:32:26,620 --> 00:32:29,180
클리너를 하는 시간이 걸리는 거지

660
00:32:29,180 --> 00:32:32,750
그래서 이렇게 콘솔 로그 상으로는 워킹을 하다가

661
00:32:32,750 --> 00:32:35,510
중간에 캔슬 당해서 캔슬 다른 걸 내부에서 인질 했고

662
00:32:35,510 --> 00:32:37,090
캐슬 더라고 뜨고

663
00:32:37,090 --> 00:32:40,430
그다음에 빠져 나가기 전에 얘는 한 거야

664
00:32:40,430 --> 00:32:42,950
그래서 이거 사이에 이 사이에 이재영

665
00:32:42,950 --> 00:32:44,890
토모토루 씻고 이 사이에 1.0

666
00:32:44,890 --> 00:32:49,660
초를 쉬어서 실제로는 일정 추가 걸려서 마지막에 캔슬레이션

667
00:32:49,660 --> 00:32:54,040
책 찾으라고 이제 바깥에서 인식할 수 있게 됩니다

668
00:32:54,040 --> 00:32:56,760
이걸로 이제 굳이 내가 1번

669
00:32:56,760 --> 00:32:57,840
3번 하고 캔슬 하고

670
00:32:57,840 --> 00:32:58,560
이렇게 하지 않고

671
00:32:58,560 --> 00:33:00,360
타이머 저거는 방식으로 할 수도 있어요

672
00:33:00,360 --> 00:33:03,520
신카이 후에 왼쪽 거라는 api 가 있어서

673
00:33:03,520 --> 00:33:04,610
테스크로 걸어 놓고

674
00:33:04,610 --> 00:33:07,150
타임하우스 주면은 병점 5초 이내에

675
00:33:07,150 --> 00:33:08,710
이의 테스트가 완료로

676
00:33:08,710 --> 00:33:12,370
리턴을 하지 않으면은 그 테스트를 캐슬 시켜버리고

677
00:33:12,370 --> 00:33:16,690
이제 그 테크가 종료할 수 있게

678
00:33:16,690 --> 00:33:18,760
업데이트를 자동으로 걸어줍니다

679
00:33:18,760 --> 00:33:22,150
그래서 위와 똑같은 오즈의 요런 식으로

680
00:33:22,150 --> 00:33:23,750
이렇게 표현할 수가 있고

681
00:33:23,750 --> 00:33:28,110
이것도 정확히 마찬가지로 0.5 처가 걸리고 사이에 1.0

682
00:33:28,110 --> 00:33:30,240
저글러스 1.5 처가 걸리는데

683
00:33:30,240 --> 00:33:34,050
여기서는 3 에러가 바깥에선 여기는 타임하우스 버렸잖아요

684
00:33:34,050 --> 00:33:36,920
했을 때 에러가 아니라 바깥에서는 타임학원

685
00:33:36,920 --> 00:33:41,690
에러잡기 외부에서는 캔슬 데려가 그대로 진행하세요

686
00:33:41,690 --> 00:33:43,810
그래서 요거는 상황에 따라서

687
00:33:43,810 --> 00:33:48,330
내가 이거를 캔슬이 라는 캔슬을 조건 자체를 타임아웃을 표현

688
00:33:48,330 --> 00:33:50,120
하고 싶으면 이제 이런 api 를 써서

689
00:33:50,120 --> 00:33:52,410
타임 앞으로 쓸 수가 있는 거고요

690
00:33:52,410 --> 00:33:55,050
제 아니면 컨트롤 씨 로 누른것처럼

691
00:33:55,050 --> 00:33:57,370
강제로 내가 종료를 시켜야 되는 경우에는

692
00:33:57,370 --> 00:34:01,250
이제 그냥 펜스를 시켜서 캔슬 대로 잡으면 됩니다

693
00:34:01,250 --> 00:34:02,700
저 이런 점도 있고

694
00:34:02,700 --> 00:34:06,140
여기 이제 큰일 사람들이 간과하기 쉬운 부분이

695
00:34:06,140 --> 00:34:06,570
이런 식으로

696
00:34:06,570 --> 00:34:08,110
이제 클리커블 할 때도 추가로

697
00:34:08,110 --> 00:34:09,930
다른 코르테 너를 호출할 수 도 있다

698
00:34:09,930 --> 00:34:13,930
그래서 그 고추를 대해서 이거를 처리할 어떤 시간

699
00:34:13,930 --> 00:34:15,980
스케줄링을 기회를 줘야 된다는 점을

700
00:34:15,980 --> 00:34:18,400
많이 빼 먹는 경우가 많습니다

701
00:34:18,400 --> 00:34:20,830
타이어로 조금 복잡한 코드를 처음 봤을 때

702
00:34:20,830 --> 00:34:23,140
많이 발생하는 일이 컨트롤

703
00:34:23,140 --> 00:34:27,120
C 를 후딱 종료를 하면은 뭔가 뭐 뭐 xxx

704
00:34:27,120 --> 00:34:29,000
내 거 5만 원

705
00:34:29,000 --> 00:34:32,350
임학동 종료프로그램 이적료도 되긴 되는데

706
00:34:32,350 --> 00:34:34,850
막 1인가구 에러가 뜨면서

707
00:34:34,850 --> 00:34:38,090
그런 이유 중에 하나가 뭔가 클리너를 하는

708
00:34:38,090 --> 00:34:40,720
그런 코루틴 3시나 교회를 못 왔고

709
00:34:40,720 --> 00:34:42,730
중간에 강제 종료가 되어버리면서

710
00:34:42,730 --> 00:34:45,010
이제 그런 원인들이 뜨게 된다

711
00:34:45,010 --> 00:34:45,800
이런 부분을 이제

712
00:34:45,800 --> 00:34:50,590
잘 처리하는 게 굉장히 어려운 이슈가 될 거야

713
00:34:50,590 --> 00:34:54,490
또 이제 그러면은 싱카이 요를 쓰기 위해서

714
00:34:54,490 --> 00:34:56,240
우리가 다양한 정신과 여기 반해

715
00:34:56,240 --> 00:34:58,900
라이브러리들을 써야 된다고 얘기를 했습니다

716
00:34:58,900 --> 00:35:05,090
넥스 그 취소 불가다

717
00:35:05,090 --> 00:35:07,680
라이브러리들 있어 이거는 여러가지 이유가 있는데

718
00:35:07,680 --> 00:35:09,320
제가 이제 겪었던 몇 가지

719
00:35:09,320 --> 00:35:14,210
사례들을 더 얘기를 드리려고 합니다

720
00:35:14,210 --> 00:35:18,290
제가 있어요 어떤 커뮤니티 행사에 가서

721
00:35:18,290 --> 00:35:21,810
제가 이제 빼 근데 이거는 같이 표를 세션을 하는데

722
00:35:21,810 --> 00:35:23,520
계속 서버가 죽어요

723
00:35:23,520 --> 00:35:28,000
왜 존나 갔더니 박스 서버로 그게 무슨 AI

724
00:35:28,000 --> 00:35:29,690
포스트그레스큐엘 라이브러리가 있는데

725
00:35:29,690 --> 00:35:32,900
거기서 공간 트랜잭션이 끝나지 않았는데

726
00:35:32,900 --> 00:35:34,710
그거를 뭔가 취소를 할 수가 없어요

727
00:35:34,710 --> 00:35:36,610
뭐 이런 애를 계속 찍으면서

728
00:35:36,610 --> 00:35:38,590
커넥션이 릴리즈가 되지 않아서

729
00:35:38,590 --> 00:35:40,510
커넥션풀 계속 찾는 거예요

730
00:35:40,510 --> 00:35:47,550
그러니까 이제 출발하는 걸로 검사는 걸로 임시 해결했는데

731
00:35:47,550 --> 00:35:49,280
하는 거는 말씀 말하자면

732
00:35:49,280 --> 00:35:52,120
이제 그 캔슬레이션 이 안 된 것처럼

733
00:35:52,120 --> 00:35:53,350
이제 흉내를 내어 주는 겁니다

734
00:35:53,350 --> 00:35:56,180
그래서 그 안에서 실행된 이테스트 워드

735
00:35:56,180 --> 00:35:58,780
쉴드 안에서 실행되는 거는 바깥에서 아무리 캔슬 해도

736
00:35:58,780 --> 00:36:05,090
그게 계속 실행 이 바깥에서만 캔슬 데려가 잡힙니다

737
00:36:05,090 --> 00:36:09,790
이거를 이제서야 되는 이유가 몇 가지가 있는데

738
00:36:09,790 --> 00:36:14,140
앞에서처럼 데이터베이스 중간에 갑자기 캔슬이 돼

739
00:36:14,140 --> 00:36:17,520
버리면은 이게 취소를 하는 게 맞을 수도 있고요

740
00:36:17,520 --> 00:36:19,460
트랜잭션을 올백을 맞을 수도 있고

741
00:36:19,460 --> 00:36:23,050
그 트랜잭션을 계속 실행 하는 게 맞을 수도 있습니다

742
00:36:23,050 --> 00:36:24,330
우리가 장골 하든지

743
00:36:24,330 --> 00:36:26,370
일반적인 동기적인 웹 프레임워크 해서

744
00:36:26,370 --> 00:36:28,580
이것도 어떻게 처리를 하냐

745
00:36:28,580 --> 00:36:31,140
그 여기서 이제 집에 도착 했을 때

746
00:36:31,140 --> 00:36:35,920
발생하는 경우는 뭔가 천천히 웹 핸들러가 돌고 있는데

747
00:36:35,920 --> 00:36:37,640
사용자가 권하는 끊어 버리고

748
00:36:37,640 --> 00:36:40,360
새로고침하면 커넥션이 끊어지게 찌를 되면

749
00:36:40,360 --> 00:36:41,980
그런 경우에 그 핸들러 가지고

750
00:36:41,980 --> 00:36:44,240
놀고 있으면 캔슬을 해버립니다

751
00:36:44,240 --> 00:36:46,190
그런데 거기에 TV 트랜잭션에서 있어요

752
00:36:46,190 --> 00:36:48,780
근데 나는 이 사용자가 요청을 보낸 거에 대해서

753
00:36:48,780 --> 00:36:51,250
뭔가 기록을 하기 위해서 프렌즈 작은 하고 있었네

754
00:36:51,250 --> 00:36:56,040
그러면 그 트랜잭션을 진행이 돼야 되는데 아니거든요

755
00:36:56,040 --> 00:36:57,780
그런 경우 칠드런 써서

756
00:36:57,780 --> 00:36:59,800
그런 책 천재로 보호를 해 주면

757
00:36:59,800 --> 00:37:04,230
이제 취소가 되지 않고 돌아가게 됩니다

758
00:37:04,230 --> 00:37:06,150
그거를 이제 도와 주기 위한 라이브러리로

759
00:37:06,150 --> 00:37:08,250
aio 잡스라는 라이브러리가 있고

760
00:37:08,250 --> 00:37:09,820
이거를 이용을 하게 되면은

761
00:37:09,820 --> 00:37:13,850
제가 그 위에 팬들로 들을 실들을 감싼 것처럼

762
00:37:13,850 --> 00:37:15,320
보험 할 수가 있어

763
00:37:15,320 --> 00:37:19,230
여기에 또 문제가 있는 게 뭐냐면 핸들링 이라던지

764
00:37:19,230 --> 00:37:21,730
스트리밍 처럼 굉장히 장시간 돌아가는 코드를

765
00:37:21,730 --> 00:37:24,770
경우에는 제 3자의 알아들을 수가 있어요

766
00:37:24,770 --> 00:37:27,830
그러면 핸들러 안에 어떤 부분을 캔슬이 되면 안 되고

767
00:37:27,830 --> 00:37:30,110
어떤 부분을 캔슬이 가능해요 되거든요

768
00:37:30,110 --> 00:37:32,930
이런 것들이 어떻게 처리할 것이냐라는 문제가 또

769
00:37:32,930 --> 00:37:35,050
발생하게 됩니다

770
00:37:35,050 --> 00:37:36,950
그래서 그 다음에 또

771
00:37:36,950 --> 00:37:40,560
이제 레디스를 쓰는 경우에도 여러가지 문제가 있는데

772
00:37:40,560 --> 00:37:42,470
뭐 이렇게 복잡하게 말했었는데

773
00:37:42,470 --> 00:37:44,120
시간이 없으므로 넘어갔고

774
00:37:44,120 --> 00:37:47,230
뒷부분에 슬라이드를 보여드릴

775
00:37:47,230 --> 00:37:50,500
우리가 레딧에서 서브스크라이브 같은 팝콘을 쓴다

776
00:37:50,500 --> 00:37:52,700
그러면 서브스크라이브 태스크에서

777
00:37:52,700 --> 00:37:55,050
이제 피콜로 계속

778
00:37:55,050 --> 00:37:56,940
메시지가 들어오는 거 되기를 하게 됩니다

779
00:37:56,940 --> 00:37:59,890
근데 지금 현재 aladin

780
00:37:59,890 --> 00:38:03,280
신카이 구현에서는 그 서브스크라이브 를 걸어 놓고

781
00:38:03,280 --> 00:38:05,390
커넥션을 나 더 이상 너 이제

782
00:38:05,390 --> 00:38:08,160
더 이상 그거 서브스크라이브 하지 말고

783
00:38:08,160 --> 00:38:10,610
중간 하라는 거를 표현을 할 수가 없어요

784
00:38:10,610 --> 00:38:12,730
그걸 하려면은 컬렉션을 통해서

785
00:38:12,730 --> 00:38:14,600
어거스트 라이브라는 명령을 보내야 되는데

786
00:38:14,600 --> 00:38:17,020
지금 이제 이런 일 처리가 답변이 안 돼 있습니다

787
00:38:17,020 --> 00:38:20,310
그러다 보니까 서브스크라이브 화내지 않는 게 속 편해

788
00:38:20,310 --> 00:38:21,720
1000% 먹게 돼요

789
00:38:21,720 --> 00:38:25,060
그래서 내일 드려도 모든 왜 이렇게 스탠들러 해서

790
00:38:25,060 --> 00:38:27,910
계속 하게 되면은 이제 커넥션

791
00:38:27,910 --> 00:38:30,480
풀에서 진등은 문제가 발생을 할 수가 있고

792
00:38:30,480 --> 00:38:33,720
이런 거를 막기 위해서는 이제 서브스크라이브 는 서버

793
00:38:33,720 --> 00:38:36,480
인스턴스 한 개씩 해 주고

794
00:38:36,480 --> 00:38:41,050
그래서 얘가 로컬에서 하는 걸 이용해서

795
00:38:41,050 --> 00:38:43,020
로컬로 브로드캐스트를 해 주고

796
00:38:43,020 --> 00:38:45,240
그걸로 이용해서 이제 웹소켓이 라든지

797
00:38:45,240 --> 00:38:49,190
이런 양방향 시스템을 이용해 결정하게 된다

798
00:38:49,190 --> 00:38:52,030
이제 이 부분은 제가 어떠신가요 처리 10

799
00:38:52,030 --> 00:38:58,480
16 알았더니 용이랑 좀 더 궁금하신 분들은 최초를 자료나

800
00:38:58,480 --> 00:39:02,360
샘플코드를 홈페이지에서 찾아 보시면 되겠습니다

801
00:39:02,360 --> 00:39:07,170
그다음에 요거는 이제 또 하나 엉뚱한 그 삭제를 했던 케이스인데요

802
00:39:07,170 --> 00:39:08,330
싫다 에어컨 안 하고

803
00:39:08,330 --> 00:39:11,640
일반 평촌 하고 섞어서 이제 콜백을 구성을 했는데

804
00:39:11,640 --> 00:39:14,070
그래서 이제 그걸 9분하기 위해서 어떤 콜

805
00:39:14,070 --> 00:39:16,350
대기 루틴이 아니냐를 9분을 해서

806
00:39:16,350 --> 00:39:17,030
이제 이렇게 다르게

807
00:39:17,030 --> 00:39:19,090
호출을 하는 코드를 만든다고 있습니다

808
00:39:19,090 --> 00:39:24,100
근데 그 우리 이제 파이썬에 파쇄기 라는 걸 이용하면

809
00:39:24,100 --> 00:39:27,820
그 어떤 인사가 미리 셋팅되어있는 만들 수 있잖아요

810
00:39:27,820 --> 00:39:31,250
근데 이거를 하면은 얘는 분명히 싱크대

811
00:39:31,250 --> 00:39:33,370
프로 선언함수 차를 만든 건데

812
00:39:33,370 --> 00:39:36,510
걔는 더 이상 코루틴이 아니 아니 이게 된다

813
00:39:36,510 --> 00:39:38,970
이거는 그냥 일반 사무소로 감싸서

814
00:39:38,970 --> 00:39:42,530
실제로는 코루틴으로 어 이틀에서 사용할 수가 있어요

815
00:39:42,530 --> 00:39:45,130
내부적으로 동기함수 가 부른 함수가 비동기함수

816
00:39:45,130 --> 00:39:48,140
구글 비동기형 3리터는 코루틴 재고

817
00:39:48,140 --> 00:39:50,720
그분께서는 코팅제를 그대로 일어나기 때문에

818
00:39:50,720 --> 00:39:52,960
카페에 들어가면 사용을 똑같이 대학

819
00:39:52,960 --> 00:39:55,920
근데 타입 상으로는 다른 타입이 되는 거잖아

820
00:39:55,920 --> 00:39:59,130
그거를 해결하기 위한 개체가 2년 전에 발표했던

821
00:39:59,130 --> 00:40:02,740
둘째 있는 이런 함수를 쓰시는 고를 싱크로가 싸기때문에

822
00:40:02,740 --> 00:40:04,900
타입이 보존이 됩니다

823
00:40:04,900 --> 00:40:10,530
이런 것들을 가지고 생기는 법

824
00:40:10,530 --> 00:40:14,600
지금 시간이 초과 같은 거 같은데

825
00:40:14,600 --> 00:40:21,170
뒷부분에 이제 얘기 안 한다고 얘기 하는 대로

826
00:40:21,170 --> 00:40:25,470
구조적프로그래밍 하고자 하는 제 이런 이야기 드리고

827
00:40:25,470 --> 00:40:28,970
요번에 앞에서 얘기를 했으니까 그림만 보여 드리고

828
00:40:28,970 --> 00:40:32,260
그래서 아까 얘기한 것처럼 캐슬을 찍거나

829
00:40:32,260 --> 00:40:33,460
뭐 인터럽트를 찍거나

830
00:40:33,460 --> 00:40:36,210
이랬을 때 테스크 들 그다음에 쉴드 한테 스캔들

831
00:40:36,210 --> 00:40:39,000
같은 경우에도 바깥에서 캔슬 된 걸로 처리가 되지

832
00:40:39,000 --> 00:40:41,040
나 실제로 계속 실행해 되고 있거든요

833
00:40:41,040 --> 00:40:44,180
이런 애들이 안에서 예외를 베트남 어떻게 되느냐

834
00:40:44,180 --> 00:40:45,900
그 외에는 누가 잡느냐

835
00:40:45,900 --> 00:40:47,530
이런 문제들이 생깁니다

836
00:40:47,530 --> 00:40:48,140
그런 것들

837
00:40:48,140 --> 00:40:50,510
항상 고장을 해 주기 위한 개념이 스타벅스

838
00:40:50,510 --> 00:40:52,790
코리아 가지고요

839
00:40:52,790 --> 00:40:56,630
이제 얼마 전에 나온 것들 중에 요새 IPv4 ipv6

840
00:40:56,630 --> 00:41:01,980
같은 그 프로토콜을 쥬얼 스택으로 K3

841
00:41:01,980 --> 00:41:05,800
많이 생기면서 하나의 호스트접속 하기 위해서

842
00:41:05,800 --> 00:41:08,230
커넥터를 여러 개 동시에 열어서 시도를 해 보고

843
00:41:08,230 --> 00:41:12,220
그 중에 먼저 되는 놈을 커넥션을 쓰겠다

844
00:41:12,220 --> 00:41:14,690
이런 액션들이 존재합니다

845
00:41:14,690 --> 00:41:18,370
그런 걸 이제 해피아이돌 알고리즘으로 표현을 하는데

846
00:41:18,370 --> 00:41:21,950
이걸 없인 카이로 잘 쓰는 게 생각보다 쉽진 않아요

847
00:41:21,950 --> 00:41:23,900
발표 자료 다 올려 드릴 거니까

848
00:41:23,900 --> 00:41:26,060
그냥 오셔도 괜찮습니다

849
00:41:26,060 --> 00:41:28,460
네 그래서 이런 것들이 표

850
00:41:28,460 --> 00:41:33,400
사기 S 테스크 그룹이라는 개념들을 입을 했고

851
00:41:33,400 --> 00:41:35,170
그걸 통해서 그 그룹

852
00:41:35,170 --> 00:41:38,780
어떤 스코프 내에서 스폰되는 모든 레시피

853
00:41:38,780 --> 00:41:41,710
테스트들을 그 한꺼번에 캔슬 한다든지

854
00:41:41,710 --> 00:41:45,860
그 테스트들이 취소 됐을 때 다른 일을 한다든지

855
00:41:45,860 --> 00:41:48,490
이런 것들을 훨씬 더 유연하게 표현할 수 있는

856
00:41:48,490 --> 00:41:51,040
제 라이브러리들이 장 있었음

857
00:41:51,040 --> 00:41:54,100
여기서 지금 자세하게 설명을 들을 수 없고

858
00:41:54,100 --> 00:41:55,600
여기 링크해 드린 것들을 가서

859
00:41:55,600 --> 00:41:59,680
보시면은 어떤 내용인지 아실수 있습니다

860
00:41:59,680 --> 00:42:03,570
이런 라이브러리들을 공부시작

861
00:42:03,570 --> 00:42:06,260
신카이 5에서도 아무래도 그런 비슷한 기능들이 필요하겠다

862
00:42:06,260 --> 00:42:07,250
해서 내부적으로 자고

863
00:42:07,250 --> 00:42:11,250
구현된 1동주민센터 api 를 듣고 그런데요

864
00:42:11,250 --> 00:42:13,900
지금 현재 지원하는 언제

865
00:42:13,900 --> 00:42:17,420
저도 컨시드 같은 경우에는 목에도 라든지

866
00:42:17,420 --> 00:42:19,950
웨이트 같은 것들이 앞서 얘기했더니

867
00:42:19,950 --> 00:42:21,930
테스크 그런 비슷한 역할을 합니다

868
00:42:21,930 --> 00:42:25,070
하지 마 이거 그대로 쓸 수 없는 이유들이 있는데

869
00:42:25,070 --> 00:42:29,570
그 테스트 안에서 발음 테스트 하는 거로

870
00:42:29,570 --> 00:42:32,570
이제 처리를 못 한다고 바깥에서 잡아내지 못한다든지

871
00:42:32,570 --> 00:42:33,950
이런 문제들이 있어서

872
00:42:33,950 --> 00:42:35,770
현재로서는 그냥 뒤폰트

873
00:42:35,770 --> 00:42:38,520
워싱턴 열어 놓고 쓰기가 좀 어려운 상태입니다

874
00:42:38,520 --> 00:42:40,860
그리고 이런 거를 도입하고

875
00:42:40,860 --> 00:42:43,630
하는 여러 가지 시도들이 있었으나

876
00:42:43,630 --> 00:42:45,440
결론은 지금 잘 안 되고 있어요

877
00:42:45,440 --> 00:42:46,540
왜냐하면 이거는 것인가요

878
00:42:46,540 --> 00:42:49,340
내부에 구조를 고쳐야 되는 부분들이 있어서

879
00:42:49,340 --> 00:42:54,340
그래서 이제 그 사람들이 이제 그러면 우리 딸은 라이브러리

880
00:42:54,340 --> 00:42:56,500
이제 우리도 이거 기원합시다 해서

881
00:42:56,500 --> 00:42:59,240
작년 작년 8월 1년 전이죠

882
00:42:59,240 --> 00:43:01,310
이때도 아 이거 이게 만들어 보니까

883
00:43:01,310 --> 00:43:03,640
괜찮은 것 같아 라고 했는데

884
00:43:03,640 --> 00:43:04,480
이게 들리지도 안 돼서

885
00:43:04,480 --> 00:43:08,030
누군가 한 달 전에 댓글 달았던 이 사람이 답하기를

886
00:43:08,030 --> 00:43:08,880
파이썬 3.8

887
00:43:08,880 --> 00:43:11,490
아직 답변이 안 돼서 아직 못 먹었어요

888
00:43:11,490 --> 00:43:13,130
이제 이런 상태입니다

889
00:43:13,130 --> 00:43:15,340
그래서 이제 파이썬 3.8 에서

890
00:43:15,340 --> 00:43:17,560
변화가 생기는 부분이 생각보다 많지는 않은데

891
00:43:17,560 --> 00:43:20,510
제일 중요한 거는 캔슬 데려가 뵐 수 있을 테니 된다

892
00:43:20,510 --> 00:43:24,260
이게 제일 버스트 인터페이스 같은 거 좀 바뀌고

893
00:43:24,260 --> 00:43:27,540
utp 부연이 윈도우 버전을 기본적으로 표시되면서

894
00:43:27,540 --> 00:43:30,260
이제 iocp 를 디폴트로 사용하게된다

895
00:43:30,260 --> 00:43:37,570
좋은 것도 있습니다 발표를 빨리 마무리하고

896
00:43:37,570 --> 00:43:39,060
모든 곳에 시작이 있으면 끝도 없어

897
00:43:39,060 --> 00:43:42,910
그래서 코루틴이란 것도 중간에 취소가 될 수가 있는데

898
00:43:42,910 --> 00:43:45,560
그러니 취소를 어떻게 표현하느냐

899
00:43:45,560 --> 00:43:48,940
그리고 이 취소가 된 조건이 미에 시점을 발생한 모든 게

900
00:43:48,940 --> 00:43:51,510
상황들을 애플리케이션 개발자의 있잖아

901
00:43:51,510 --> 00:43:52,820
내가 다 잡을 수 있느냐

902
00:43:52,820 --> 00:43:55,320
이런 이슈들이 있음

903
00:43:55,320 --> 00:43:57,550
처음 만들어졌다는 그런 문제까지 미쳐

904
00:43:57,550 --> 00:43:59,900
사람들 생각을 못 했던 9분 드렸고

905
00:43:59,900 --> 00:44:02,240
제 몇 년간의 경험이 쌓이면

906
00:44:02,240 --> 00:44:04,390
다양한 대안들이 스트럭처드 컨커런시 자는 거

907
00:44:04,390 --> 00:44:05,700
우리가 해야 되겠다

908
00:44:05,700 --> 00:44:08,380
그럼 다양한 제안들이 나가고 있는 상태입니다

909
00:44:08,380 --> 00:44:13,760
아마도 제가 매년 타요가 살만해졌다 라고 했지만

910
00:44:13,760 --> 00:44:16,660
조금 더 있어야 더 쓸 만해 있을 것 같다

911
00:44:16,660 --> 00:44:19,110
일단 솔져를 받치도록 시간이 졌으니

912
00:44:19,110 --> 00:44:21,720
질문을 따로 내려가서 받도록 하겠습니다
