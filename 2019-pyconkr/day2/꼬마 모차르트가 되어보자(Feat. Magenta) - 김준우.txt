https://youtu.be/g2c_ViqRO3E

-안녕하세요? 이번 시간에는 김준우 한상곤 님께서 꼬마 모차르트가 되자는 주제로 진행을 하겠습니다.
-안녕하세요? 김준우, 저는 한상곤입니다.
반갑습니다.
저는 한상곤이고요. 현재 회사에서 그냥 평범한 자바 개발자로 근무하고 있어요. 준우 씨는 자기 발표할 때 소개드릴 겁니다. 개인적으로 프로젝트 관련된 건 파이썬으로 하고 있고 여러분도 그러시겠지만 저도 스터디를 많이 하거든요. 스터디나 프로젝트하면서 알게 된 거 여러분이랑 공유하면 좋겠다고 생각한 내용을 정리해서 절반 정도 제 부분만 발표하도록 하겠습니다.
오늘 소개할 것은 발표 내용 제목에 느끼신 거 있나요? 일화 생각나는 거 있나요? 모차르트라고 하면? 17세기에 최첨단 인공지능이죠?
바티칸 성당 가보시면 천지창조라는 그림이 그려져 있는 성당이 있습니다. 좋은 건축물이 있거든요. 거기에 1770년대에 여기에서 어떤 음악 하나가 있어요. 이게 악보가 없어요.
악보가 없고 그냥 구전되는 거죠. 그런데 모차르트가 이것을 복사를 합니다. 듣고 복사를 해요.
이게 중세시대에 가능한 일이죠. 여러분은 가능하신가요? 저는 일단 안 돼요. 그런 재능이 전혀 없어요. 그래서 저희가 이것을 해 볼 수 있지 않을까라고 생각을 해서 이것을 도전을 해 봤어요.
지금 동영상을 틀어드릴 건데 화면 관계상 음악이 크게 안 나갈 겁니다. 음악을 최대한 크게 틀어드릴게요.
혹시 구분 가능하시겠어요? 저희가 자막을 안 깔면 사람이 친 것과 기계가 친 것을 구분하기 쉽지 않습니다. 할 수는 있어요. 집에서 좋은 스피커로 들으시면 구분이 됩니다. 높낮이 차이가 생각보다 많이 나요.
저희가 이런 내용을 스터디하면서 만들게 된 내용과 동기를 공유하고자 합니다.
머신러닝 관련된 스터디를 많이 하지 않나요? 저희는 많이 해요. 부산에서 5년 정도 소스코드리딩이라는 모임을 계속해서 운영하고 있습니다. 소스코드읽는 거예요. 문학작품 읽듯이.
그런데 여러분, 소스코드, 머신러닝 스터디 같은 것을 하다 보면 겪게 되는 문제가 있습니다. 여러분은 어떨지 모르겠는데 모델을 만들어요. 개발자잖아요. 제가 모델을 만드는 게 무슨 의미가 있는지 회의감이 들었어요. 그리고 이 회의감이 드는 결정적인 이유가 뭐냐 하면요 MNIST랑 이런 예제만 해요. 저만 그래요?
우리나라에 있는 거의 대부분의 책들은 이 4개의 예제로 합니다. 그러고 뭐라고 하는지 알아요? 머신러닝 전문가가 됐으니 무엇을 해 보래요. 좀 그래요. 멘붕이 와요.
100번 안 되는 데이터로 오버피팅된 값이 나오는데 너무 답답하더라고요.
그래서 실용성은 없어도 된다.
진짜 1도 없어도 되는데 그냥 재미만 있어도 좋겠다고 생각해서 프로젝트를 찾아다니기 시작했어요. 음악이나 미술 같은 거. 이런 거 선택하게 되면 뭔가 옵니다.
미술을 머신러닝 돌리는 게 가능하냐는 게 오지 않나요? 그래서 우리의 영원한 친구. 우리는 이게 없으면 아무것도 할 수 없어요. 텐서플로 머신러닝 불가능한 합니다. 파이썬만 가지고 머신러닝 하시는 분은 본 적이 없거든요. 그래서 마젠타라는 프로젝트를 알게 됩니다.
자바스크립트로 다 동작합니다. 웹에서 동작하고요. 그래서 많은 사람에게 마젠타 프로젝트를 알리고 MNIST 이제 그만해 봅시다.라고 여러분에게 제안해 보고 싶어서 발표를 제안하게 됐어요. 저는 그렇습니다. 텐서플로 다 아시죠? 구글에서 만든 그거입니다.
모르면 여기 있으시면 안 되죠. 여기 있는 분은 그거 다 아는 분이잖아요. 그래서 저희가 마젠타 프로젝트라는 것을 보면서 이것을 그런데 누가 쓰나? 어떤 애들이 이것을 쓰고 있나 되게 궁금했어요. 가능성이 있는 얘기인데 구글에서 하는 건가? 궁금하죠?
그래서 마젠타 프로젝트를 찬찬히 들여다 보면 이런 내용이 있습니다. 머신러닝 이용해서 예술 작품을 만들 수 있는 도구예요. 그것은 저도 알겠어요. 텐서플로 이용하면 협업도 할 수 있고 커뮤니티를 생성하는 게 목표라는 데 1도 이해가 안 가요. 어떤 음악가나 미술가를 자기 작품에 구글에 준다는 말입니까? 그런데 구글이 이것을 해냅니다.
어떻게 하느냐?
몇 달 전에 바흐 탄생 기념으로 구글 두들에서 어떤 작품을 만든 것을 기억하시는 게 있으세요? 없어요? 구글 두들로 바흐 탄생 기념일에 뭔가를 만듭니다. 여기에 사용자가 소프라노 악보를 입력하면 기계는 나머지3성부 코드를 자동으로 배치시키는 프로그램을 간단하게 만들었어요.
이거 미끼 상품이죠? 이게 뭐하는 거냐 하면 여러분이 만든 어떤 음악적인 성취물을 구글이 데이터로 가지고 가고 싶은 거예요. 구글은 할 수 있어요. 구글이잖아요.
그런데 저는요?
눈 앞이 깜깜합니다. 저는 그런 능력이 안 돼요. 왜냐하면 제 홈페이지에 일단 100명도 안 와요. 그래서 생각을 해냈죠. 미디 파일을 찾자. 미디 파일을 찾으면 해결되겠지. 찾았어요. 여기에 보시면 VG뮤직.닷컴이라는 곳만 가보면 8비트 음악만 잔뜩 모아놓은 것이 있습니다. 그래서 미디 파일로 들어오죠. 여기에서도 불법의 뭔가가 있죠.
절대 쓰시면 안 됩니다. 이거 학습용 이외에는 쓰시면 안 돼요. 학습을 하고 모델 학습을 하고 난 이후에는 8비트 음악이 나오는 미디 음악을 생성을 해요.
여기 위에 보시는 링크에 제가 코드를 다 넣어놨어요.
데이터 수집 자체가 불법의 향기가 있어요. 이것은 학습용 이외에는 불가능합니다. 그런데 제 얘기를 듣고 보면 마젠타 괜찮은데라고 하는데 여러분 혹시 뭔가 느낌 없어요? 저는 있어요. 미디 파일을 합법적으로 어떻게 구하지?
그래서 김준우 님이 미디 파일을 합법적으로 구하는 방법을 여러분에게 알려드릴 겁니다.
-저 같은 보통 사람들은 테이프가 늘어질 때까지 계속 듣고 나서야 어느 정도 비슷하네라고 할 정도로 연주할 수 있습니다. 21세기에 사는 저는 기술의 힘을 빌리기로 했습니다.
마젠타라는 라이브러리가 있는데 그것을 이용하면 한 번 들었던 피아노 연주를 미디 파일로 만들어주는 프로젝트 예제가 있어서 그것을 한번 지금 설명을 드리겠습니다.
먼저 마젠타에 대해서 조금 더 알아보기 위해서 웹페이지에 접속해서 어떤 것이 있는지 살펴 봤는데요.
먼저 구글 코드랩 노트북이 있는데 웹 브라우저에서 라이브 코딩을 할 수 있는 여러 가지 예제가 있습니다. 쓸만 한 것들이 편의점 틈새라면처럼 곳곳에 숨어져 있어서 관심 있는 분들은 마젠타 홈페이지 찾아가셔서 해 보시면 되고요.
그리고 약간 흥미를 이끄는 부분이 있습니다. 직접 체험해 볼 수 있는 웹앱 데모들이 있는데요. 데모를 보니 관심도가 올라가더라고요. 데모를 다 볼 수는 없지만 일부만 여기에서 간단하게 소개를 드리려고 합니다.
먼저 첫 번째로 살펴 볼 데모는 매직 스케치 패드인데요.
오른쪽 상단에 단어가 cat이라고 있죠? 단어가 선택하고 사용자가 그림 일부를 그리면 나머지를 기계가 완성시켜주는 그런 데모입니다.
혹시 예전에 퀵드로라는 구글에서 만든 사이트를 접속해 본 분이 있을지 모르겠는데 여기에 접속을 하면 여러분의 노동을 댓가로 구글은 드로잉 데이터를 얻게 되고 여러분이 그린 그림을 맞히는 그런 사이트가 있었어요.
그런 사이트에서 그린 그림들을 이용해서 이 매직 스케치 패드의 학습을 하게 된 겁니다.
그리고 그 다음으로는 레이턴트 룹스라는 데모인데 사용자가 입력한 서로 다른 스케일의 멜로디 4개를 학습하고 합성해서 새로운 멜로디 패턴을 만들 수 있는 것입니다.
음악가는 조합해서 아예 새로운 멜로디 라인을 만들 수 있고요.
그리고 그다음에 피아노 징이라는 예제인데 피아노 지니는 단지 8개의 버튼만으로 그럴듯한 연주를 할 수 있게 만드는 데모입니다.
키나 코드 이런 것들을 몰라도 키보드 8가지 버튼을 누르면 느낌대로 치면 그럴 듯한 연주를 하게 해 주는 데모이고요.
이 데모는 처음에 4박자 정도만 사용자가 혹은 그 이상 사용자가 패턴을 이용하면 나머지는 기계가 완성시켜주는 데모입니다.
밑에 있는 버튼을 조작하면 더 패턴을 만들어주기도 합니다. 그리고 제가 제일 관심 있는 데모인데요. 피아노스크라이브라는 데모입니다.
피아노 연주를 들려주면 미디스퀀스로 바꿔주는 데모입니다. 초반에 소개한 동영상이 있어요. 그 영상에 들어간 기계 연주를 이 데모로 만들었고요. 오른쪽 사이트에 접속해서 업로드 하면 이 피아노 연주를 분석해서 미디 스퀀시로 분석해 줍니다. 화면에 나오는 네모 두부 같이 생긴 친구들이 분석된 결과 노트고요. 가로 길이는 노트의 음의 길이를 의미하고 높이는 음정을 의미합니다.
그래서 데모들을 체험해 보니까 마젠타 라이브러리를 이용해서 많은 것들을 할 수 있구나 제가 알게 됐고요.
그러니까 마젠타 데모는 자바스크립트로 되어 있지만 파이썬 라이브러리도 제공을 하기 때문에 파이썬으로 재미있는 것을 만들어볼 수 있겠다고 생각을 해서 개발을 시작하려고 개발 머신을 정했습니다.
그런데 제가 가진 제일 좋은 컴퓨터는 스팀머딘 윈도우즈라고 하죠. 스팀머신이기 때문에 여기에서 개발을 하려고 하는데 텐서플로가 플랫폼에서 자유롭다는 말을 하는데 한번에 잘 되지 않더라고요.
리눅스 위주로 잘 돌아가는데 윈도우에서 리눅스를 쓸 수 있는 방법이 없을까라고 해서 찾은 게 WSL입니다.
이 영상은 WSL에서 도커를 시행하는 모습인데 윈도우10에서 정말 빠르게 리눅스 명령을 실행할 수 있다고 마이크로소프트 블로그에 올라온 것을 가지고 왔습니다. 이 영상을 보면 정말 좋아보여요.
좋아보이는데...
리눅스 명령을 수행하는 데 퍼포먼스도 괜찮아 보이고요. 그런데 단점이 있습니다.
윈도우 10에서 실행파일을 실행하기 위한 시스템인데 공부나 토이 프로젝트용으로는 괜찮은데 이게 아무래도 지금 WSL 1은 커널이 따로 돌아가는 게 아니고 위에 돌아가다 보니까.. 곧 더 성능이 좋아진 WSL 2가 공식 출시되므로 다음에 할 수 있는 게 더 많아질 것으로 보입니다.
그래서 이 WSL을 이용해서 리눅스를 설치해서 우분투를 설치해서 우분투에 파이썬 3.0을 설치하고 PIP로 마젠타 라이브러리를 설치하면 개발 환경 세팅은 끝납니다.
정말 단순하고요.
그리고 저는 새로운 모델을 만들거나 학습시키는 데는 큰 재주와 관심이 없지만 이미 학습된 모델을 갖다 쓰는 데는 큰 관심이 있기 때문에 앞으로 설명드릴 데모 코드들도 어떻게 쓰는지 설명을 드릴 거고요.
만약에 코드 설명이 어렵다고 해도 그냥 넘어가시면 저처럼 그냥 스크립트를 잘 쓸 수 있게 됩니다. 그냥 그렇구나라고 받아들이시면 돼요.
그래서 개발환경도 세팅을 했고 마젠타 프로젝트 예제 소스를 받아서 빌드를 해 보는데 바로 되지 않습니다.
그래서 혹시 하고 2.7로 해 보니까 빌드가 되더라고요. 왜 그런고 보니 파이썬에서 소리를 내기 위해서 파이블루이드신스라는 모듈을 쓰는데 2점대밖에 모델이 지원되지 않았고요.
그래서 파이블루이드신스 모듈을 덜어냈습니다.
덜어내니까 바로 되더라고요.
파이썬으로 소리를 낼 필요가 없으면 2점대 파이플루이드신스 걷어내는 게 더 좋습니다.
그래서 마젠타 라이브러리를 설치하고 예제를 빌드하고 좀 더 그럴 듯한 데모를 실행해 보기 위해 온셋 앤 프레임스 모델을 사용한 데모를 찾았는데 이것은 아까 전에 구글, 마젠타 홈페이지에 있는 코드랩노트북에 있는 코드를 참고해서 코드를 작성했습니다.
먼저 체크포인트 파일을 받습니다. 학습된 모델 파일을 받아서 이것을 잘 갖다쓰기 위해서 최신 버전의 체크 포인트 버전을 받고요. 받은 뒤에 필요한 모듈들을 임포트를 하고요. 그리고 초기화 과정을 추행을 하는데 체크 포인트 경로를 설정하고 생성합니다.
그리고 생성한 것을 이용해서 만들고요. 그리고 체크 포인트 경로 이용해서 생성하고 그 데이터 접근을 위한 것을 생성합니다.
그리고 중요한 피아노 연주 오디오 파일을 읽고요.
그 오디오 파일을 분해한 후에 프로토콜 버퍼포맷 후에 시니얼라이징을 합니다.
그리고 제일 중요한 추론 단계인데 추론 예측 단계인데 세션을 생성하고 초기화한 뒤에 그리고 추론합니다.
추론한 결과를 노트가 활성화된 길이 지금 노트의 길이 그리고 노트가 언제 시작됐는지 시작한 시점 그리고 그 각 노트의 강약, 멜로시티를 각각 결과로 받는데 그 데이터를 각각 저장하고요. 아까 추론 결과 데이터를 이용해서 미디스퀀시로 변환한 후에 미디 파일로 내보냅니다.
그러면 아까 업로드했던 피아노 연주를 미디파일로 뿅 만들어냈습니다.
여기까지가 온셋앤프레임에 대한 설명이었고요. 코드랩노트북에서 바로 라이브 코딩으로 실행할 수 있습니다.
설명도 잘 되어 있고 순서도 읽으면서 실행버튼을 누르면 바로 결과로 확인할 수 있기 때문에 쉽게 따라할 수 있으니까 확인을 해 보시면 좋고요.
그래서 이렇게 미디로 떨어뜨리는 데모를 이용해서 무엇을 만들었나?
제가 만든 것은 피아노 연주인데 어디에서든지 그 연주를 악보나 미디를 만들어서 재생을 하는 게 확인을 하는 게 목표예요. 그런데 오늘은 웬지 피아노 연주를 만날 것 같다고 하면서 노트북을 가지고 다닐 수는 없어요. 그래서 스마트폰에 온셋앤프레임스를 이용한 예제를 심어보고 싶어서 시도를 해 봤습니다.
당연히 스마트폰에는 바로 마젠타 라이브러리를 불러올 수가 없었습니다.
그래서 서버 단과 클라이언트 단을 나누어서 클라이언트에서는 소리를 녹음하고 서버에서는 미디 파일로 만들어주는 그 부분을 구현했는데 에저에 우분투를 설치하고 파이썬을 설치한 후에 온셋앤프레임스 모델 예제 스크립트를 작성해서 플라스크로 API 서버를 만들어서 디스트리뷰트를 호출하는 방식으로 만들었고요.
안드로이드 앱을 만들었는데 녹음을 한 오디오 파일을 서버로 보내서 결과를 미디파일로 받는 것까지 클라이언트로 구현을 했습니다.
지금까지 제가 설명드린 것은 피아노 연주 부분에 대해서는 정말 잘 초반에 나온 영상을 보셔서 알 수 있겠지만 정말 잘 분석해요.
그래서 궁금해서 사람 목소리를 녹음을 해서 한번 돌려봤어요.
사람 목소리도 어느 정도 노트를 인식을 하더라고요.
그런데 사람 목소리다 보니까 굵기랑 노이즈도 노트로 같이 인식을 해서 결과를 그대로 쓰기에 는 조금 힘들겠더라고요.
그래서 이왕이면 피아노 연주만 분석을 하는 게 좋고요. 이 소스 코드는 서버 단 클라이언트 단 소스 코드들은 앞에 있는 저장소에서 확인을 할 수 있고요.
드디어 결론입니다.
저는 모델을 만들고 학습하는 것보다 이미 만들어진 모델을 잘 갖다쓰는 것을 더 관심 있고 더 좋아하기 때문에 텐서플로 허브 같은 사이트에서 모듈을 찾아서 갖다 쓰는 것을 좋아하고요.
여러분들도 텐서 플로 허브에서 찾아서 갖다 쓰는 것을 해 보셨으면 좋겠고요. 아까 말씀하신 것처럼 MNIST 이런 예제뿐만 아니라 파이썬으로 구현된 다양한 머신러닝 예제들을 프로젝트를 찾아서 한번 실행해 보는 것, 혹은 코드를 보는 것을 추천합니다.
그리고 대한민국 민속놀이 스타크래프트도 파이썬으로 실행시킬 수 있거든요. 한번 관심 있는 분들은 맨 아래에 있는 저장소로 들어가셔서 보시면 될 것 같습니다.
그리고 마젠타 프로젝트가 아까전에 자바 스크립트로 된 예제들을 설명을 소개를 드렸는데 파이썬으로 마젠타 프로젝트 라이브러리가 있는 이유는 제가 생각하기에는 호환성이 좋고 아무래도 마젠타 라이브러리 특성상 오디오, 비디오, 이미지 이런 파일처리를 해야 하기 때문에 속도가 좋은 장점이 있어서 파이썬으로 구현을 할 수 있었던 것 같고요.
파이썬으로 소리를 낼 필요가 없다면 파이썬 툴을 떠나도 좋습니다.
제발 떠나시기를 바라겠고요.
윈도우 환경, 스팀머신에서 공부나 토이프로젝트를 진행하고 싶다면 WSL이 좋은 대체제가 될 수 있다고 생각합니다.
어디까지나 공부나 토이 프로젝트로 사용하기를 추천하고요. 그런 분은 없겠지만 프로젝트로 올리려고 하면..
이 다음은 참고 링크들이고요.
그리고 발표는 여기까지입니다.
질문을 받겠습니다.
-좋은 발표해 주신 김준우 한상곤 님께 다시 한 번 큰 박수 부탁드립니다.
그리고 시간 관계상 질문은 딱 한 분만 받겠습니다. 질문은 가운데 있는 마이크로 나오셔서 해 주시면 되겠습니다.
-발표 잘 들었습니다. 에저를 사용하셨다고 하는데 구글 클라우드나 AWS 같은 그런 클라우드를 제외하고 에저를 사용한 특별한 이유가 있는지 궁금합니다.
-저희가 일반 개발자라서 회사의 지원을 받을 수 있는 환경이 아니거든요. 그러다 보니까 비싼 비용의 서버 스펙을 사용할 수 없어서 제일 저렴한 가격대 성능이 안 좋은 에저를 선택해서 한 거죠. 가격도 싸고 성능도 안 좋은, 그러나 작동은 하는.
-실제로 소리를 내는 것은 미디 프로그램이어서 파일플루이드가 필요하지 않은 건가요?
-예, 어차피 서버에서는 미디파일로 내보내는 게 주 목적이기 때문에 재생하는 부분은 아예 드러내고요. 재생은 클라이언트 안드로이드 앱에서 파일을 받아서 재생할 수 있도록 해서 필요하지 않습니다.
-미디 파일을 추출해서 미디 프로그램에 삽입을 해서 재생을 시키는 그런 구조인가요?
-안드로이드에 미디어 플레이어라는 객체로 미디 파일을 읽으면 바로 재생할 수 있거든요. 별도의 라이브러리는 필요없고 안드로이드 API만으로 가능했습니다.
-감사합니다.
-이것으로 질문 답변 시간을 마치겠습니다. 다시 한 번 김준우 한상곤 님께 큰 박수 부탁드립니다.
(박수)
그리고 질문해 주신 분 앞으로 나와서 책 받아가세요.