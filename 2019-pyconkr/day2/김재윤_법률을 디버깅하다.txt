<법률을 디버깅하다 - 김재윤>
-(사회자) 곧 발표가 시작될 예정이니 빈 자리에 앉아주시기 바랍니다.
안녕하세요? 이번 시간에는 김재윤 님께서 '법률을 디버깅하다'라는 제목으로 45분간 발표해주시겠습니다. 원활한 발표를 위해 질의응답은 발표 후 시간이 남으면 진행하도록 하겠습니다. 그러면 큰 박수 부탁드리겠습니다.
(박수)
(영어 통역 중)
-(발표자) 감사합니다. 안녕하세요?
시작하겠습니다. 먼저 제 소개를 드리면 저는 원래 국회에서 법제업무를 하다가 또 예산분석 업무 같은 거 하다가 요즘은 서울대학교 행정대학원에서 박사과정 밟고 있습니다.
주로 입법을 파이썬을 이용해서 분석하고 있는데요. 더 좋은 법률을 만들기 위해서 파이썬으로 법률을 분석한 사례를 공유하도록 하겠습니다. 여러분, 법률이라는 것도 일종의 협업을 통한 코딩 프로젝트라고 보실 수 있습니다.
보시면 트럼프 대통령께서 말그대로 리터럴한 레드테이프를 자기 가위로 끊고 있는 그런 사진입니다.
내가 규제를 다 없애버리겠다, 이렇게 이야기하면서 들어온 거죠.
그런데 여태까지 규제 없애는 거 성공한 사람이 별로 없더라고요.
그래서 이 법률이란 프로젝트가 어떤 거냐. 정말 상상도 할 수 없는 그런 개발환경에 놓여져 있습니다. 초장기 프로젝트고요. 1948년 대한민국 건국과 함께 시작을 했고 현재로서는 7만 개의 조문, 그리고 5백만 단어, 2500만 자의 글자로 이루어져 있습니다. 수많은 개발자, 국회의원을 말하는 거죠.
국회의원이 입사, 퇴사를 반복하고 있습니다.
당선이 됐다가 안 됐다가 구속이 돼서 나가시기도 하시고 그만두기도 하시고.
서로 편도 달라요. 같은 회사에 당이 다른 사람들이 와서 리더십도 없고. 그래서 그런 사람들이 같이 300명이 개발을 한다고 생각해보십시오. 70년간. (웃음)
거기다 오래된 코스에는 주석이나 문서도 없어요. 심지어 레거시 시스템도 있습니다. 예를 들어서 조선총독부령 이런 것도 청산이 안 된 게 많아요.
그래서 이런 것들을 다 끌어안고 우리가 법률이라는 프로젝트지금 70년간 하고 있는데 문제가 없을까요? 코드에? 100% 문제가 있을 거라고 확신을 하고 이 작업을 했습니다. 그래서 오늘하는 건 우리 파이썬으로 법률 프로젝트에 우리가 조금 커밋을 해보자.
그래서 첫 번째 이제 404에러가 법률에 있다는 내용입니다.
그래서 법률과의 충돌을 파이썬을 이용해서 자동검사해보자.
두 번째는 형별규정전수조사. 그리고 세 번째는 법률네트워크 분석. 작년에 했던 파이콘 발표의 후속편입니다.
이 두 개는 그겁니다. 구성의 오류 같은 건데요. 국회의원
개개인은 자기가 훌륭한 입법을 했다고 생각해요. 실제로도 그렇고요. 그런데 이게 70년간 누적을 해서 보면 이상한 게 많다는 어죠. 그런 것입니다.
시작하겠습니다. 특례제안코드가 있는데 특례가 뭡니까?
예를 들어서 토지규제 같은 거 있는데 자기 지역에만 풀 수 있다고 생각해보십시오. 의원님 입장에서 얼마나매력적입니까?
그런데 그런 것들을 다 같이 하지 말자는 취지에서 만들어진 법입니다.
일종의 목록규제인데요.
예를 들면 그렇습니다.
특례를 예를 들어서 토지특례를 정할 수 있는 법을 몇 개 정해두는 거죠.
왼쪽에 보시면 특례제한법 목록이 있죠. 어디에만 정할 수 있다고 정해놓는 거죠.
그러면 좌우가 일치되어야 합니다.
이 A법에는 특례가 규정되어 있고 왼쪽에는 별표가 있는 겁니다.
그런데 지금 기획은 이랬는데 목록이 빈 경우도 많아요. 그래서 별표 목록도 없는데 특례를 자기 지역을 위해서 법률에 정해버리는 겁니다. 아니면 A법이 개정이 됐는데 거기에 따라서 주소를 안 옮겨놓은 거죠.
주소가 바뀌었다는 겁니다.
그다음에 법률 이름을 바꿨는데 별표 목록에 반영을 안 시켜놓은 것도 있죠.
아예 법이 없어졌는데 목록에 남아있거나.
이 두 개가 일치가 안 하면 어떻게 되냐 하면 이렇습니다.
이게 실제 사례인데요. 코드사고죠. 집단에너지사업법이라는 게 있는데 부담금에 대해서 규정을 하고 있어요. 재개발사업 같은 거를 하면 내도록 하고 있는데 문제는 부담금에 대한 특례제한법인 부담금관리기본법에 이렇게 써있어요. 부담금은 별표에 규정된 법률에 따르지 아니하고는 설치할 수 없습니다. 그런데 별표에 그런 법이 없어요. 이 경우죠, 지금.
A법이 집단에너지사업법이고 왼쪽에 특례제한법이 부담금법이 되는 겁니다. 목록이 없는데 개별법에 규정을 해버렸다는 거죠.
그런데 거기까지는 괜찮은데 문제는 경기도 한 현장에서 이걸 가지고 부담금을 부과를 했대요. 이렇게 하지 말라고 해놨는데 부담금을 부과를 하니까 열받잖아요. 그래서 소송을 했어요. 3심까지 해서.
그래서 굉장히 오랫동안 많은 사람들이 고통을 받았던 그런 케이스입니다. 이런 게 있으면 안 되겠죠. 코드를 이렇게 짜면 안 됩니다.
그래서 어떻게 할 거냐, 제가 지금 설명을 드리는 건 그러면 이 특례목록이 있잖아요. 왼쪽, 오른쪽을 맞추기 위해서 한번 찾아가보자는 거죠. 왼쪽에 있는 목록으로 실제 그 법률에 그 조문을 찾아가보고 그게 맞는 조문이냐, 우리가 그거를 보자는 겁니다.
그래서 특례목록에 있는 법조문을 찾아가는 URL를 만들고 거기서 조문 텍스트를 추출하고요. 그게 과연 우리가 찾는 규정에 맞는지 검사를 하고 이상에 있는 걸 엑셀로 보고를 하는 시스템으로 만들어보려고 합니다.
참고로 우리나라 법률들은 국회나 법제처 같은 데에서 서비스를 하고 있는데 다들 고유의 웹페이지 주소가 있어요.
법률이라는 것도 깃하고 비슷하게 버전이 있는 문서다 보니까 버전관리를 위해서 그런 웹페이지들이 있습니다. 그래서 거기에 있는 URL를 생성을 하는 거죠.
기본세팅에 이런 것들을 썼습니다.
여기서 이런 함수는 그냥는 스테이터스코드가 200 떴다, 이 경우에만 값을 가져오도록 하는 의미인 거고요.
그래서 우선 우리가 별표 목록을 엑셀로 만듭니다. 이거는 제가 사실 생략했는데 아까 보시면 별표에 법률하고 목록이 있다고 했는데 그것도 사실 텍스트예요. 텍스트함수를 읽어서 오는 겁니다.
이게 아까 설명드린 건데요. 이게 도시철도법이라는 법률의 페이지입니다.
재미있는 게 여기서 개발자들을 위해서 국가법령정보센터에서 한글주소시스템을 만들어놨어요.
그래서 우리가 도시철도법 제10조를 찾아가고 싶다고 하면 이렇게 적으면 돼요.
그냥 이렇게 예시처럼 적으면 뜹니다. 다행이죠.
이게 그런데 문제는 그겁니다. 보통은 그렇게 안 쓰는데 법제처 사이트에서 아이프레임이라는 걸 쓰더라고요. 그래서 HTML 코드에 가보면 내용이 안 뜨고 저렇게 내용이 있는 것만 다시 띄웁니다. 그래서 1차 크롤링을 해도 네모박스에 있는 것만 얻어와서 다시 찾아가서 내용을 긁어오는 겁니다.
보면 클래스는 간단해요. 그러면 저기하고 저기 끝에 있는 거 사이에 있는 것을 다 가져오면 우리가 원하는 정보가 다 들어있습니다.
그러니까 여기서 하는 게 바로 그겁니다. 보면 두 번 한다는 거죠. 하나에 대해서 먼저 아까 보였던 첫 번째 화면을 먼저 크롤링을 하고 주소를 얻어서 다시 크롤링하는 겁니다.
그래서 먼저 여기 보시면 URL.law.go.kr를 한 다음에 1차크롤링을 위한 주소를 만들고요.
우리가 원하는 주소를 불러온 다음에 그게 아이프레임에 들어 있기 때문에 이렇게 찾아낸 겁니다.
그래서 스타트하고 앤드가 있는데 이거는 우리가 얻고자 하는 주소가 소스로 시작을 하고 끝은 스타일로 끝난다, 이런 규칙성을 가지고 있기 때문에 그 사이에 있는 텍스트를 빼온다는 크롤링을 하고 있는 거고요.
제가 좀 빠른가요?
진행하겠습니다.
그래서 이제 해당 URL에서 진짜로 우리가 찾아가야 하는 HTML를 추출을 해서 본문을 가져옵니다.
법률 본문을 가져왔는데 키워드를 뭘 검사를 할 것인지가 중요한데 이거는 특례제한법마다 달라요. 먼저 첫 번째 사례는 국유재산특례제한법이 있는데 이거는 나라의 재산을 무료로 쓸 수 있게 해주는 거예요. 얼마나 매력적입니까?
그런데 여기에는 꼭 들어가야 되는 단어들이 국유재산, 국공유, 무상, 감면, 양여가 꼭 들어가도록 되어 있어요. 이것 중에 하나라도 없으면 이상할 가능성이 많다는 거죠.
그런데 여기서는 코드를 오진단하는 거는 괜찮아요. 그런데 빠뜨리는 거는 없어야 돼요. 그러니까 하나라도 들어가 있으면 되는데 좀 보수적으로 짰어요.
그러니까 좀 쓸데없는 것이 많이 잡혀요. 하나라도 놓치지 않기 위해서 이렇게 짠 겁니다. 그래서 이 다섯 가지만 이용해서 우리가 이렇게 키워드를 정해서 여기 보시면 키워드가 리스트로 되어 있습니다. 6개의 리스트로 되어 있고 엘리먼트들을 0에서 5까지 불러오는 거죠.
키워드 0번째 엘리먼트가 텍스트에 있는지 두 번째 엘리먼트가 있는지 이런 것을 한 다음에 그중에 하나라도 텍스트라는 변수 안에, 있으면 그거를 리절트로 뽑아낸다는 거죠.
그런데 이런 경우도 있어요. 이건 부담금 케이스인데 부담금은 검사해야 되는 키워드가 계속 변합니다, 동적으로. 그러니까 부담금에 이름이 다 있잖아요. 개발부담금, 보전부담금, 출연금이라고 할 수도 있고요.
그러면 우리가 이 부담금 별표에서 이 키워드들을 따로 불러와서 키워드를 동적으로 계속 돌려주는 거예요.
제가 그 코드는 조금 생략을 했는데 그래서 그걸 불러와서 이것들을 그 조문에서 검사겁니다.
검사를 하루겁니다.
결과는 이렇습니다. 비정상인 것들이 쭉 뜨거든요.
그런데 굉장히 슬프게도 48건 정도 입법자께서 실수를 하셔서 대법원 소송이 일어날 수도 있는 그런 일을 하는 케이스가 48번이 있다는 것으로 첫 번째 디버깅은 끝났습니다.
설명할 내용이 많으니까 빨리 넘어갈게요.
이건 이제 데이터프레임에 대한 결과를 엑셀 파일로 빼내는 그런 코드입니다.
형별규정전수조사라고 하는 두 번째 디버깅입니다.
이 케이스 혹시 아시는지 모르는데 박나래 씨께서 수제 향초를 만드는 코너가 있었어요. 그걸 사람들한테 100개를 뿌렸거든요. 그런데 환경부에서 행정지도가 온 거예요. 당신 그러다가 감옥갑니다. 다 회수하세요. 큰일났거든요. 왜 뭘 했기에? 그게 무슨 큰 죄기에 징역7년의 위기를 맞았을까?
봤더니 이게 가습기 살균제 사건을 계기로 화학물안전법이라는 법이 생겼습니다. 그 법에 보면 수제향초 같은 거를 만들었을 때 기체가 뭔가 나오는 것은 그 기체가 안전한지 검사를 받으라는 거죠.
그런데 문제는 판매하는 것 외에 사람들한테 무상으로 주는 것까지도 규제에 들어가 있습니다. 약간 납득하기가 힘들죠.
그런데 이 검사를 하려면 한 35만 원쯤 든다고 하더라고요. 좀... 좀 과한 규제가 아닌가 싶기는 한데.
문제의식은 이겁니다. 두 가지가 형법학자들이 주로 이야기를 많이 해요. 과잉범죄화, 그다음에 과잉형벌화. 형벌규정이 너무 많이 증가한다. 왜 저런 취미까지 범죄가 되어야 하느냐.
두 번째는 취미로 했는데 7년 징역을 때린단 말이야? 물론 판사님께서 적게 해주겠죠. 그런데 어쨌든 최고형이 7년형이라는 겁니다. 이게 말이 안 된다는 거죠.
그래서 이 두 가지가 문제라는 지적은 많은데 이게 데이터가 없어요.
한번도 누가 조사를 해본 적이 없다고 하더라고요. 그냥 다들 썰만 풀었어요. 과잉형별화가 문제라는 식으로. (웃음)
죄송합니다. 제가 누구를 말하는 건 아니고...
그래서 분석순서는 이렇습니다. 이것도 또 크롤링이에요. 나라에서 법률 데이터를 텍스트로 충실히 만들어줬기 때문에 최대한 이용해먹으려고 합니다. 그래서 시점법 법률 텍스트데이터를 만들고요.
2016년 5월 기준으로 현행법을 다 찾으시오, 이런 것들을 다 해야 돼요. 그런데 이거는 파이썬하고 관련없어서 넘어갈게요.
두 번째 전처리, 텍스트를 문장별로 분리하고 우리가 검사할 형별조항만을 발라내야겠죠. 이것도 키워드로 골라내는 겁니다.
그다음에 여기서 이제 징역이나 벌금에 해당하는 숫자만 뽑아올 겁니다. 여기서.
네 번째로는 이걸 가지고 요리를 하는 거죠. 숫자가 나왔으면 이제 데이터분석은 쉽잖아요. 숫자로 통계도 내보고 비주얼라이즈도 해보고 그럴 겁니다.
여기는 넘어가겠습니다. 그러니까 크롤링을 국회법을 하면 이렇게 떠요. 1조부터 163조까지 쭉 뜹니다. 그런데 아까 말씀드렸던 그런 전처리를 하게 되면 텍스트가 문장별로 쪼개져요.
예를 들면 원래 크롤링을 했을 때는 166조가 1항하고 2항이 한 줄에 들어가 있었는데 그 사이를 세미콜론으로
나눠놨더라고요. 그냥 스플릿 함수를 하면 보시다시피 166조 1항하고 166조 2항으로 나눠요.
저희가 적어도 형벌 조항을 셀 때 항은 다르게 취급해줘야 될 거 아닙니까?
그래서 저희가 형벌조항을 세기 위해서 한 겁니다.
그런데 국회법에는 형벌조항이 하나밖에 없어요. 전처리를 하면 저렇게 두 가지만 넘는데 뭐냐 하면 국회회의방해죄입니다.
우리 신문기사에 오함마 이런 거 나오잖아요. 오함마 이런 거 들지 마십시오. 해서 나온 규정이죠, 이게. (웃음)
그래서 텍스트는 이렇습니다. 아까 전처리한 텍스트를 가지고 와요.
원래 법률에는 띄어쓰기가 있는데 다 없앴습니다. 왜냐하면 세상에는 띄어쓰기가 틀린 조문들이 많더라고요. (웃음)
진짜 예요. 그래서 띄어쓰기를 다 없애야 돼. 특수문자도.
예를 들어서 같은 가운데 점을 썼다고 생각했는데 유니코드로 보면 달라요. 그래서 다 없애서 줄글로 만든 다음에 키워드를 찾아내는 겁니다.
그래서 여기 보시면 키워드 0번이 텍스트에 있. 0번은 '년 이하의 징역'이죠.
그래서 그 위치를 찾아라. 그래서 그 위치 바로 앞에 있는 것을 불러와서 저 정규표현식에 해당되는 거를 모두 찾아라. 그래서 저 정규표현식은 숫자를 가져오라는 이야기입니다.
숫자를 가져와라. 그래서 파인드올 했으니까 여러 개가 있겠죠. 그래서 0번째 엘리먼트만 꺼내라, 해서 플로트로 저장을 하는 겁니다. 이걸 조문마다 반복을 시키는 겁니다.
키워드는 이렇습니다. 잡다한 게 엄청 많은데 다행히 규칙적입니다. 머신러닝도 필요없고 키워드매칭만 하면 돼요. 다행입니다. 난이도가 쉬워서.
그런데 문제는 겹치는 키워드가 있어요. 여기 보시면 예를 들어서 천만 원 이하의 벌금 하고 밑에만 원 이하의 벌금은 사실은 똑같죠. 그렇죠?
그래서 천만 원 이하의 벌금을 찾은 다음에 이프를 한 다음에 그래서만 원 이하의 벌금을 또 검사해야 합니다. 안 그러면 두 번 하게 되니까.
여기서 띄어쓰기 문제가 있어서, 그런데 저 두 개가 의미가 다르더라고요.
유기징역이라고 하면 무기징역이 빠져있는 거예요. 그래서 나중에 추가했고요.
세상에, 과거법률을 띄우면 법률이 아니라 벌김이라고 나옵니다. (웃음)
환자로 된 법을 자동으로 전환을 해서 보여주는 거거든요. 저는 당연히 한글을 긁어왔죠. 믿었죠. 믿었는데 결과가 이상한 거예요. 금고도 김고로 나옵니다. (웃음)
그래서... 결과는 이렇습니다. 좀 작아서 안 보일 수도 있는데, 저기 뭐 년 자 들어가 있는 거 보이시죠? 국가보안법은 좀 세네요. 사형, 무기징역 이런 거 적혀있는 거 보이시죠.
그래서 이어 페이 리절트라는 프로그램을 만든 겁니다.
저는 빅리스트를 만든 다음에 거기에 엘리먼트를 다 집어넣는 겁니다.
그러면 0번부터 8번까지 저렇게 인덱스로 불러올 수가 있거든요. 그러면 포문으로 쉽게 반복해서 1985년부터 2016년까지를 분석을 할 수가 있어요.
그런데 보시면 이렇습니다. 그래서 9개 년도에 대해서 이렇게 해서 돌리는 겁니다.
그런데 밑에 데이터프레임 이름이 기니까 A라는 걸 임의의 변수로 넣어주고요. 그 길이만큼 반복을 시켜주는 거예요. 모든 줄에 대해서 이 연산을 하라는 거죠. A년 이하의 징역은 A, A년 이상의 징역은 2A의 사형, 무기징역은 25, 벌금천만 원은 1이런 식으로 계산하라는 코드입니다. 단순한 계산입니다.
조금 속도를 낼게요.
그래서 과잉범죄화의 추세가 보이는데요. 이게 결과입니다.
우리는 지금 6,000개 이상의 징역벌금형과 같이 살아가고 있다는 결과가 나온 거죠.
2016년까지의 데이터를 검사한 건데 위에 보이는 진한 초록색에 자유형의 수, 자유형은 징역, 금고. 김고가 아닙니다. 사형, 이런 걸 말하는 거고. 벌금형은 돈내는 겁니다. 과태료하고는 구분하셔야 돼요. 순수하게 벌금을 내면 이 사람의 전과로 잡히는 형벌로서의 벌금만 잡은 겁니다.
그래서 둘 다 일정하게 연평균 2.8%, 2.3%씩 늘어나는데요.
다음은 이겁니다. 선행연구에 따르면 우리나라 법률이 중벌주의가 너무 강해서 뭔 일이 있을 때마다 형량을 올린다는 가설로 연구를 아셨어요.
샘플조사에 따르면 평균형량이 올라간대요. 그런데 제가 해보니까 반대로 나왔거든요.
아, 이거 논문으로 쓸 수 있겠다는 생각이 들더라고요. 왜냐하면 선행연구랑 결과가 다르잖아요.
그런데 문제는 왜 그런지를 밝혀내야 되는 거예요. 지금 보시면 여기 진한 초록색, 자유형이 평균 7.25년에서 평균 6.26년으로 내려가죠. 왜 그럴까요? 이렇습니다. 제가 검사해보니까.
이게 X축이 형벌지수입니다. 자유형 지수인데 0.5년부터 25년까지 지수인데 제일 아래 1985년의 분포도하고요. 2016년까지 그러니까 단 한번도 어떠한 형기에서도 조문이 줄어든 적이 없어요. 우리나라 형벌은 사형이든 무기징역이든 모든 형벌이 계속 늘어나기만 했습니다. 그러니까 우리가 이게 평균이 줄어들고 있지만 사형이나 무기징역이나 아주 높은 형기가 줄어들지는 않았어요.
그러니까 우리는 강벌화 현상도 있고 그다음에 과잉범죄화 현상도 같이 나타나고 있다고 결론을 내릴 수 있는 거죠.
그런데 평균은 왜 내려갔느냐. 보시면 이 곡선하고 곡선 사이의 거리가 속도인 겁니다. 늘어난 속도가 빠른 겁니다. 그래서 당연히 평균이 줄어듭니다.
절대로 감형을 한번도 해준 적이 없는데 그러니까 형벌은 줄어드는 결과가 나온 거죠.
세 번째 입니다. 법률 네트워크 분석인데요. 작년에 파이콘에 이어서 하는 거여서 조금...
작년 파이콘을 요약해서 말씀드리면 제가 작년에 30년간 우리나라 법률간 인용 관계 데이터를 구축을 했어요. 그러니까 법률끼리 서로 인용을 하고 받는 관계를 분석을 한 겁니다.
뭐가 제일 많이 인용됩니까? 국토법이었어요.
그런 황당한 결과가 나와요. 그러니까 옛날에는 안 그랬는데 2016년이 되니까 갑자기 국토법이 많이 인용되기 시작하는 거예요. 도대체 누가 뭐 때문에 인용을 할까. 결론이 토지개발을 위한 그러니까 각종 개발사업을 위한 법률들이 특례를 개정하기 위해서 국토법을 많이 인용을 하더라. 법률적으로 보면 토건이 정말 중요하가구나, 라는 걸 알 수 있었고요.
그런데 문제는 제가 작년에 네트워크를 못 그렸어요. 그래서 이번에 그려서 왔고요.
두 번째는 특별법하고 일반법이 네트워크에 어떤 영향을 미치는지 분리를 했어요.
이게 네트워크 그림입니다.
2016년인데요. 아이고. 지금 발표를 영어로 한 거라서 그대로 영어로 가지고 왔는데 저기 가운데 노른자 핵처럼 보이는 게 바로 토건 클러스터입니다.
제가 말씀드린 국토법도 저기 들어가 있고요. 각종 개발에 관한 법률도 여기 다 들어가 있습니다. 이 그래프는 사실 서로 많이 인용을 주고받는 것들이 가운데에 오게 설계가 되어 있어요. 제일 정가운데 노란색이 조밀하게 박혀 있죠.
우리나라의 가장 핵이 되고 중요한 법률은 토건법률들입니다.
법률이 이래서는 안 되겠죠, 사실은. 원래 이러라고 있는 게 아닌데. 민, 형, 상법은 저기 주변부에 찌그러져있는 상태가 되어버렸습니다.
이 색깔이 커뮤니티라는 거거든요. 그걸 보여드릴게요. 그래서 루베인이라는 커뮤니티 디텍션이 있어요. 누가 만들어놓은 라이브러리를 제가 갖다 썼습니다.
그래서 불러와요. 그래서 빈 리스트를 만든 다음에 거기에 다 넣는 거죠.
저기 엣지 리스트는 판다스 데이터프레임이 들어가고 하는 겁니다.
데이터를 읽어와서요. 2016년 그래프만 이렇게 들어오는 거죠.
그런데 커뮤니티 디텍션은 아직은 현재로서는 문제를 아무도 못 풀었는데 방향성이 있는 건 아직 못하더라고요.
그래서 방향성이 없게 만들어줍니다.
그래서 일단 그래프 투 언디렉티드라고 하는 명령어를 씁니다.
그래서 PR이라는 변수에 방향성을 없앤, 그러니까 A법에서 B법을 인용하는 거하고 B에서 A를 인용하는 거를 똑같이 본다는 거죠.
그렇게 해준 다음에 그거를 PR변수에 집어넣는 겁니다.
그런데 그림을 그릴 때 한 가지 조심해야 되는 게 네트워크가 그림을 그려보시면 알겠지만 외딴 섬같은 노드들이 있어요.
그러니까 그래프가 다 연결이 안 되어 있는 것들을 포함해서 그리면 그림이 좀 이상하게 나오거든요.
그래서 그런 외딴 섬들을 제거해야 예쁘게 나옵니다. 그래서 이걸 합니다.
자이언트 커넥티드 컴포넌트를 구하는 건데요.
그러니까 서로 하나라도 연결이 되어 있는 것들만 남기고 나머지는 빼버리는 거죠.
이걸 어떻게 하느냐.
그런데 네트워크엑스에 명령어가 있어요.
그래서 저 PR이라는 그래프를 저기에 집어넣으면 순서대로 쭉 뜹니다. 제일 큰 것부터 지금.
그러니까 제일 크게 연결되어있는 서브 그래프가 뜨고 작게 연결되어있는 거. 그래프의 부분집합들이 큰 순서로 나와요.
그러면 0번째 엘리먼트를 꺼내면 제일 큰 서브그래프가 나오겠죠.
나머지는 우리가 그릴 필요가 없는 겁니다.
이거는 쉽습니다. 그냥 커뮤니티라고 하는 그런 라이브러리에서 루벤 커뮤니티를 불러와요. 그래서 분류를 해주세요.라고 이야기를 하는 겁니다.
그래서 파티션 아이템이라고 하는 개체를 만들어서 좀 복잡하네요.
이걸 어떻게 설명하지?
아무튼 이대로 돌리시면 1번부터 1500개, 지금 2016년 기준으로 법률이 1500개인데 이게 0부터 8까지의 번호를 달고 나옵니다. 그게 커뮤니티 몇에 속해있냐는 거죠.
그래서 이거를 이제 비주얼라이제이션을 해주는 건 일반적인 라이브러리를 쓰시면 됩피규어 크기를 정해주고 엑시스는 꺼버리시고 스케일도 정해주고 노드의 크기는 어떻고, 노드에 알파값을 줬어요. 투명하게 해야 겹쳐서 보이거든요. 컬러도 정해주고 사이즈도 20 정도로 정해줘서 하면 아까 본 그림이 나옵니다.
두 번째 인데요. 이건 좀 코드를 다 끌고 왔네요. 그러니까 사실은 네트워크가 왜 이렇게 됐냐는 거죠.
아까 보셨던 왜 이런 형태가 됐느냐. 원인이 뭐냐. 가설은 특별법 때문에 그렇다는 건데 그거를 검증하기 위한 코드인데요.
A에서 B로 인용하는 관계를 엣지리스트, 그러니까 이런 겁니다. 네트워크를 표현하는 방법인데 인용하는 법률을 왼쪽에 쓰고 인용되는 법률을 오른쪽에 쓰는 겁니다. 그래서 A에서 B로 인용한다고 하면 우리가 AB, AB 쭉 쓰는 거거든요.
그러면 그 엣지리스트에서 앞쪽에 있는 거, 일반법이냐 특별법이냐에 따라서 나누라는 겁
이거를 나누는 건 사실 간단해요. 그냥 특별법과 관련된 키워드가 있는지 법률명을 검사하면 됩니다.
판다스에서 그렇게 해서 데이터프레임을 두 개로 나눈 겁니다.
보시면 판다스데이터프레임에서 아까 보셨던 키워드 검사처럼 이프에서 테스트 인 제로, 이게 키워드:
입니다.
그래서 저런 키워드 중에 하나라도 들어가 있으면 특별법이라고 해서 맞으면 특별법 데이터프레임에 넣어주고요. 아니면 일반법 데이터프레임에 넣어줘서 결과를 분리합니다. 어떻게 될까요?
네트워크가 두 개입니다. 지금 복잡한데요. 왼쪽 y축은 11대 국회부터 19대 국회까지를 말하는 거고요. 그다음에 1등부터 10등까지 입니다. 제일 많이 인용되는 법률을 연도마다 만든 건데요.
특별법이 인용하는 네트워크에 따르면 시뻘겋습니다. 이게 도시계획법, 국토계획법이거든요.
항상 그걸 제일 많이 인용해왔어요. 과거부터 지금까지.
그리고 건축법, 국유재산법, 토지수용법. 이런 것들은 시뻘건 것들. 토건에 관련된 것입니다.
그런데 문제는 이게 도수가 11대 국회에서 19대 국회에서 805개로 링크수가 어마어마하게 일어나요.
그러니까 이것 때문에 앞에서 봤던 그런 노른자가 떠있는 토건 클러스터가 생긴 법률 네트워크가 나오게 된 거죠.
반면에 청정한 세계가 오른쪽에 있습니다. 초록색이죠.
이거는 우리 법률 교과서에 나오는 그런 세계입니다. 상법, 민법, 형법이 제일 많이 인용되죠, 언제나.
특별법이 없었다면 우리가 이상적이라고 생각하는 그런 법률세계가 됐을 건데 특별법 때문에 우리 법률체계가 이렇게 바뀌었습니다. 이게 결론인 거죠.
그래서 마무리 말씀을 드릴 건데요.
법률의 복잡성은 모든 세계가 다 늘어나고 있습니다. 현대 복지국가, 민주주의 국가이면 다...
왜냐하면 법률은 한번 만들면 없어지지가 않아요. 법률에는 다 주인과 고객들이 있거든요. 원하는 사람들이 있기 때문에 없애는 건 굉장히 어렵습니다.
그래서 이런 늘어나는 법률의 복잡성에 대해서 자동화된 도구가 필요하다고 이제 룰, 카츠, 보마리토라는 분이 말씀하셨어요. 이분들이 법대 교수님인데 사이언스지에 개제를 하셨어요. 저 논문을.
이런 세계가 되고 있는데 우리나라는 약간 아직은 부족한 것 같아요.
그래서 이거는 사실 라이언일병구하기의 제목을 패러디해본 건데요. 법률 프로젝트 구하기. 어떻게 법률을 구해낼 수 있을까.
사실 20년 전에 답이 다 나와있었습니다. 파이썬을 만든 귀도께서 미국 방위사업체는 돈을 따기 위해서 기획서를 썼어요. 여기서 상상하던 세계가 지금 구헌이 되어 있죠. 파이콘도 하고. 누구든 파이썬을 쉽게 쓸 수 있잖아요.
그런데 문제는 법률세계는 아직 그렇지 않은 것 같아요.
그래서 확장성 있고 진입장벽이 낮고 빠르고 좋은 파이썬을 써보자는 게 저의 제안입니다.
그리고 사실 법률 자체가 텍스트인데 왜 파이썬을 안 씁니까? 텍스트를 분석하기 위해서 파이썬만큼 좋은 게 있을까요? 저는 그렇게 생각하거든요.
이게 20년 전에 귀도 반 로썸 님께서 물은 질문입니다. 거의 실현이 된 것 같아요. 그런데 20년 뒤에 다음 목표는 이거다. 그렇습니다.
참고문헌이고요. 감사합니다.
그리고 무엇보다 제가 작년에 파이썬을 처음 배웠는데 알파로우라는 스터디에서 배웠거든요. 알파로우, 감사합니다.
감사합니다.
(박수)
-(사회자) 발표를 해주신 김재윤 님 감사합니다. 지금부터 질의응답 시간을 가지겠습니다.
궁금한 점이 있는 분은 가운데 마련된 스탠딩 마이크 앞으로 나오셔서 질문해주시면 됩니다. 원활한 질의응답을 위해서 질문은 한두 개 정도로 짧게 부탁드립니다. 그래야 발표자 님께서도 질문 내용을 쉽게 기억하고 답변할 수 있으니 양해해주시기 바랍니다.
(영어 통역 중)
-(질문) 아까 첫 번째 프로젝트에서요. 법률이 일치하지 않는 걸 보여주셨잖아요. 현업에서는 그러면 어떻게 하고 있는지 사실 그 정부기관이나 국회같은 데에서는 되게 보수적이어서 프로젝트를 쓰는 것에 대해서 긍정적으로 생각하는지도 궁금하고 실제적으로 불일치했을 때 아까 토지 관련해서 그런 미스매칭 됐을 때는 어떻게 그렇게 조사를 하고 하는지 궁금합니다.
-(발표자) 이런 방법은 안 알려져 있습니다. 제가 올해 처음 시도해봤고요. 여태까지 그냥 방치를 해왔죠.
그런데 특례제한법을 관리하는 정부부처에서 정비해야겠다는 의지가 있으면 연구용역을 줍니다. 그걸 법대 교수님들한테 주면 그걸 조교들을 이용해서 다 찾았죠. 그런 식으로 여태까지는 이루어져왔습니다.
-(질문) 그러면 현실적으로는 방치되어 있는 거라고 보는...
-(발표자) 방치라고 하면 좀 아니고요. 어떻게든 잡아내려고는 하는데 적절한 도구를 못 찾아서 헤매고 있는 것 같아요.
-(질문) 과잉범죄화나 형벌화 이야기가 재미있었는데 그런 게 있는 사법연감이나 그런 통계에서의 추세하고 비교했을 때 어떤지 혹시 그런 걸 검토를 해보셨는지.
-(발표자) 이거 다음에 논문 쓸 때 한번 해볼게요. (웃음)
사실은 그 연결... 그러니까 저는 법률규정 조사로 끝났는데 그게 실제 법률연감에 나오는 거랑 어떻게 관련이 있느냐.
이런 것들을 김일중 교수님이나 이런 분들이 많이 하셨거든요. 거기로 연결하는 게 다음 과제예요.
-(질문) 그리고 두 가지가 궁금한데 사실 작년 발표에서도 제가 굉장히 깊은 인상을 받았는데 올해 더 발전된 걸 내놓으신 것 같아서 재미있었고 다음에는 어떤 방향으로 연구를 하시려는지 그거 하나랑 또 하나는 네트워크로 분석을 해보셨으면 이 법률 네트워크 데이터가 아직은 정부가 그렇게 깔끔하게 공개하는 건 아니잖아요. 이렇게 했으면 좋을 것 같다는 이상적인 데이터상 같은 게 있으신지.
-(발표자) 사실은 그것보다도 법률에 대한 오픈API가 되어 있는데 그 항목으로 법률간 인용을 추가해주면 좋겠어요. 그러면 훨씬 쉽게 썼을 것 같습니다.
-(질문) 강의 잘 들었습니다. 그런데 이게 프로그램이 어찌됐든 텍스트를 분석을 하는 부분이잖아요. 그러면 굳이 파이썬이 아니라고 하더라도 충분히 이전부터 그런 시도가 많이 있었을 것 같은데.
그런데 이게 오픈소스 프로젝트라든지 이런 걸로도 좀 해볼 수 있을 것 같은데 그런 움직임은 없나요?
-(발표자) 제가 해.. 해.. 해볼... 일단은 논문 쓰느라 바빠서 못했는데 생각해보겠습니다.
-(질문) 감사합니다.
-(질문) 안녕하십니까? 강의 잘 들었습니다. 제가 여기저기 돌아다니면서 크롤링을 조금 해보고 있는데 의뢰가 들어왔던 게 있어서.
의뢰라기보다는 부탁 식으로 들어온 게 있어서 대법원 사이트를 크롤링을 시도를 해보려고 지금 하는 중간에 아까 여기 크롤링이 참 쓰기에는 편리한데 이게 법쪽으로 크롤링 행위 자체가 문제가 될 수도 있지 않나 이런 것 때문에 제가 지금...
이게 문의를 해봐야겠다는 생각을 하고 있는데 이런 강의가 있어서 들어오게 됐거든요.
크롤링에 대한 법적인 내용들 같은 거를 확인할 수 있는 그런 방법이나 할 수 있는 곳 이런 거를...
-(발표자) 그게 아직 미개척 영역이에요. 그래서 저도 고민을 많이 했는데 이미 너무 많이 시작해서 저는 그러면 현행범이 될 것 같고요. (웃음)
제가 저작권법을 한번 봤는데 공적으로 제공되는 데이터들은 저작권이 없거든요. 법률은 당연히 저작권이 없는데 그러면 어떻게 이용을 해도 되지 않냐 싶은 생각이 있기는 했어요.
과연 그거를 어기는 게 불법인가에 대해서 아직 답이 없는 것 같더라고요. 판례에 따르면 썸네일 같은 경우에는 저작권이 있다고, 저는 찬성하지 않지만 대법원이 그렇게 판시를 했거든요.
그런데 또 이게 정당한 권환을 침해하는 정보통신망법에 따른 해킹규정에도 걸릴 수 있지 않나 생각했는데 저는 그렇게 생각하지 않거든요. 그렇게 치면 수많은 현업자들이 다 잡혀가야 될 것 같아서.
-(질문) 저도 하면서 봤는데 대법원 사이트에 보면 공지가 되어 있더라고요. 본 게시물은 대법원 홈페이지의 동의 없이 링크하거나... 이렇게 나와 있어서 제가 여기 보면 여기 그게 있어요. 자동접속방지 문자로 자동접속을 1차적으로 막기 위한 조치가 있는데 그거를 뚫고 크롤링을 할 수 있거든요.
저는 보다 보니까 이런 게 나와있는데 이 행위를 하는 것에 대해서 어디까지가 합법적으로 가능하고 어느 선까지가 이게 법의 제한을 받는지에 대한 것을 어디서 알 수 있을지가 궁금하더라고요.
-(발표자) 한번 연구를 해볼게요. 죄송합니다.
-(질문) 발표 잘 들었고요. 커뮤니티 디텍션 관련 질문이 있는데 법률 네트워크는 방향성 특성이 굉장히 중요한 역할을 한다고 추측이 되는데 변경한 다음에 그거를 해석을 하는 데 무리가 없는지 궁금하고 그다음에 그걸 안 된다고 말씀하신 이유가 있는지 궁금합니다.
-(발표자) 제가 지식이 짧아서 언디렉트가 안 되는 줄 알았어요. 그런데 사실은 커뮤니티디텍션도 모듈러리티를 계산하는 과정인 거잖아요. 그래서 그거를 얼마나 빠르게 컴퓨팅을 해낼 건가 하는 건데 다이렉트 네트워크에 대한 모듈러리티가 정의가 되어 있나요?
-(질문) 그러니까 제가 알기로는 논문도 꽤 많이 나와 있고.
-(발표자) 할 수 있을 것 같기는 한데 수학적으로는 그게 정립되어 있는 모듈러리티에 정의가 안 되어 있다고 알고 있어서. 그런데 있으면 알려주시면 제가 연구발전에 크게 도움이 될 것 같습니다.
감사합니다.
-(질문) 혹시 이쪽 연구쪽 말고 기업에서 지금 공개되는 법률데이터를 이용해서 활용할 수 있는 아이디어에 대해서 연계해보시면서 생각나셨던 아이디어들이 좀 있을까요?
-(발표자) 제가 신분이 공무원이라서 영리행위를 하지 못해서 막혀버리더라고요.
-(질문) 예를 들면 저희 회사에서 논문적인 부분이나 이런 부분 때문에 법률을 봐야 할 때가 많고 판례를 봐서 내부적으로 인사결정을 내려야 하는 상황도 종종 생기거든요.
그런데 이게 매번 서칭을 했었는데 이런 텍스트 데이터를 이용해서 혹시 기업 내에서 의사결정을 내릴 수 있는 아이디어들이 있었나 해서요.
-(발표자) 그게 막연하네요. 어떻게 해야 될지. 글쎄요. 그런데 지금 우리나라 판례 같은 게 학습을 돌릴 만큼 그렇게 많지도 않고요. 7만 건의 대법원 데이터만 나와있는 건데 거기에 또 사심도 많이 생략이 되어 있고.
미국이나 이런 서비스를 하기에는 아직 부족한 환경이 아닌가 하는 생각이 있습니다. 브레이크쓰루가 있어야 할 것 같은데요. 그렇습니다. 환경이 안 좋습니다.
-(사회자) 발표시간이 종료되어 세션을 마무리하도록 하겠습니다. 지금까지 발표해주신 발표자님께 큰 박수 부탁드리고요.
다음 세션 시간인 55분까지 17분 정도 쉬는 시간을 가지도록 하겠습니다. 중앙홀에 마련된 스폰서부스에서 다양한 프로그램을 즐겨주시면 감사하겠습니다.