1
00:00:00,000 --> 00:00:04,670
안녕하세요 gmpc 파이썬을 활용한 마이클 서비스

2
00:00:04,670 --> 00:00:09,050
개발 이라는 주제로 발표를 맡게 된 송지영 입니다

3
00:00:09,050 --> 00:00:10,070
식사 맛있게 하셨나요

4
00:00:10,070 --> 00:00:15,340
점심 저는 여기서 논다고 생각하니까

5
00:00:15,340 --> 00:00:18,560
긴장에 내서 밥을 안 먹고 물만 드렸더니

6
00:00:18,560 --> 00:00:21,600
지금 막 물 배차 서울역체 할 것 같아요

7
00:00:21,600 --> 00:00:27,840
아무튼 좀 재밌는 진행될 수 있도록 노력은 하겠음

8
00:00:27,840 --> 00:00:29,880
오늘 컨텐츠는 이제 이렇게 진행이 될 예정이에요

9
00:00:29,880 --> 00:00:33,630
아무래도 PC 라고 하면은 msa 마이크로서비스

10
00:00:33,630 --> 00:00:35,080
마이크로서비스아키텍처 랑

11
00:00:35,080 --> 00:00:36,700
떼려야 뗄 수가 없는 관계 거든요

12
00:00:36,700 --> 00:00:40,260
그래서 MS 일을 하면 할수록 소개를 들리고

13
00:00:40,260 --> 00:00:43,990
제가 PC 란 뭔가 한번 살펴 본 다음에 어

14
00:00:43,990 --> 00:00:48,020
그리고 유지할 PC 가 사실은 위주의 레퍼런스가 많고

15
00:00:48,020 --> 00:00:50,240
또 고랭 위주의 좀 개발 일이 많아요

16
00:00:50,240 --> 00:00:52,050
근데 저는 잡니다

17
00:00:52,050 --> 00:00:55,210
그래서 제가 grp 씨를 파이썬에서 쓸 때

18
00:00:55,210 --> 00:01:00,240
좀 어떤 점들을 또 어떻게 사용을 했는지를 살짝 소개를 드리고

19
00:01:00,240 --> 00:01:03,800
PC 가 또 사용을 하다 보니깐 사실은 실제로 적용하는데

20
00:01:03,800 --> 00:01:05,890
있어서 쉽지 않을 분들이 있더라고요

21
00:01:05,890 --> 00:01:09,550
그래서 제가 그 그런 것들을 좀 나눠 드리고

22
00:01:09,550 --> 00:01:11,190
그러면서 제가 제가 PC 를

23
00:01:11,190 --> 00:01:16,350
저희 내부 개발팀에 적용을 하면서 프레임워크 직접 만들었거든요

24
00:01:16,350 --> 00:01:18,420
그래서 고를 왜 굳이 만들었는지

25
00:01:18,420 --> 00:01:21,340
에 대한 부분도 단짝 소개드리는 시간 전까지 가

26
00:01:21,340 --> 00:01:25,220
이제 5번 시간에 맞춰야 될 거 같아

27
00:01:25,220 --> 00:01:27,190
저를 때 간단하게 소개를 드리면요

28
00:01:27,190 --> 00:01:30,120
저는 사실 클라우드 쪽

29
00:01:30,120 --> 00:01:34,920
클라우드엔지니어 쪽 위주로 어제 커리어를 시작했어요 KT

30
00:01:34,920 --> 00:01:39,980
나 SK 쪽 다음에 에서 계속 클라우드 관련된 업무를 하다가

31
00:01:39,980 --> 00:01:41,120
이제 파이썬을 만나고

32
00:01:41,120 --> 00:01:42,780
또 파이썬 그 클라우드가

33
00:01:42,780 --> 00:01:45,230
사실은 개발이라고 떼려야 뗄 수가 없거든요

34
00:01:45,230 --> 00:01:47,730
그래서 클라우드 플랫폼 쪽을 개발을 위주로 하다

35
00:01:47,730 --> 00:01:50,540
보니깐 지금은 이제 현재 소속되어 있는 백화점

36
00:01:50,540 --> 00:01:53,800
클라우드란 회사에서 클라우드 플랫폼 적을 개발

37
00:01:53,800 --> 00:01:55,930
하고 있는 거 담당을 하고 있습니다

38
00:01:55,930 --> 00:02:00,670
주로 밴드를 진행을 하고 있고요

39
00:02:00,670 --> 00:02:01,890
먼저 소개 학교 앞에서

40
00:02:01,890 --> 00:02:03,330
제가 지금 소속되어 있는 메가존

41
00:02:03,330 --> 00:02:06,780
클라우드 라는 것을 살짝 소개해 드릴게요

42
00:02:06,780 --> 00:02:11,820
혹시 메가존클라우드 나 회사 들어오신 분 계신가요 감사합니다

43
00:02:11,820 --> 00:02:15,300
저도 사실 내가 클라우드에 소속된

44
00:02:15,300 --> 00:02:16,180
지는 몇 달 안 됐어요

45
00:02:16,180 --> 00:02:18,700
근데 아무튼 여러 가지 일들이 있어서

46
00:02:18,700 --> 00:02:20,480
이거를 압류를 하게 됐고

47
00:02:20,480 --> 00:02:24,080
메가존클라우드 살짝 소개를 드리면서 있는 국내 최대의 클라우드

48
00:02:24,080 --> 00:02:25,880
msp 라는 사업자입니다

49
00:02:25,880 --> 00:02:29,190
msp 라고 하면은 매니지먼트 매니지드서비스

50
00:02:29,190 --> 00:02:30,780
프로바이더의 먹자고요

51
00:02:30,780 --> 00:02:33,940
클라우드로 이제 많은 기업들이 옮겨가고 있죠

52
00:02:33,940 --> 00:02:35,360
내 클라우드 로 옮겨 갈 때

53
00:02:35,360 --> 00:02:37,350
어떠한 방식으로 옮길 것인가

54
00:02:37,350 --> 00:02:38,780
또는 설계 구조라든가 이런

55
00:02:38,780 --> 00:02:41,180
것들을 컨설팅을 담당을 하고

56
00:02:41,180 --> 00:02:44,220
그다음에 실제로 구축을 할 사야 돼

57
00:02:44,220 --> 00:02:47,710
필요하신분들에게 는 구축도 직접 담당 해 드리고요

58
00:02:47,710 --> 00:02:50,140
마크 고 플러스 우리는 운영까지 간다

59
00:02:50,140 --> 00:02:51,900
해 달라고 운영까지 해드립니다

60
00:02:51,900 --> 00:02:53,230
클라우드 관련된 거의

61
00:02:53,230 --> 00:02:58,150
모든 사업을 종단에서 맡고 있는 회사입니다

62
00:02:58,150 --> 00:03:00,570
처음 들어올 수도 있는데

63
00:03:00,570 --> 00:03:02,990
사실은 내가 좀 클라우드라는 회사에

64
00:03:02,990 --> 00:03:04,550
경우는 거의 아시아에서

65
00:03:04,550 --> 00:03:07,810
가장 큰 규모를 자랑하고 있어요

66
00:03:07,810 --> 00:03:08,610
잘 한번 하지요

67
00:03:08,610 --> 00:03:12,210
그래서 아시아에서 가장 강력한 아마존

68
00:03:12,210 --> 00:03:13,640
파트너사로 유명하고요

69
00:03:13,640 --> 00:03:15,840
고객사는 무리한 거 2400개 드립니다

70
00:03:15,840 --> 00:03:20,200
엄청나 그래서 이러한 성장성을 바탕으로 콜라비로

71
00:03:20,200 --> 00:03:24,110
국내투자 사회에서 최대한 많은 투자를 받고 있고요

72
00:03:24,110 --> 00:03:26,840
네 이제 여기서부터 이제 고민이 시작됩니다

73
00:03:26,840 --> 00:03:30,030
엄청나게 많은 고객사들을 진짜 클라우드로 옮기는데

74
00:03:30,030 --> 00:03:32,960
있어서 많은 도움을 드리고 있는 이 회사가

75
00:03:32,960 --> 00:03:34,250
클라우드를 이용하고 있는

76
00:03:34,250 --> 00:03:36,110
수많은 고객들에게 정도 같이 있는

77
00:03:36,110 --> 00:03:37,590
뭔가를 전달해 줄 수 없을까

78
00:03:37,590 --> 00:03:39,770
나는 이제 고민해서 시작을 한 거예요

79
00:03:39,770 --> 00:03:44,220
그래서 뭔가 단순히 클라우드를 제공하고

80
00:03:44,220 --> 00:03:46,880
구축하는 데 있어서 도움되는 것 뿐만 아니라 좀 더 거기다

81
00:03:46,880 --> 00:03:48,860
플랫폼 같은 것들을 얹어서

82
00:03:48,860 --> 00:03:51,530
뭔가 새로운 가치들을 더 추가해 드리기로 했습니다

83
00:03:51,530 --> 00:03:53,490
그래서 저희는 이제

84
00:03:53,490 --> 00:03:56,860
내부적으로는 메가존클라우드 쪽에서는 개발

85
00:03:56,860 --> 00:03:58,460
개발 주고 받고 있고요

86
00:03:58,460 --> 00:04:00,900
새로운 클라우드 플랫폼 들을 개발을 하려고

87
00:04:00,900 --> 00:04:02,830
지금 여러 가지 시도를 하고 있습니다

88
00:04:02,830 --> 00:04:04,890
그래서 다양한 서비스들을 만들고 있는데

89
00:04:04,890 --> 00:04:06,860
이런 것들을 좀 안정적이면서도

90
00:04:06,860 --> 00:04:09,810
확장 가능한 플랫폼 형태로 만지고 싶다

91
00:04:09,810 --> 00:04:10,920
라는 생각이 들었어요

92
00:04:10,920 --> 00:04:15,640
그래 여러 가지를 고민하던 그 되게

93
00:04:15,640 --> 00:04:16,800
사연은 고민을 했었는데

94
00:04:16,800 --> 00:04:19,430
그 중에서도 이제 오늘 주제로 잡은 것들인데

95
00:04:19,430 --> 00:04:21,950
엠에스엔 비씨 로 하는 부분입니다

96
00:04:21,950 --> 00:04:24,020
두 가지 키워드에 대해서

97
00:04:24,020 --> 00:04:28,280
한번 얘기를 나눠 보는 시간을 갖도록 하겠습니다

98
00:04:28,280 --> 00:04:30,590
먼저 마이크로서비스아키텍처 에 대해서는

99
00:04:30,590 --> 00:04:32,790
이미 많은 분들이 마마 들어보셨을거예요

100
00:04:32,790 --> 00:04:35,340
저기서 mbc 는 메가존클라우드 약자입니다

101
00:04:35,340 --> 00:04:36,250
여보가 있는 게 아니에요

102
00:04:36,250 --> 00:04:39,810
내가 좀 새로운 클라우드 플랫폼 으로 제공

103
00:04:39,810 --> 00:04:42,460
대리 서비스들이 사실은 굉장히 많아

104
00:04:42,460 --> 00:04:45,150
클라우드 서비스를 어떻게 하면 관리를 잘 할 수 있고

105
00:04:45,150 --> 00:04:48,390
어떻게 보면 거기 분들이 한 눈에 잘 볼 수 있을까

106
00:04:48,390 --> 00:04:49,910
또 어떻게 하면 잘 관리할 수 있을까에

107
00:04:49,910 --> 00:04:52,200
대한 굉장히 많은 다양한 고민을 하고

108
00:04:52,200 --> 00:04:54,760
또 서비스를 하나씩 개발을 하고

109
00:04:54,760 --> 00:04:58,020
이런 것들이 어떻게 보면 밀 결합된 형태가 아니라

110
00:04:58,020 --> 00:05:00,980
하나의 마이크로서비스 형태로 구현이 되기를

111
00:05:00,980 --> 00:05:03,120
저희는 설계를 잡았습니다

112
00:05:03,120 --> 00:05:04,480
그렇게 좀 해 놔야지

113
00:05:04,480 --> 00:05:09,180
새로운 앞으로도 클라우드 서비스 아마존이나 뭘 하던가

114
00:05:09,180 --> 00:05:10,050
구글이랑 이런 데서

115
00:05:10,050 --> 00:05:13,430
저 주소를 하고 있 서비스를 앞으로 어떻게 더 발전된 있으면

116
00:05:13,430 --> 00:05:14,680
저희도 예측할 수가 없어요

117
00:05:14,680 --> 00:05:16,630
그러다 보니까 새로운 필터들이 나올 때마다

118
00:05:16,630 --> 00:05:18,200
저희들도 그것들에 맞춰서

119
00:05:18,200 --> 00:05:22,190
좀 더 좀 편하게 사용할 수 있는 것들을 고민하려면

120
00:05:22,190 --> 00:05:24,340
새로운 처리한 안 되는데

121
00:05:24,340 --> 00:05:26,750
그런 것들이 좀 너무 밀결합 형태보다는 약간 느슨하게

122
00:05:26,750 --> 00:05:29,520
이런 것들이 형태로 좀 연결되어 있어야지

123
00:05:29,520 --> 00:05:31,690
많이 저희들도 그게 맞는데

124
00:05:31,690 --> 00:05:35,260
형들하고 민첩하게 개발 대로 발견할 수 있다는 판단에

125
00:05:35,260 --> 00:05:37,860
마이크로서비스 형태의 그럼

126
00:05:37,860 --> 00:05:40,450
클라우드 플랫폼 개발 할 수밖에 없겠더라

127
00:05:40,450 --> 00:05:43,390
그런 주제로 이제 좀 생각해 보면

128
00:05:43,390 --> 00:05:46,780
엠에스엠이란 뭘까를 좀 생각을 해 보다가

129
00:05:46,780 --> 00:05:48,750
제가 말하는 거 보다는 아무래도 좀

130
00:05:48,750 --> 00:05:52,180
더 공신력 있는 사람이 어떻게 메세지를 정리를 하고 있는가

131
00:05:52,180 --> 00:05:53,980
얘기를 해 보는 게 좋겠죠

132
00:05:53,980 --> 00:05:56,240
그래서 저는 이제 제가 말한 거 보다

133
00:05:56,240 --> 00:05:59,730
이제 마트에서 사 오라는 영국의 유명한 숙제 아키텍처 입니다

134
00:05:59,730 --> 00:06:03,700
네 거기 사람이 막힌 서울로 닷컴 일하는 곳이 있죠

135
00:06:03,700 --> 00:06:05,990
거기서 msa 가 뭐라고 정의를 내렸나

136
00:06:05,990 --> 00:06:08,900
알아봤더니 죄송합니다

137
00:06:08,900 --> 00:06:10,090
마이크로서비스 아키텍처

138
00:06:10,090 --> 00:06:16,300
스타일은 하나의 어플리케이션을 작은 서비스 단위로

139
00:06:16,300 --> 00:06:19,220
쪽에는 재개발 기법이다 라고 얘기 하면서

140
00:06:19,220 --> 00:06:22,660
그 가나의 서비스들은 하나 있어서

141
00:06:22,660 --> 00:06:24,040
프로세스 형태로 뛰고 있고요

142
00:06:24,040 --> 00:06:28,850
그것들은 좀 더 라이트 웨이트 한 방씩 을 사용 해서

143
00:06:28,850 --> 00:06:31,910
이제 주로 대부분 다 rstrip 사용을 하고 있죠

144
00:06:31,910 --> 00:06:33,680
그런 것도 이용해서 하는 기법이다

145
00:06:33,680 --> 00:06:35,200
하라고 얘기를 하고 있어

146
00:06:35,200 --> 00:06:38,350
저기서 인천에 요새 키워드라고 잡은 게 인제 20 서비스

147
00:06:38,350 --> 00:06:40,150
작은단위로 쪼갠다

148
00:06:40,150 --> 00:06:43,670
그리고 라이트웨이트 좀 간단한 방식으로

149
00:06:43,670 --> 00:06:44,880
통신 하기로 한다

150
00:06:44,880 --> 00:06:45,960
이런 것들이 제주로

151
00:06:45,960 --> 00:06:48,490
키워드로 잡을 수가 있을 것 같습니다

152
00:06:48,490 --> 00:06:51,170
거기 말고 너도 이제 마이크로서비스 점

153
00:06:51,170 --> 00:06:52,680
아이오 라면도 사이트가 있어요

154
00:06:52,680 --> 00:06:54,990
거기서 인제 어떡하나 깨져 스타일인지

155
00:06:54,990 --> 00:06:58,110
에 대한 그런 설명들이 자주 나오는데

156
00:06:58,110 --> 00:07:00,700
그 중에 거기서는 마이크로서비스

157
00:07:00,700 --> 00:07:04,580
아키텍처 스타일은 다음과 같은 이제 다섯 가지 형태

158
00:07:04,580 --> 00:07:09,180
그 성격을 띠고 있는 그런 것들을 합해서

159
00:07:09,180 --> 00:07:11,290
우리는 msa 다 라고 부른다 라고 얘기를 했어요

160
00:07:11,290 --> 00:07:14,170
그래서 보니까 유지보수가 좀 잘 돼야 되고

161
00:07:14,170 --> 00:07:18,370
다음에 또 느슨한 연결 독립적인 배포가능 해야 되고

162
00:07:18,370 --> 00:07:20,130
비즈니스 기능 중심이고

163
00:07:20,130 --> 00:07:24,220
더 작은 팀단위로 쪼개져 있는 여기 다섯 가지를 키워드로

164
00:07:24,220 --> 00:07:27,390
이제 잡았더라

165
00:07:27,390 --> 00:07:30,300
이것들은 제가 사실 살짝 그림으로

166
00:07:30,300 --> 00:07:31,690
한번 해 보려고 노력을 했습니다

167
00:07:31,690 --> 00:07:35,410
그래서 msa 어떤 스타일인지 보면은 어

168
00:07:35,410 --> 00:07:38,610
또한 큰 목적으로 하는 서비스는

169
00:07:38,610 --> 00:07:40,240
하나의 큰 어떤 그 것들인데

170
00:07:40,240 --> 00:07:42,810
기능별로 기능 열어줘 이렇게 쪼갭니다

171
00:07:42,810 --> 00:07:45,200
유정아 뭐 인벤토리 빌린 거 있어 시크릿

172
00:07:45,200 --> 00:07:47,290
뭐 이런 식으로 기능별로 쪼개고

173
00:07:47,290 --> 00:07:49,600
이것들은 통신하게 서비스가

174
00:07:49,600 --> 00:07:53,080
독립적인 형태로 느슨하게 연결합니다

175
00:07:53,080 --> 00:07:55,780
이렇게 해 놔야지 어떻게 가능하냐

176
00:07:55,780 --> 00:07:58,760
이렇게 해서 하나의 독립적 형태로 지금 지게되면

177
00:07:58,760 --> 00:08:00,740
각 기능별로 따로따로

178
00:08:00,740 --> 00:08:06,850
개발과 배포와 테스트들을 따로따로 돌릴 수가 있어요

179
00:08:06,850 --> 00:08:10,840
이렇게 되면은 좀 더 빠르게 진행 할 수 있겠죠

180
00:08:10,840 --> 00:08:12,250
그리고 요렇게 되면

181
00:08:12,250 --> 00:08:14,480
이제 각 서비스마다 팀단위로

182
00:08:14,480 --> 00:08:16,610
쪽에 수가 있다는 장점이 있습니다

183
00:08:16,610 --> 00:08:19,360
서비스와 조직을 일 시킬 수 있기 때문에

184
00:08:19,360 --> 00:08:21,980
좀 더 빠르게 서비스를 개발하고

185
00:08:21,980 --> 00:08:24,700
민첩하게 갈 수 있겠죠 에서 팀단위로 줘

186
00:08:24,700 --> 00:08:26,950
작은 제 팀단위로 소규모로 개발

187
00:08:26,950 --> 00:08:30,500
그 서비스를 담당하는 개발과 quay

188
00:08:30,500 --> 00:08:32,250
운영과 이런 것들을 여권 가지고

189
00:08:32,250 --> 00:08:34,670
팀을 함께 만들 수가 있겠죠

190
00:08:34,670 --> 00:08:40,830
서비스별로 독립 되어 있기 때문에 그 독립된 형태로 주세요

191
00:08:40,830 --> 00:08:42,620
확장이 가능합니다

192
00:08:42,620 --> 00:08:44,440
요즘도 많이 나오고 있고

193
00:08:44,440 --> 00:08:45,910
인프라 들이 손쉽게

194
00:08:45,910 --> 00:08:48,800
이제 밥상이다 나가져 오토스케일링 해 놔도 부르고요

195
00:08:48,800 --> 00:08:50,160
이런 것들을 이제

196
00:08:50,160 --> 00:08:53,130
예를 들면 어떤 서비스에서 여기서는 지금

197
00:08:53,130 --> 00:08:55,850
제가 제일 많이 걸린 게 시크릿

198
00:08:55,850 --> 00:08:57,950
시크릿 엄청 나쁜 거 걸렸어

199
00:08:57,950 --> 00:09:00,380
그래서 요금 많이 드리고 싶은 거야

200
00:09:00,380 --> 00:09:03,450
요것만 이제 빠르게 확장이 가능하겠죠

201
00:09:03,450 --> 00:09:06,270
이런 식으로 좀 더 유연하게 대처할 가능할 것

202
00:09:06,270 --> 00:09:11,730
같고요 다음에 서비스별로 완전히 독립된 형태로 움직이기 때문에

203
00:09:11,730 --> 00:09:13,870
독립 기술들을 적용이 가능합니다

204
00:09:13,870 --> 00:09:18,480
해서 말하기로는 서비스는 잡아 로드 개방할 수 있고요

205
00:09:18,480 --> 00:09:21,250
어떤 서비스는 파이썬으로 개발할 수 있

206
00:09:21,250 --> 00:09:22,820
어떤 거 누르면 이렇게 말할 수 있고

207
00:09:22,820 --> 00:09:25,600
요런식으로 인제 독립된 형태

208
00:09:25,600 --> 00:09:28,870
개발 들을 원하는 방식대로 취할 수가 있는 거야

209
00:09:28,870 --> 00:09:32,200
서비스 팀마다 이런 장점들이 있다 라고 인제

210
00:09:32,200 --> 00:09:37,030
msa 내일 말하는 사람들이 얘기하죠

211
00:09:37,030 --> 00:09:37,250
어 그래

212
00:09:37,250 --> 00:09:38,320
또 하나의 가장 중요한

213
00:09:38,320 --> 00:09:41,720
특징 중의 하나가 얘를 통신을 합니다

214
00:09:41,720 --> 00:09:47,690
무조건 네 하나의 통일되어 있는 그 프로토콜 사용 해서

215
00:09:47,690 --> 00:09:51,780
돈을 방식을 이용해서 서비스 길 통신을 하죠

216
00:09:51,780 --> 00:09:55,810
근데 아마 거의 대부분은 거의 뭐 거의 대부분

217
00:09:55,810 --> 00:09:58,160
이제 레스트풀 방식을 이용하는 것 같고요

218
00:09:58,160 --> 00:10:00,540
다음에 메시지 큐 방식도 욕을 많이 합니다

219
00:10:00,540 --> 00:10:02,180
이제 제가 여기서 말하고 말하고

220
00:10:02,180 --> 00:10:05,160
말씀드리고자 대부분 아마레스 방식이기 때문에

221
00:10:05,160 --> 00:10:08,910
이렇게 그림을 그려 없고요

222
00:10:08,910 --> 00:10:12,160
근데 이게 부족한 점 있는 거 아니죠

223
00:10:12,160 --> 00:10:14,010
무조건 오른 건 없애는 거 같은데

224
00:10:14,010 --> 00:10:15,970
하나의 장점을 취하며

225
00:10:15,970 --> 00:10:18,720
반대편에는 분명히 따라오는 단점들이 많이 있던데

226
00:10:18,720 --> 00:10:20,010
굉장히 많은 단점들이 있어요

227
00:10:20,010 --> 00:10:23,420
근데 그 중에서도 이제 하나를 여기서 이제 주제로 뽑아보자면

228
00:10:23,420 --> 00:10:24,610
이것만 있다는 게 아닙니다

229
00:10:24,610 --> 00:10:25,290
여러 가지가 있는데

230
00:10:25,290 --> 00:10:28,540
단점들이 여기서 이제 하나 뽑아 드릴 수 있는 게

231
00:10:28,540 --> 00:10:31,660
서비스가 이제 네트워크를 통한 통신을 많이하죠

232
00:10:31,660 --> 00:10:36,060
대표이다 보니까 통신 오버의 굉장히 증가합니다

233
00:10:36,060 --> 00:10:38,160
옛날에는 그냥 하나의 그냥 통

234
00:10:38,160 --> 00:10:40,840
저렇게 만들어서 그냥 콜하면 끝났는데

235
00:10:40,840 --> 00:10:45,570
이것들을 형태로 개발하던 개발 복잡도 굉장히 증가를 하고

236
00:10:45,570 --> 00:10:50,050
와이파이 통신을 해야 된다 보니까 굉장히 증가하죠

237
00:10:50,050 --> 00:10:54,740
방식을 제 살짝 내부점 뜯어보면

238
00:10:54,740 --> 00:10:57,390
아무래도 이제 엘에스통신 이라고 하면

239
00:10:57,390 --> 00:11:01,240
기반으로 얘기랍니다 에서 다 플레인텍스트 기반으로 해서

240
00:11:01,240 --> 00:11:03,580
둘이 이렇게 존재를 하고 있고요

241
00:11:03,580 --> 00:11:06,960
그리고 저 보시면 메시지는 헬로 라고 하나 보냈는데

242
00:11:06,960 --> 00:11:08,800
수많은 해도 되고 있습니다

243
00:11:08,800 --> 00:11:11,740
그리고 리스폰스 해도 숨 안 해도 되겠다

244
00:11:11,740 --> 00:11:13,550
메시지 전송 안 하려고 하는 데도

245
00:11:13,550 --> 00:11:16,180
이렇게 오버헤드가 많이 있다는 거예요

246
00:11:16,180 --> 00:11:19,370
그리고 또 https 방식이라고

247
00:11:19,370 --> 00:11:21,480
사용을 하면 순차적으로 리퀘스트

248
00:11:21,480 --> 00:11:23,290
리스폰스를 받을 수밖에 없습니다

249
00:11:23,290 --> 00:11:27,440
보낸 대로 갖고 보내는 게 제대로 연결이 안 되거나

250
00:11:27,440 --> 00:11:30,340
보낸 게 제대로 응답을 안 하면 딜레이가 걸리고

251
00:11:30,340 --> 00:11:33,620
이런 문제 단점들이 굉장히 많이 부과기대 시작했어요

252
00:11:33,620 --> 00:11:36,640
왜냐면 냄새가 이렇게 통신을 하다고 2통

253
00:11:36,640 --> 00:11:38,070
신에서부터 이제 걸리는 오버

254
00:11:38,070 --> 00:11:41,790
애들이 단점으로 조금씩 부각되고 있는

255
00:11:41,790 --> 00:11:44,010
그리고 아까 장점으로 말해 서비스

256
00:11:44,010 --> 00:11:47,320
별다른 언어가 사용 가능하다 라고 했는데

257
00:11:47,320 --> 00:11:48,360
진짜 할까요

258
00:11:48,360 --> 00:11:50,930
제가 경험한 바로는 이게 거의 1시간

259
00:11:50,930 --> 00:11:54,140
쳐 서비스별로 다른 작용을 한다

260
00:11:54,140 --> 00:11:59,490
사실 저도 이제 제가 이전회사에서 청주로 파이썬개발 했으니까

261
00:11:59,490 --> 00:12:02,930
그 MS 형태로 개발을 많이 했지만

262
00:12:02,930 --> 00:12:08,480
다른 거 들어가 적용하는 것은 사실상 않더라

263
00:12:08,480 --> 00:12:11,010
그래서 사실은 제가 이제 회사로 옮기고

264
00:12:11,010 --> 00:12:14,460
이런 프로젝트를 진행할 하려고 하다 보니까

265
00:12:14,460 --> 00:12:17,100
당연히 의 형태로 가야 될 것 같은데

266
00:12:17,100 --> 00:12:19,360
어 계속 사진은 저는 이제까지 잔고

267
00:12:19,360 --> 00:12:21,220
기반으로 개발도 안 했어요

268
00:12:21,220 --> 00:12:23,540
그래서 장골 굉장히 좋아합니다

269
00:12:23,540 --> 00:12:27,070
근데 굳이 내가 왜 이런 것들을 했을까

270
00:12:27,070 --> 00:12:29,390
라는 생각을 의문점 가질텐데

271
00:12:29,390 --> 00:12:34,210
저는 이제 약간의 뭔가 새로운 그래도 형태로 바뀌고

272
00:12:34,210 --> 00:12:35,550
계속 이런 식으로 가면 가고 있는데

273
00:12:35,550 --> 00:12:37,510
뭔가 새로운 것들을 트렌드가 뭔지

274
00:12:37,510 --> 00:12:39,690
그리고 또 여기서 왜

275
00:12:39,690 --> 00:12:41,370
이런 것들이 발전하게 되는지에 대한

276
00:12:41,370 --> 00:12:42,560
궁금증들이 좀 있었어요

277
00:12:42,560 --> 00:12:45,170
그래서 성 합류하고 프로이트 하세요

278
00:12:45,170 --> 00:12:47,750
발동되고 하면 기술들을 설치할 수 있는

279
00:12:47,750 --> 00:12:49,320
그런 약간의 시간들 있었죠

280
00:12:49,320 --> 00:12:52,300
그래서 뭔가 여기 좀 더 특화되어있는 뭔가 없을까를

281
00:12:52,300 --> 00:12:55,040
한참을 뒤지면서 찾아보다가 제안하겠다 있었습니다

282
00:12:55,040 --> 00:12:57,820
그래서 좀 죄를 졌다고 PC 랑 있어서요

283
00:12:57,820 --> 00:13:02,300
혹시 PC 라는 걸 이제 들어 보셨으면 잘 모르겠습니다

284
00:13:02,300 --> 00:13:06,050
어차피 싫은데 살짝 소개를 드리면요

285
00:13:06,050 --> 00:13:09,770
왜 이런 식으로 이제 구글 구글 된다

286
00:13:09,770 --> 00:13:13,260
점 아이오 쪽에 가 보면 이런 식으로 소개가 되어 있어요

287
00:13:13,260 --> 00:13:19,420
높은 성능을 그런 범용적인 rpc 프레임워크이다

288
00:13:19,420 --> 00:13:22,000
소개를 합니다

289
00:13:22,000 --> 00:13:24,850
그렇다면 주연 PC 가장 큰 특징이라고 하면 뭐냐

290
00:13:24,850 --> 00:13:28,260
이러한 통신 를 최대한 줄이려고 하는 게

291
00:13:28,260 --> 00:13:30,180
이제 목적이 없어요

292
00:13:30,180 --> 00:13:34,530
거기에 특화되어있는 플레이 먹이라고 오시면 됩니다

293
00:13:34,530 --> 00:13:37,180
그리고 굉장히 죄가 PC 를 기반으로 해서

294
00:13:37,180 --> 00:13:39,580
이것도 이제 굉장히 클럽을 하거든요

295
00:13:39,580 --> 00:13:42,830
원하는 기능을 갖다 버릴 수 있게끔 되어 있어요

296
00:13:42,830 --> 00:13:48,320
마치 플러스 것처럼요 헉 jumping

297
00:13:48,320 --> 00:13:53,150
간단히 브리핑을 드리면 구글이 개발한 RPC 기반 타이머

298
00:13:53,150 --> 00:13:56,090
msa msa 와 같은 분산구조

299
00:13:56,090 --> 00:13:58,430
적합한지 효율적인 통신프로토콜의 대한

300
00:13:58,430 --> 00:14:00,940
고민을 구글에서 하고 있었어요

301
00:14:00,940 --> 00:14:03,650
그래서 무료 15년 전부터 얘네들은 내부적으로

302
00:14:03,650 --> 00:14:07,150
구글에서 내부적으로 소비라는 그럼

303
00:14:07,150 --> 00:14:09,620
프로젝트를 통해서 grb7 정신이 줘

304
00:14:09,620 --> 00:14:12,420
이것들이 이제 시스템을 오픈소스로

305
00:14:12,420 --> 00:14:15,250
내부적으로 사용하고 있었는데

306
00:14:15,250 --> 00:14:18,820
이게 또 MS 형태가 굉장히 사게되고 놓거나

307
00:14:18,820 --> 00:14:22,340
컨테이너나 아니면 제클라우드가 경제발전을 하면서

308
00:14:22,340 --> 00:14:23,810
MS 형태가 굉장히 빠른 식으로

309
00:14:23,810 --> 00:14:26,370
다른 형태로 발전하게 시작합니다

310
00:14:26,370 --> 00:14:28,930
그러니까 이게 박광호 받기 시작하고

311
00:14:28,930 --> 00:14:30,920
사람들이 수 많은 고민을 있다 보니

312
00:14:30,920 --> 00:14:34,700
구글에서는 이제 우리가 내부적으로 사용하던 이것들을 외부로

313
00:14:34,700 --> 00:14:36,240
공기를 한번 해 보자 라고 해서

314
00:14:36,240 --> 00:14:39,100
오픈소스로 프로젝트로 발동시킨 것이 주엽

315
00:14:39,100 --> 00:14:41,630
PC 라고 합니다

316
00:14:41,630 --> 00:14:45,320
제가 사실 처음 PC 라는 걸 들어 봤던 거는 한 2

317
00:14:45,320 --> 00:14:47,010
3년 전에 했던 대화

318
00:14:47,010 --> 00:14:49,930
그래서 그때 냄새 게임 4일간 했었는데

319
00:14:49,930 --> 00:14:52,600
그 게임 사가 엔씨소프트 알고 있어요

320
00:14:52,600 --> 00:14:54,960
그 곳에서는 의외로

321
00:14:54,960 --> 00:14:58,920
클라우드네이티브 컴퓨팅 파운데이션 이라는 요즘에

322
00:14:58,920 --> 00:15:03,790
이제 굉장히 많은 주목을 받고 있는 제사 있다고

323
00:15:03,790 --> 00:15:05,630
모재 다니죠

324
00:15:05,630 --> 00:15:08,140
여기서는 이제 쿠버네티스를

325
00:15:08,140 --> 00:15:13,070
이제 굉장히 위시한 수많은 오픈소스를 여기서

326
00:15:13,070 --> 00:15:15,320
이제 인큐베이팅을 합니다

327
00:15:15,320 --> 00:15:18,400
여기 이제 참가한 회사 대만사진 엄마 엄마 하고요

328
00:15:18,400 --> 00:15:21,450
이제 숨겨져 있는 사실이지만

329
00:15:21,450 --> 00:15:23,720
ecf 쪽에 굉장히 한국에서

330
00:15:23,720 --> 00:15:26,650
가장 먼저 참여한 회사가 있어도 돼요

331
00:15:26,650 --> 00:15:30,240
그래서 저도 이제 CF 를 이제 평창 검색을 하고

332
00:15:30,240 --> 00:15:31,400
뭐가 이런 게 있더라

333
00:15:31,400 --> 00:15:32,730
찾아보다 보니까 안 추워 PC

334
00:15:32,730 --> 00:15:34,200
라는 게 그때 처음 전에 들어왔어 아닌데

335
00:15:34,200 --> 00:15:35,820
이런 게 있구나 라는 것 정도 남았어

336
00:15:35,820 --> 00:15:37,450
치료하면서 알아봤던 경우고

337
00:15:37,450 --> 00:15:40,620
이거 직접 사용하게 될 거라고 생각을 못 했습니다

338
00:15:40,620 --> 00:15:41,620
근데 회사로 옮기게 되고

339
00:15:41,620 --> 00:15:43,470
뭔가 새로운 것들을 찾다 보니까

340
00:15:43,470 --> 00:15:45,050
지하 PC 가 이런 게 있었지

341
00:15:45,050 --> 00:15:47,300
맞아 그러면서 이거 한번 써 보자

342
00:15:47,300 --> 00:15:48,700
한참을 찾아 보다 보니까

343
00:15:48,700 --> 00:15:53,640
이게 굉장히 관심도도 굉장히 높아지고 있고

344
00:15:53,640 --> 00:15:59,300
요즘에 많이 주목을 받고 있구나라는 결론에 이르렀다 써요

345
00:15:59,300 --> 00:16:03,540
그 사진은 저도 그렇게 막 얼굴에서 보고

346
00:16:03,540 --> 00:16:06,030
다시 엄청 오래된 개발자 아니거든요

347
00:16:06,030 --> 00:16:10,100
그래서 그래서 이제 PC 라는 개념을

348
00:16:10,100 --> 00:16:12,410
사실은 저도 실제 써보진 않았었어요

349
00:16:12,410 --> 00:16:14,160
그냥 이런 개념이 있구나라는 것

350
00:16:14,160 --> 00:16:16,790
정도만 알고 있어 예전에 어디서 들었는데

351
00:16:16,790 --> 00:16:19,540
xmlrpc 에서 처음 들었던 거죠

352
00:16:19,540 --> 00:16:23,760
저는 이제 거의 다 기반으로 개발 많이 해서 가지고

353
00:16:23,760 --> 00:16:26,000
근데 어디서 들어 봤지 했더니

354
00:16:26,000 --> 00:16:27,450
세미나 PC 가 있었네

355
00:16:27,450 --> 00:16:29,470
아 PC 가 뭔가 왜 이거

356
00:16:29,470 --> 00:16:31,640
왜 다시 이게 꺼내 들고 나온 건가 라고

357
00:16:31,640 --> 00:16:35,430
이제 자세히 뜯어보니까 잘 PC 가 뭔가 하고 왔더니

358
00:16:35,430 --> 00:16:37,550
리모트 프로시저 콜 일하는 거야

359
00:16:37,550 --> 00:16:40,010
자고요 원격지 프로그

360
00:16:40,010 --> 00:16:43,020
마치 로컬에서 실행 하는 것처럼 하는 거 해서

361
00:16:43,020 --> 00:16:44,300
여기 클린봇이 알겠지만

362
00:16:44,300 --> 00:16:46,020
알펜시아에서 어플리케이션 쪽에 있죠

363
00:16:46,020 --> 00:16:50,880
여기서 그 시간에 메소드를 하나 예정이라는 거죠

364
00:16:50,880 --> 00:16:53,490
그리고 이내 후에 어떠한 방식으로 인해서

365
00:16:53,490 --> 00:16:58,640
클라이언트측에서 고질라 아스트로 urameshi 파라미터

366
00:16:58,640 --> 00:17:02,190
정해 하지 않아도 마치 내가 외부에 서버쪽에 있는 메소드

367
00:17:02,190 --> 00:17:04,740
코라드 지금 쓸 수 있는 거야

368
00:17:04,740 --> 00:17:08,190
우리가 내부에 있는 편의점 콜라 드세요

369
00:17:08,190 --> 00:17:10,860
그때 보니까 코당 이제 관계를 되는 거죠

370
00:17:10,860 --> 00:17:14,900
그리고 레스프리 http 규격도 필요없어지는 거예요

371
00:17:14,900 --> 00:17:19,100
왜냐면 이제 메소드와 파라미터만 전달하면 마치 내가 내부적인

372
00:17:19,100 --> 00:17:20,980
그런 그 함수로 그냥 불러

373
00:17:20,980 --> 00:17:26,700
다 쓰는 거 같은 그런 효과를 마치 다른 서비스와 통신을

374
00:17:26,700 --> 00:17:27,720
하지만

375
00:17:27,720 --> 00:17:29,910
로컬에서 메소드를 사용하는 것처럼

376
00:17:29,910 --> 00:17:31,420
보이게 하는 기술이다

377
00:17:31,420 --> 00:17:38,890
RPC 특징입니다 이것이 예 다시 한번 다시 나타난 야

378
00:17:38,890 --> 00:17:44,220
내가 생각해도 하다 보니까 그림 이라고 하면 찾아 보다 보니까

379
00:17:44,220 --> 00:17:46,020
이제 1990년도에 유행했던 요즘

380
00:17:46,020 --> 00:17:47,490
레트로가 또 여행을 하고 있죠

381
00:17:47,490 --> 00:17:52,030
90년대 유행했던 타미힐피거 패션잡지 했던 사진이랑

382
00:17:52,030 --> 00:17:55,640
2018년도에 타미힐피거 있는 잡지 있다

383
00:17:55,640 --> 00:17:57,620
화보랑 거의 차이가 없지

384
00:17:57,620 --> 00:17:59,670
이게 계속 돌고 도는 거 같아요

385
00:17:59,670 --> 00:18:01,620
그렇다면 당신이 이렇게 유행이 돌고

386
00:18:01,620 --> 00:18:05,770
저 때문에 다시 아가씨가 튀어나와 있냐 라고 생각하기에는

387
00:18:05,770 --> 00:18:08,100
rpc 장정들이 조금 있었어

388
00:18:08,100 --> 00:18:12,900
rpc 가 어떠한 장점들을 가지고 있는지를 조금

389
00:18:12,900 --> 00:18:19,110
더 깊이 한번 살펴볼게요 rpc

390
00:18:19,110 --> 00:18:21,050
가장 큰 gipc 시간이야

391
00:18:21,050 --> 00:18:23,710
주의할 PC 의 가장 큰 특징이라고 한다면

392
00:18:23,710 --> 00:18:27,580
첫 번째로는 프로토콜버퍼 뽑을 수가 있을 것 같아요

393
00:18:27,580 --> 00:18:28,840
아마 보신 분들이 야당이

394
00:18:28,840 --> 00:18:31,820
프로토콜버퍼 에 대해서 이해 할 수밖에 없습니다

395
00:18:31,820 --> 00:18:34,660
쓰려면 무조건 이걸 써야 되거든요

396
00:18:34,660 --> 00:18:37,260
버그판은 과연 무엇인가 라고 봤을 때

397
00:18:37,260 --> 00:18:40,140
이거는 재개발촉진지구 분입니다

398
00:18:40,140 --> 00:18:43,410
그래서 구글이 이렇게 설명한 것들을 현재

399
00:18:43,410 --> 00:18:47,110
제가 살짝 가지고 왔더니 이렇게 설명 하더라고요

400
00:18:47,110 --> 00:18:51,590
프로토콜버퍼 는 공장 이제 하고 꺼져 기고

401
00:18:51,590 --> 00:18:54,610
이런 통신 매체를 동신

402
00:18:54,610 --> 00:18:57,270
체계를 프로토콜 예정이라는 방식이에요

403
00:18:57,270 --> 00:19:00,520
그래서 방금 말씀드린 위치가 이렇게 메소드

404
00:19:00,520 --> 00:19:02,440
콜 해 가지고 사용하는 것처럼

405
00:19:02,440 --> 00:19:04,220
직장에서 이렇게 자동으로 해 준다고 했는데

406
00:19:04,220 --> 00:19:06,260
그 뒷단에 이런 것들을

407
00:19:06,260 --> 00:19:08,940
메세지를 처리하는 기술이라고 보시면 될 거 같아요

408
00:19:08,940 --> 00:19:11,200
그래서 엑셀이랑 좀 비슷하지만

409
00:19:11,200 --> 00:19:17,680
좀 더 작고 빠르고 심플하다 합니다

410
00:19:17,680 --> 00:19:20,820
제가 가지고 있냐 를 내부적으로 조금 더 살펴보면

411
00:19:20,820 --> 00:19:22,360
이런 식으로 되어 있어요

412
00:19:22,360 --> 00:19:24,900
서버 클라이언트가 메세지를 정리하는 역할인지

413
00:19:24,900 --> 00:19:27,080
프로토버퍼 가 담당을 하고요

414
00:19:27,080 --> 00:19:30,550
실제 통신 시에는 이제 이것들을 스팀으로 완전

415
00:19:30,550 --> 00:19:32,910
이제 7월 라이더 시켜 버린다

416
00:19:32,910 --> 00:19:35,230
데이터 인코딩 하고

417
00:19:35,230 --> 00:19:40,610
그러다 보니까 xml 보다 훨씬 더 빠르고 잡고 진동 해제

418
00:19:40,610 --> 00:19:43,400
경영하는 형태라고 얘기를 하고요

419
00:19:43,400 --> 00:19:47,690
그렇게 프로토버퍼 를 또 이렇게 가지고 가다 보니

420
00:19:47,690 --> 00:19:51,430
프로토버퍼 는 통신 메시지 있는지

421
00:19:51,430 --> 00:19:52,510
프로토버퍼 담당을 하고

422
00:19:52,510 --> 00:19:57,560
그 외 있는 구현 쪽은 언어의 맞게끔 하면 되게끔 완전독립

423
00:19:57,560 --> 00:19:59,560
댁에 분리가 될 수가 있어요

424
00:19:59,560 --> 00:20:01,470
그래서 앞으로 똑바로

425
00:20:01,470 --> 00:20:04,880
처음에만 되시면 쓰시려면 어떻게 되냐면

426
00:20:04,880 --> 00:20:09,270
구글에서 정리하는 ida 라는 그런 메시지 남깁니다

427
00:20:09,270 --> 00:20:13,240
그래서 프로토버퍼 를 사용하기 위해 랭귀지를 배우

428
00:20:13,240 --> 00:20:15,030
그걸로 작성을 하시고

429
00:20:15,030 --> 00:20:18,760
그거를 언어의 맞게 빌드 하는 과정을 거쳐야 돼요

430
00:20:18,760 --> 00:20:20,360
그래서 올레마켓 일들을 하면

431
00:20:20,360 --> 00:20:23,010
그 언어별로 프로토콜 사용할 수 있게끔 해

432
00:20:23,010 --> 00:20:25,030
뭔가 크레스트 떨어집니다

433
00:20:25,030 --> 00:20:27,570
그런 것들을 이용을 해서

434
00:20:27,570 --> 00:20:30,820
제가 PC 서버를 파이썬으로 더 편할 수도 있고

435
00:20:30,820 --> 00:20:32,740
그다음에 클란트 모드로 두견화 씻고

436
00:20:32,740 --> 00:20:35,070
이제 그런 식으로 돼 있어요

437
00:20:35,070 --> 00:20:36,970
그래서 저희 교회는 내부적으로

438
00:20:36,970 --> 00:20:40,080
그 msa 형태에서 거의 대부분의 백엔드서버

439
00:20:40,080 --> 00:20:42,200
들은 적이 파이썬 개발을 하고 있지만

440
00:20:42,200 --> 00:20:45,260
프론트엔드 쪽은 로드랑 개발하고 있으며

441
00:20:45,260 --> 00:20:47,270
그래서 클라이언트 인제

442
00:20:47,270 --> 00:20:50,400
누드로 개발 하고 있죠 가능할 것 같아요

443
00:20:50,400 --> 00:20:53,390
그래서 프로토콜을 빌드를 하면 자동으로 서버 클라이언트

444
00:20:53,390 --> 00:20:57,120
통신을 위한 코드가 생성해 됩니다

445
00:20:57,120 --> 00:20:59,630
통신 채널 가구 형부가 완전히 분리 되기 때문에

446
00:20:59,630 --> 00:21:01,900
서로 다른 언어로 도현이 가능하고요

447
00:21:01,900 --> 00:21:08,720
또 다른 특징을 하나로 꼽자면 http2 거 같아요

448
00:21:08,720 --> 00:21:11,380
이제 TV 2년제 지압이란

449
00:21:11,380 --> 00:21:14,070
프로토버퍼 많은 독립적인 기술이죠

450
00:21:14,070 --> 00:21:18,850
하지만 이주아 PC 가 앞으로 그 이거를 통신을 할 때

451
00:21:18,850 --> 00:21:21,870
http2 기술인재 하기 때문에

452
00:21:21,870 --> 00:21:26,510
굉장히 많은 장점들을 가져갈 어이 기술들을

453
00:21:26,510 --> 00:21:28,700
http2 기술은 제가 연락하겠습니다

454
00:21:28,700 --> 00:21:32,370
물들이면 이거는 완전히 새로운 프로토콜은 아니고요

455
00:21:32,370 --> 00:21:34,700
그 동안에 우리가 흔히 사용하고 있는데

456
00:21:34,700 --> 00:21:37,900
왜 그동안 asmr 삐졌다고 막 소화기 없다가

457
00:21:37,900 --> 00:21:40,810
레스트로 이동했던 가장 큰 이유 중에

458
00:21:40,810 --> 00:21:42,280
하나가 복잡해서 난 모르겠고

459
00:21:42,280 --> 00:21:46,480
우리가 가장 친숙한 http 기반으로 가자 라고 해서

460
00:21:46,480 --> 00:21:47,950
그렇게 간 거였거든요

461
00:21:47,950 --> 00:21:51,370
그런데 이 주현미 스토크

462
00:21:51,370 --> 00:21:53,390
장점 그대로 하려고 했던 건데

463
00:21:53,390 --> 00:21:54,500
http 가 좀

464
00:21:54,500 --> 00:21:57,950
약간 통신 하기에는 약간 오버헤드가 있으니까

465
00:21:57,950 --> 00:22:02,950
요거는 단순화시켜서 최근에 죽은 경량아 되고

466
00:22:02,950 --> 00:22:04,490
좀 새롭게 만든 거 두 개 있습니다

467
00:22:04,490 --> 00:22:08,050
그래서 http 1.0 계속 그대로 사용할 하지만

468
00:22:08,050 --> 00:22:09,730
여러 가지 스테이터스 코드로 하든가

469
00:22:09,730 --> 00:22:13,140
아니면 뭐 문법이라는 그대로 가져가지만

470
00:22:13,140 --> 00:22:17,200
그거를 조금 더 퍼포먼스 위주로 살리려고 했던 게 인제

471
00:22:17,200 --> 00:22:20,010
시티투어 기술입니다 해서

472
00:22:20,010 --> 00:22:23,060
속도 향상을 위해 이런 식으로 이제 처리했어요

473
00:22:23,060 --> 00:22:25,990
2에서는 요거 에 대한 장점을 그대로 지하

474
00:22:25,990 --> 00:22:27,410
PC 같이 할 수 있다는 거잖아

475
00:22:27,410 --> 00:22:29,690
이걸 이용해서 통신 하니까

476
00:22:29,690 --> 00:22:34,620
그래서 데이터를 얘네들은 예전에는 1TP 일정

477
00:22:34,620 --> 00:22:39,140
이제 일정 대기실에서는 반드시 플레인텍스트 기반으로

478
00:22:39,140 --> 00:22:40,410
하나의 이렇게 했을 때는 하나

479
00:22:40,410 --> 00:22:41,390
묶어서 이렇게 보내고

480
00:22:41,390 --> 00:22:45,600
리스폰스 바꿔 있던 방식 이라며 이것들을 걔네들은 데이터프레임이란

481
00:22:45,600 --> 00:22:47,380
그래서 이거를 이제 프레임을 때

482
00:22:47,380 --> 00:22:50,790
나눕니다 나눠서 동시에 여러 개를 막 보낼 수 있어요

483
00:22:50,790 --> 00:22:52,080
1에서 난 됐거든요

484
00:22:52,080 --> 00:22:52,970
동시에 여러 개를 보내고

485
00:22:52,970 --> 00:22:54,890
동시에 여러 개 받을 수도 있습니다

486
00:22:54,890 --> 00:22:58,050
그리고 원래 예전에는 이제 불 보시면

487
00:22:58,050 --> 00:23:01,150
이제 웹사이트에서 원래 있고요

488
00:23:01,150 --> 00:23:01,790
서버 쪽이죠

489
00:23:01,790 --> 00:23:05,530
초월하죠 뭐라고 받은 다음에 그 받은 거 를 기반으로 해서

490
00:23:05,530 --> 00:23:06,940
다시 그 안에 있는 뭐

491
00:23:06,940 --> 00:23:08,800
예를 들면 뭐 자바스크립트파일 하든가

492
00:23:08,800 --> 00:23:11,320
아니면 뭐 아이콘 이미지

493
00:23:11,320 --> 00:23:13,560
파일 이런 것들을 다시 재현성 제일 요청을 하자

494
00:23:13,560 --> 00:23:16,040
그리고 다 제 거를 다시 봤습니다

495
00:23:16,040 --> 00:23:19,020
이런 여러 가지 이제 스탭들을 거치게 되는데

496
00:23:19,020 --> 00:23:22,690
2에서는 이것들을 다시 재방송 하는 게 아니라

497
00:23:22,690 --> 00:23:24,020
어차피 서버가 다 알고 있거든요

498
00:23:24,020 --> 00:23:27,310
제가 http html 파일을 가져왔고

499
00:23:27,310 --> 00:23:30,350
그 안에는 여러 가지 필요한 것들은 기술 되었기 때문에

500
00:23:30,350 --> 00:23:32,290
그건 알아서 부실해서 넘기는 거야

501
00:23:32,290 --> 00:23:37,050
요청 없이도 보낼 수도 있고요 해도 자체도 죽여줍니다

502
00:23:37,050 --> 00:23:38,760
여러가지 이런 얘기를 통해서

503
00:23:38,760 --> 00:23:41,220
이제 이런 사이트가 있더라고요

504
00:23:41,220 --> 00:23:44,490
그래서 여기 받더니 happy https

505
00:23:44,490 --> 00:23:48,010
비교한 버섯으로 닷컴 인데

506
00:23:48,010 --> 00:23:52,620
티와 http https 랑 비교 한 게 아니라 여기

507
00:23:52,620 --> 00:23:55,150
내부적으로 잘 앉아서 상세한 설명 드리면

508
00:23:55,150 --> 00:23:56,920
sung 2.0 기반으로 하기 때문에

509
00:23:56,920 --> 00:24:00,010
이렇게 깔아 달라고 얘기 합니다

510
00:24:00,010 --> 00:24:01,260
다른 의미가 아니고

511
00:24:01,260 --> 00:24:03,210
S 가 2.0 기반으로 설계되어있다

512
00:24:03,210 --> 00:24:04,850
이렇게 속도가 빠르다

513
00:24:04,850 --> 00:24:08,510
지금 그림에서는 몇 개 빠르게 되어 있죠

514
00:24:08,510 --> 00:24:13,370
제가 저도 해 보니까 굉장히 빠르게 빠르더라구요

515
00:24:13,370 --> 00:24:14,900
그리고 이제 커뮤니케이션을 할 때

516
00:24:14,900 --> 00:24:19,410
이렇게 양방향 스트리밍을 적용할 수 있습니다

517
00:24:19,410 --> 00:24:22,280
그래서 서버가 클라이언트가 동시에

518
00:24:22,280 --> 00:24:23,640
데이터를 주고 받을 수가 있어요

519
00:24:23,640 --> 00:24:25,100
그것도 스트리밍 형태로

520
00:24:25,100 --> 00:24:29,350
우리가 흔히 얘기한 게 제일 번 기술이죠

521
00:24:29,350 --> 00:24:32,440
고나리 rpc 라고 해서 하나를 주고

522
00:24:32,440 --> 00:24:34,030
하나를 받는 형태가 아니라

523
00:24:34,030 --> 00:24:38,100
클라이언트가 수호한테 파라미터 요청을 하나만 보내더라도

524
00:24:38,100 --> 00:24:42,860
서버 클라이언트 굉장히 다수의 요청된 결과를

525
00:24:42,860 --> 00:24:45,620
트림이 형태로 나눠서 이렇게 보낼 수도 있고요

526
00:24:45,620 --> 00:24:46,790
반대가 될 수도 있고

527
00:24:46,790 --> 00:24:48,370
양방향으로 가능합니다 이런 것도

528
00:24:48,370 --> 00:24:52,550
이제야 PC 엔진 특징이라고 할 수 있을 것 같아요

529
00:24:52,550 --> 00:24:55,340
비씨 로 파이썬에서 어떻게 이용을 아냐

530
00:24:55,340 --> 00:24:58,060
그거 사이트가 보시면 아시겠지만

531
00:24:58,060 --> 00:25:01,480
튜토리얼을 보면 굉장히 다양한 언어들을 지원을 해요

532
00:25:01,480 --> 00:25:03,580
근데 그 중에서도 저희는 이제 파이썬 입장이죠

533
00:25:03,580 --> 00:25:07,590
파이썬 다양한 언어 중에서도 전파 있었네요

534
00:25:07,590 --> 00:25:08,630
이거 어떻게 쓰냐

535
00:25:08,630 --> 00:25:13,000
그렇게 이제 사용법을 큰딸에게 제가 불편해서 설명드리면

536
00:25:13,000 --> 00:25:15,300
먼저는 프로토버퍼 를 사용하셔야 돼요

537
00:25:15,300 --> 00:25:18,240
그래서 프로포폴을 idl 이용해서 작성하신

538
00:25:18,240 --> 00:25:21,960
다음에 조금 있어야 되는데 어렵잖아요

539
00:25:21,960 --> 00:25:23,290
내일 통해 작성하신 다음에

540
00:25:23,290 --> 00:25:25,740
그거를 파이썬에 마필들 하시고요

541
00:25:25,740 --> 00:25:27,940
1대 파일이 이용해서 제가 PC

542
00:25:27,940 --> 00:25:33,070
에 파이썬으로 서버 클라이언트 편하실 때

543
00:25:33,070 --> 00:25:35,310
이거는 저희가 제가 내부적으로 자고 있는 것들은

544
00:25:35,310 --> 00:25:36,590
일부러 발치를 해 본 건데

545
00:25:36,590 --> 00:25:38,090
아이디로 청양 프로 2급 합니다

546
00:25:38,090 --> 00:25:39,400
이런 이런 식으로 예정 이래요

547
00:25:39,400 --> 00:25:42,240
그래서 서버는 유저라고 적용 해놓고

548
00:25:42,240 --> 00:25:43,380
이제 ipc 라고 해서

549
00:25:43,380 --> 00:25:46,760
업그레이드 업데이트 이런 식으로 제가 중요했죠

550
00:25:46,760 --> 00:25:49,850
이렇게 해 놓으면 클라이언트에서는 이거는 제 메소드 형태로

551
00:25:49,850 --> 00:25:52,210
그냥 바로 콜에서 쓸 수 있습니다

552
00:25:52,210 --> 00:25:54,520
뭐 예전에 HG 방식이라면 url 정리도 해야 되고

553
00:25:54,520 --> 00:25:56,520
배송 해야 되고 이런 식으로 했다면이제 이거는

554
00:25:56,520 --> 00:25:59,170
그냥 이걸 함수에서 그냥 갖다 쓰듯이

555
00:25:59,170 --> 00:26:02,250
이렇게 쓸 수도 있고

556
00:26:02,250 --> 00:26:05,330
리스폰스 또 이렇게 할 수가 있습니다

557
00:26:05,330 --> 00:26:08,710
오른쪽은 리스폰스를 저기로 한 거고요

558
00:26:08,710 --> 00:26:10,590
그렇게 정의한 프로토콜을

559
00:26:10,590 --> 00:26:12,680
파이썬에서 사용가능하기 변환시켜주는 작업

560
00:26:12,680 --> 00:26:13,620
한번 있긴 있어야 돼요

561
00:26:13,620 --> 00:26:16,660
그래서 그런 식으로 이제 2를 또 다 지원해 줍니다

562
00:26:16,660 --> 00:26:19,530
해서 그렇게 명령을 한 방이면 요구를

563
00:26:19,530 --> 00:26:24,130
윷점풀이 파일을 빌드로 하게 되면 요렇게 유저 언더바

564
00:26:24,130 --> 00:26:28,380
PB 2라는 파이썬 BB21

565
00:26:28,380 --> 00:26:31,270
파이썬 파일 자동으로 이제 만들어 줘요

566
00:26:31,270 --> 00:26:34,030
12개 파일이 역할이 뭐냐 라고 봤더니

567
00:26:34,030 --> 00:26:37,960
2.4 있는 메시지 정의의 사용된

568
00:26:37,960 --> 00:26:39,640
클래스들의 들어 있어요

569
00:26:39,640 --> 00:26:42,030
그래서 가 보면 막 바이너리 형태로

570
00:26:42,030 --> 00:26:44,230
망고컴 빨리 떨어진 게 아니라 이거 수 있습니다

571
00:26:44,230 --> 00:26:47,980
거기 가보면 이제 이렇게 되니까

572
00:26:47,980 --> 00:26:50,070
클래스들이 막 다 자동으로 만들어져서

573
00:26:50,070 --> 00:26:50,930
정리가 되어 있어요

574
00:26:50,930 --> 00:26:54,670
그래서 뭐 크레이트 업데이트 업데이트 베스트

575
00:26:54,670 --> 00:26:58,350
뭐 이런 것들이 다 정리가 되어 있고요

576
00:26:58,350 --> 00:27:00,770
이것들은 서버에서 구현을 하실 때

577
00:27:00,770 --> 00:27:06,780
유적 TV 2GR PC 라는 파일을 임포트 하시고

578
00:27:06,780 --> 00:27:11,110
이것들을 호출하려면 사용을 하셔야 됩니다

579
00:27:11,110 --> 00:27:12,590
서버 로그인 할 때 어떻게 하느냐

580
00:27:12,590 --> 00:27:19,150
실제 유저를 구현하실 때는 프로토버퍼 를 통해 생성된 BB21

581
00:27:19,150 --> 00:27:22,550
wfc 유저서버 서비스를 하는 것들이 자동으로

582
00:27:22,550 --> 00:27:24,360
이렇게 길드가 내가 유저라고

583
00:27:24,360 --> 00:27:28,710
클래스를 아이디어를 통해 섞어서 석별의 정 일하게 되면

584
00:27:28,710 --> 00:27:30,530
이런 식으로 이름이 자동으로 생성이 됩니다

585
00:27:30,530 --> 00:27:32,940
유정아 수업 있어 이렇게 내가 abc 라고

586
00:27:32,940 --> 00:27:35,610
예정이라면 abc 서비스 왜 이렇게 저기 뭐야 그 것들인데

587
00:27:35,610 --> 00:27:43,250
서브클래스로 상속받은 구현을 하시면 돼요

588
00:27:43,250 --> 00:27:44,700
이제 통신문 이제

589
00:27:44,700 --> 00:27:47,350
그렇게 구원하시고 재밌어지는 그러시고 구원하시고

590
00:27:47,350 --> 00:27:51,300
그다음에 서버를 인제 뛰어야죠

591
00:27:51,300 --> 00:27:52,970
지울 때는 이렇게 귀한 PC

592
00:27:52,970 --> 00:27:54,950
서버 오라고 해서

593
00:27:54,950 --> 00:28:00,240
그 아이디얼 통해서 이제 생성되어있는 유저 서비스 업데이트

594
00:28:00,240 --> 00:28:03,160
서버 라는 또 클래스 클래스 갔다 오는 게 있거든요

595
00:28:03,160 --> 00:28:06,600
그것들은 이용을 해서 이렇게 서비스 띄면 됩니다

596
00:28:06,600 --> 00:28:08,450
이런 것들을 다 자동으로 행성을 해주고

597
00:28:08,450 --> 00:28:12,000
저는 지금 사용을 하시면 사용을 하기만 하면 됩니다

598
00:28:12,000 --> 00:28:13,240
이렇게 서비스 서버를 띄우고

599
00:28:13,240 --> 00:28:20,140
요 클라이언트 지하 피씨라인 채널을 하나 생성을 하시고

600
00:28:20,140 --> 00:28:21,820
지금 스톱 이라고 되어 있죠

601
00:28:21,820 --> 00:28:24,580
유적 B2B2B 씨하고 유적

602
00:28:24,580 --> 00:28:29,870
스톱 이런 것들이 이제 그쪽에서 그 선을 하시고요

603
00:28:29,870 --> 00:28:33,830
다음에 rpc 통신에 사용할 메쏘드로 인제 호출 하시면 돼

604
00:28:33,830 --> 00:28:38,490
아까 아이디에서 정리했던 이런 식으로 해서

605
00:28:38,490 --> 00:28:42,810
메소드 불러서 그냥 사용하시면 됩니다

606
00:28:42,810 --> 00:28:47,510
시작함 메시지가 통제되지 않는 현상이 그 사람들 볼

607
00:28:47,510 --> 00:28:51,060
수가 있으실거예요 설명만 들어서는 결정했죠

608
00:28:51,060 --> 00:28:55,600
근데 이게 끝일까요 황상현 싫은 어려운 거 같아요

609
00:28:55,600 --> 00:28:56,890
제가 직접 사용을 하고

610
00:28:56,890 --> 00:28:59,440
다 보니깐 장고항 비교할 수 밖에 없더라고요

611
00:28:59,440 --> 00:29:06,570
저는 참고로 인제 사랑했으니까 주변 PC 는 가만히 보니까

612
00:29:06,570 --> 00:29:11,860
이제 msa 있는 서비스가 메시지 성능향상에 집중

613
00:29:11,860 --> 00:29:14,280
몰빵 치는 그냥 프리 먹이라고 보시는지요

614
00:29:14,280 --> 00:29:17,810
메세지를 정이라고 그 메시지가 통신랙

615
00:29:17,810 --> 00:29:21,100
집중되어있는 특화된 프리미엄이라고 오시면 됩니다

616
00:29:21,100 --> 00:29:28,080
그러다 보니까 잔고를 쓰더라도 이런 다양한 기능들이 있어

617
00:29:28,080 --> 00:29:29,960
근데 제가 이런 기능 때문에 살았었는데

618
00:29:29,960 --> 00:29:33,660
mbc 뭐 이런 패턴들 다 적용가능하고 5월입니다

619
00:29:33,660 --> 00:29:35,590
있고 굉장히 다양하고

620
00:29:35,590 --> 00:29:39,270
김탁구 기능장 아 이런 게 하나도 없어요

621
00:29:39,270 --> 00:29:41,840
굉장히 그리워 지더라고요

622
00:29:41,840 --> 00:29:44,600
프로토버퍼 관리가 생각보다 쉽지가 않아요

623
00:29:44,600 --> 00:29:47,040
프로토버퍼 결국에는 어떻게 되냐면

624
00:29:47,040 --> 00:29:51,090
그렇게 빌드해서 나온 그 파일들을 예를 들면

625
00:29:51,090 --> 00:29:52,850
유저 인벤토리

626
00:29:52,850 --> 00:29:56,370
이렇게 빌링스 이렇게 4개의 서비스만 기회를 들었는데

627
00:29:56,370 --> 00:29:59,340
그 서비스마다 내가 통신 하고 싶은 상대편

628
00:29:59,340 --> 00:30:05,840
서비스들에 대한 서비스를 통신하려면 ID 를 통해서 작성

629
00:30:05,840 --> 00:30:06,940
프로토버퍼 필드 하면

630
00:30:06,940 --> 00:30:09,330
빌드된 팔 떨어져 그것들을 다 100% 해 줘야 돼요

631
00:30:09,330 --> 00:30:15,130
100% 해 줘 배포하는 것도 일인 거예요

632
00:30:15,130 --> 00:30:17,780
컴퓨터를 서버 그런데 모두 가지고 있어야 되니까

633
00:30:17,780 --> 00:30:19,490
이게 저게 서비스 저쪽에 놨네

634
00:30:19,490 --> 00:30:20,810
지금 개발한 지 얼마 되지도 않는데

635
00:30:20,810 --> 00:30:21,980
저희 서비스가 지금 막 다섯 개

636
00:30:21,980 --> 00:30:23,000
여섯 개 넘어 가고 있거든요

637
00:30:23,000 --> 00:30:27,370
그 sms 일본에서 버전관리를 하고

638
00:30:27,370 --> 00:30:30,130
100% 하는 게 쉽지가 않습니다

639
00:30:30,130 --> 00:30:32,940
그때 필드가이드 이게 또 테스트 해야 되잖아요

640
00:30:32,940 --> 00:30:37,090
개발자 개발자 내부에서 각자 다른 환경

641
00:30:37,090 --> 00:30:38,860
저도 이제 로컬에서 줄을 개발하고

642
00:30:38,860 --> 00:30:40,430
다른 분은 어떤 것도 서버에서 개발하고

643
00:30:40,430 --> 00:30:41,400
이런 분들이 많이 계십니다

644
00:30:41,400 --> 00:30:45,750
이런 것들을 통합 환경으로 제공해 주는 게 사진 없어

645
00:30:45,750 --> 00:30:50,310
왜냐면 빌드를 준비하기로 과정 자체가 사실은 좀 귀찮은 일이더라구요

646
00:30:50,310 --> 00:30:53,720
관련 패키지 설치 해야 되고 디펜더 시켜야 되고

647
00:30:53,720 --> 00:30:55,260
필드명으로 수영 해야 되고

648
00:30:55,260 --> 00:30:56,540
그래서 그냥 내부적으로

649
00:30:56,540 --> 00:31:01,870
PC 를 좀 잘 쓰고 만들지 알겠구나

650
00:31:01,870 --> 00:31:04,630
진짜 누가 보면 안 돼

651
00:31:04,630 --> 00:31:06,590
그래도 이런 부분이 좀 필요한 거 같아서

652
00:31:06,590 --> 00:31:09,210
저희는 이제 내부적으로 빨리 개발에 워커홀릭이 해서

653
00:31:09,210 --> 00:31:13,150
이렇게 만들 수 있나 해서 저희는 내부적으로 이렇게 나왔어요

654
00:31:13,150 --> 00:31:16,500
api 란 것과 코어란 것과 서비스

655
00:31:16,500 --> 00:31:19,540
요런 식으로 구형법 세계를 안 하고요

656
00:31:19,540 --> 00:31:20,930
그 중에서도 이제 이 부분은

657
00:31:20,930 --> 00:31:24,350
프로토콜을 관리하는 부분입니다

658
00:31:24,350 --> 00:31:30,350
이제 저희가 그 바로 공기는 드릴 순 없겠지만

659
00:31:30,350 --> 00:31:33,400
이런 식으로 폴더들을 디렉토리 닫아 놓고

660
00:31:33,400 --> 00:31:35,660
요런 식으로 인식을 해요

661
00:31:35,660 --> 00:31:37,820
그래서 패키지 쪽

662
00:31:37,820 --> 00:31:40,200
폴더에는 디렉토리에는 프로토버퍼

663
00:31:40,200 --> 00:31:43,450
필드 를 위한 패키지리스트 들이다 있고요

664
00:31:43,450 --> 00:31:45,650
그리고 프로토란 소리에

665
00:31:45,650 --> 00:31:47,770
제가 방금 말씀드린 아이디에

666
00:31:47,770 --> 00:31:49,720
파일을 여기다 작성을 합니다

667
00:31:49,720 --> 00:31:51,860
그리고 빌드 디렉토리안에

668
00:31:51,860 --> 00:31:53,920
그거를 빌드 할 수 있는 모든 걸 넣어 놨어요

669
00:31:53,920 --> 00:31:55,450
그냥 한 방에 할 수 있게끔

670
00:31:55,450 --> 00:31:58,230
그리고 최종 버전은 비스트의 떨고

671
00:31:58,230 --> 00:32:04,190
더럽게 만들어 그 빌드되는 과정 가운데서도 추가되어야 내일

672
00:32:04,190 --> 00:32:06,500
여러가지 파일들만 이니파일 이런 것들이 있겠죠

673
00:32:06,500 --> 00:32:08,050
그런 것들은 좀 동작시키기

674
00:32:08,050 --> 00:32:11,640
강국들에게 몇 개 이렇게 재개발 시켜서 넣어 놨고요

675
00:32:11,640 --> 00:32:16,100
빌드하고 100번 어떻게 하냐 이렇게 이용했어요

676
00:32:16,100 --> 00:32:17,910
저희가 인제 내부자 메이크파일 만들었고

677
00:32:17,910 --> 00:32:21,170
그 다음에 이거를 컨테이너 을 이용해서 젠킨스 랑

678
00:32:21,170 --> 00:32:26,940
와이파이 이제 써 버려 가지고 좀 간편하게 만들려고 노력했습니다

679
00:32:26,940 --> 00:32:29,600
이게 하다 보니까 이렇게 돼 보면은

680
00:32:29,600 --> 00:32:32,670
이제 개발자는 각자의 재개발

681
00:32:32,670 --> 00:32:34,540
서버 개발 제한 경 있겠죠

682
00:32:34,540 --> 00:32:38,590
거기에 이제 컨테이너도크 정도에 다 깔려 있습니다

683
00:32:38,590 --> 00:32:41,350
그래서 일하는 제기 사이클론을 떠 주고

684
00:32:41,350 --> 00:32:43,740
앞으로 받아서 소스를 받아서

685
00:32:43,740 --> 00:32:45,640
거기에 프로토 디렉토리 안에다가

686
00:32:45,640 --> 00:32:49,520
열심히 자기가 작성한 idl 파일들을 넣어 두었습니다

687
00:32:49,520 --> 00:32:53,660
그리고 이것들을 어떻게 하냐면

688
00:32:53,660 --> 00:32:55,190
프로토콜을 지금 작성합니다

689
00:32:55,190 --> 00:32:59,380
개발자가 그냥 이번 그리고 3번 필드

690
00:32:59,380 --> 00:33:03,920
디렉토리에서 메이크 파이썬이란 명령을 한방 치면 다 알아서

691
00:33:03,920 --> 00:33:05,880
컨테이너가 올라와 가지고 얘네들

692
00:33:05,880 --> 00:33:08,810
열심히 필드로 해주는 과정대로 같이 그만 들어가세요

693
00:33:08,810 --> 00:33:12,850
그 결과 디렉토리 떨거지들 하고

694
00:33:12,850 --> 00:33:14,850
그래서 메이크파일 접착성을 하면서

695
00:33:14,850 --> 00:33:18,150
이제 내용을 보면

696
00:33:18,150 --> 00:33:23,620
또 토론을 하는 과정들이 이렇게 보이시죠

697
00:33:23,620 --> 00:33:24,930
그리고 빌드 점

698
00:33:24,930 --> 00:33:27,560
파일에 보시면 이렇게 그

699
00:33:27,560 --> 00:33:34,480
프로토버퍼 빌드하는 내용도 이렇게 써 있습니다

700
00:33:34,480 --> 00:33:36,720
그리고 이제 이렇게 되는 일찍 테스트하고

701
00:33:36,720 --> 00:33:39,770
개발이 완료된 내용들은 기술을 서버를 푸시락 있어

702
00:33:39,770 --> 00:33:42,300
그쪽으로 표시를 하면 젠킨스를 통해서 자동으로

703
00:33:42,300 --> 00:33:46,870
파이 파이 프라이비트 LF 를 만났을 거기에 패키지파일

704
00:33:46,870 --> 00:33:50,280
그냥 묶어서 바로 180 그냥 만들어 놓은 거죠

705
00:33:50,280 --> 00:33:54,420
제가 알아서 해 주게 그만 들어가 이렇게 하니까

706
00:33:54,420 --> 00:33:59,420
좀 이제 프로토콜을 빌드하고 사용하게 좀 많이 편해지더라고요

707
00:33:59,420 --> 00:34:01,010
서비스 쪽은 살펴보면 안 돼

708
00:34:01,010 --> 00:34:03,350
여기는 제거 스프레이 먹네 밴 거 같아요

709
00:34:03,350 --> 00:34:06,930
그래서 이것들을 저 이제 뭐였냐면 자

710
00:34:06,930 --> 00:34:09,620
이제 장소 같은 거는 집 만들어 보려고 한 거죠

711
00:34:09,620 --> 00:34:12,910
내부적으로 비즈니스 로직을 최대한 프레임웍에 정석 되지 않도록

712
00:34:12,910 --> 00:34:14,600
비스트로진 마트에 딱 간단하게 하고

713
00:34:14,600 --> 00:34:18,750
그다음에 메세지 를 열어 모델 레이어를 최대한 빨리 시켜서

714
00:34:18,750 --> 00:34:23,000
TV 라든가 다른 다른 메시지

715
00:34:23,000 --> 00:34:25,380
만약에 취업 실망할 수도 있잖아요

716
00:34:25,380 --> 00:34:31,280
제가 망하면 저희는 그 gfc 개발 했기 때문에 이 비지니스로

717
00:34:31,280 --> 00:34:32,390
집들이 PC

718
00:34:32,390 --> 00:34:33,700
최장 종속적이지 않게끔

719
00:34:33,700 --> 00:34:38,960
이제 만드는 게 최대한 해서 이렇게 다 왔습니다

720
00:34:38,960 --> 00:34:40,300
제가 PC 영역들이 있고요

721
00:34:40,300 --> 00:34:43,440
그것들을 받아서 쓰고 있는 앱 만들어 갖고

722
00:34:43,440 --> 00:34:45,840
그 다음에 서비스레이어 매니저

723
00:34:45,840 --> 00:34:48,180
모델 막 이런 것들에 대한 개념들

724
00:34:48,180 --> 00:34:53,880
인제 저기 프레임을 내부적으로 만들어 놨어요

725
00:34:53,880 --> 00:34:56,590
조금 주엽 PC 관련 내 메시지 철이들다

726
00:34:56,590 --> 00:34:59,870
그냥 lpi 이라는 크레스트 기능에서 다 처리

727
00:34:59,870 --> 00:35:00,310
하겠구만

728
00:35:00,310 --> 00:35:02,730
라이브러리 사철검 만든 겁니다

729
00:35:02,730 --> 00:35:04,360
그래서 사실은 개발할 때

730
00:35:04,360 --> 00:35:07,760
비즈니스로직 말할 때는 없이

731
00:35:07,760 --> 00:35:10,090
에 대한 신경 쓰지 않도록 만들어 놓은 거야

732
00:35:10,090 --> 00:35:14,080
그냥 알아서 다 처리되게 전처리에서 그래서 뭐 파스

733
00:35:14,080 --> 00:35:16,890
블랙헤드 그만 이제 답장

734
00:35:16,890 --> 00:35:19,760
이제 부르기만 하면 자동차 세금 안 되고요

735
00:35:19,760 --> 00:35:22,960
다음에 서비스 쪽은 이제 진짜 실제로 비즈니스로직

736
00:35:22,960 --> 00:35:25,020
2주에 내용들이 들어가는데

737
00:35:25,020 --> 00:35:28,240
거기에도 이제 만들다보면 여러가지 기능들이 필요하거든요

738
00:35:28,240 --> 00:35:29,630
뭐 이벤트 핸들러 라든가

739
00:35:29,630 --> 00:35:32,910
뭐 파라미터를 이리저리 리콰이어 내가 보고

740
00:35:32,910 --> 00:35:34,250
옵션을 문재인과 체크 해야 된다

741
00:35:34,250 --> 00:35:35,670
이런 것들이 많은데

742
00:35:35,670 --> 00:35:36,620
그런 것들을 다

743
00:35:36,620 --> 00:35:39,310
데코라인 서로 처리할 수 있게끔 다 해 놨어

744
00:35:39,310 --> 00:35:43,260
여기서 딱 달면 자동으로 파라미터들을 체크된다

745
00:35:43,260 --> 00:35:45,060
하든가 아니면 그 사이에 이제 이벤트

746
00:35:45,060 --> 00:35:46,550
핸들러 라는 걸 통해서

747
00:35:46,550 --> 00:35:49,390
회사에 들어가야 될 처리 하는 거

748
00:35:49,390 --> 00:35:53,840
이것 때문에 좀 간단하게 나올 수 있도록 만들었습니다

749
00:35:53,840 --> 00:35:55,930
매니저 친구는 이제 뭐 하는지

750
00:35:55,930 --> 00:35:59,300
그냥 TV 나 아니면 다른 서비스에 연동할때

751
00:35:59,300 --> 00:36:03,090
그 데이터핸들링 가능하도록 만든거구요

752
00:36:03,090 --> 00:36:07,150
최종적으로 이제 지하 PC 도 또 다시 메세지를 만들어버렸고

753
00:36:07,150 --> 00:36:08,940
가지고 다시 던져 줘야 되거든요

754
00:36:08,940 --> 00:36:13,370
그것들도 귀찮아서 이제 다 인프라는 라이브러리에서 처리하게

755
00:36:13,370 --> 00:36:15,650
끔

756
00:36:15,650 --> 00:36:21,840
그렇게 돼 다 보니까 좀 뭔가 딱 죄송

757
00:36:21,840 --> 00:36:23,590
이지스로직 개만 최대한 신경

758
00:36:23,590 --> 00:36:27,150
쓰게끔 라이브러리를 만든 거죠

759
00:36:27,150 --> 00:36:31,810
그래서 개발속도를 좀 올려 보게끔 찍어낼 수 있도록

760
00:36:31,810 --> 00:36:34,190
공장장은 된 느낌으로 계속 할 수 있게끔

761
00:36:34,190 --> 00:36:35,670
이제 최대한 귀찮은

762
00:36:35,670 --> 00:36:38,950
반복처리 작업들은 라이브러리에서 처리할게 만들어 가세요

763
00:36:38,950 --> 00:36:42,080
개발한 지 얼마 되지 않았습니다 몇 개월 정도 되고요

764
00:36:42,080 --> 00:36:44,870
근데 써보니까 게 나쁘지 않네 나 생각이 들더라고요

765
00:36:44,870 --> 00:36:46,240
PC 에서 뭐 하는데

766
00:36:46,240 --> 00:36:48,040
이러한 뭔가 패턴이라는 거

767
00:36:48,040 --> 00:36:50,100
이런 것들에 대한 토이 목도 전혀 없고

768
00:36:50,100 --> 00:36:52,890
메시지 처리에만 주로 집중되는 합시다 보니까

769
00:36:52,890 --> 00:36:55,150
그래서 안 비치게 잔고

770
00:36:55,150 --> 00:36:57,600
같아 어떨까라는 생각이 들었어요

771
00:36:57,600 --> 00:37:00,290
그래서 저보다 더 괜찮으면 오픈소스

772
00:37:00,290 --> 00:37:03,460
오픈 할 생각입니다 해서 좀 오픈소스

773
00:37:03,460 --> 00:37:05,700
업그레이드만 쪽팔리게 지금 자고 있어요

774
00:37:05,700 --> 00:37:06,760
아직 안 됐어요

775
00:37:06,760 --> 00:37:10,800
그래서 사실은 여기서 빵 공개해서 엄청 좋겠지만

776
00:37:10,800 --> 00:37:12,230
아직 준비 안 된 거 같아요

777
00:37:12,230 --> 00:37:18,990
근데 원래는 제가 이제 쪽이랑 9월에 6인제 연결해서

778
00:37:18,990 --> 00:37:20,530
어떻게 하면 100% 좀 쉽게 하고

779
00:37:20,530 --> 00:37:22,530
이런 것들을 좀 더 추가로 드리려고 했는데

780
00:37:22,530 --> 00:37:24,020
아마 주제는 조금 벗어난 거 같아서

781
00:37:24,020 --> 00:37:26,180
내가 좀 수정을 했었고요

782
00:37:26,180 --> 00:37:27,160
서비스 구축 이랑

783
00:37:27,160 --> 00:37:31,480
백보 같은 것들은 저희는 아무래도 메가존클라우드 가니까

784
00:37:31,480 --> 00:37:33,620
클라우드 좀 많고 쓸 수 있거든요

785
00:37:33,620 --> 00:37:35,570
아마존 킨들 쓰고

786
00:37:35,570 --> 00:37:37,490
그냥 저희 팀 헤드스핀 에코장인 있습니다

787
00:37:37,490 --> 00:37:45,450
그래서 이건 또 그 배포하는 서비스 레포트 중에 하난데

788
00:37:45,450 --> 00:37:47,410
이거 스피커를 잘 사용하는 분이 계셔 가지고

789
00:37:47,410 --> 00:37:49,350
그걸 또 잘도 이거 쓰고 있고요

790
00:37:49,350 --> 00:37:50,240
그 다음에 그 쪽 뜬다

791
00:37:50,240 --> 00:37:52,300
테러범과 연습으로 사용했는데

792
00:37:52,300 --> 00:37:53,190
이런 문제에 대해서

793
00:37:53,190 --> 00:37:55,930
또 한번 발표를 할 수 있는 자리가 있었으면

794
00:37:55,930 --> 00:38:02,870
좋을 거 같아 생각이 들더라고요

795
00:38:02,870 --> 00:38:06,260
거인 3 종료가 된 거 같은데

796
00:38:06,260 --> 00:38:09,300
시간이 살짝 나오니깐

797
00:38:09,300 --> 00:38:10,700
혹시나 궁금한 점 있으시면

798
00:38:10,700 --> 00:38:13,830
은 질문을 해 주셔도 될 거 같아
