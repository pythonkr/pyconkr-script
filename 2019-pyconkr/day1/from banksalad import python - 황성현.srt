1
00:00:01,480 --> 00:00:04,720
안녕하세요 저는 이번 1반 썬로드 임포트

2
00:00:04,720 --> 00:00:07,460
파이썬 이라는 제목으로 발표를 받게 되며

3
00:00:07,460 --> 00:00:09,460
황성현 입니다 반갑습니다

4
00:00:09,460 --> 00:00:17,760
미션이 후원사 임에도 불구하고

5
00:00:17,760 --> 00:00:20,130
생각보다 많은 분들이 많이 추워 가지고

6
00:00:20,130 --> 00:00:22,090
깜짝 놀랐습니다

7
00:00:22,090 --> 00:00:26,820
그 옆에 팩 사업에서도 되게 좋은 발표가 있으니

8
00:00:26,820 --> 00:00:27,480
혹시 됐다

9
00:00:27,480 --> 00:00:29,460
가지로 하신 분들은 104호

10
00:00:29,460 --> 00:00:32,750
세션을 드려도 괜찮을 거 같습니다

11
00:00:32,750 --> 00:00:34,870
저 저를 소개하는 걸로

12
00:00:34,870 --> 00:00:37,160
좀 발표를 시작을 해 보려고 합니다

13
00:00:37,160 --> 00:00:41,920
저는 2014년부터 파이썬을 사용을 해 봐 썼고요

14
00:00:41,920 --> 00:00:45,050
그리고 2014년부터 뱅크샐러드 합류를 해서

15
00:00:45,050 --> 00:00:48,860
지금 약 5년째 뱅크샐러드 를 함께 만들고 있습니다

16
00:00:48,860 --> 00:00:52,540
뱅크샐러드 초기에는 이제 뭐 이것저것 가리지 않고

17
00:00:52,540 --> 00:00:56,670
자질구레한 엔지니어링 업무부터 뱅크샐러드

18
00:00:56,670 --> 00:00:59,110
서버나 이런 것들을 개발해 왔었구요

19
00:00:59,110 --> 00:01:03,890
지금은 뱅크샐러드 전반적인 어떤 시스템을 디자인하거나 마이크로서비스

20
00:01:03,890 --> 00:01:07,680
어떻게 구성할지 등에서 주로 하는 역할을 담당하고

21
00:01:07,680 --> 00:01:09,210
있습니다

22
00:01:09,210 --> 00:01:13,260
그거 앞서 말씀드렸듯이 이 컨텐츠들은 이제 후원자

23
00:01:13,260 --> 00:01:15,970
실장님 관계로 다량의 광고를 포함하고

24
00:01:15,970 --> 00:01:17,360
있을 수 있습니다

25
00:01:17,360 --> 00:01:22,020
음성 미리 양해 말씀을 드리도록 하겠습니다

26
00:01:22,020 --> 00:01:25,310
서 말이 나온 김에 뱅크샐러드 가 뭐냐

27
00:01:25,310 --> 00:01:45,530
에 대해서 후원사의 광고에 시간이 잠시 있겠습니다

28
00:01:45,530 --> 00:01:53,030
사운드 가 들리세요 갑자기

29
00:01:53,030 --> 00:02:00,390
사운드 없는 영상이 돼 버렸는데

30
00:02:00,390 --> 00:02:01,480
예 아무튼 이런 식으로

31
00:02:01,480 --> 00:02:05,160
뱅크샐러드 는 다양한 금융상품들을

32
00:02:05,160 --> 00:02:08,660
사용자가 직접 머리 아프게 비교 하지 않아도

33
00:02:08,660 --> 00:02:12,230
나에게 가장 맞는 좋은 금융상품을 골라주는 기능

34
00:02:12,230 --> 00:02:13,830
제공을 하고 있고요

35
00:02:13,830 --> 00:02:18,430
그리고 내가 가지고 있는 금융자산 들 돈 관리에 필요한 오븐

36
00:02:18,430 --> 00:02:21,280
내가 가지고 있는 거 은행 계좌 나 아니면 카드

37
00:02:21,280 --> 00:02:24,980
증권사계좌 등등 등의 다양한 금융상품들을 한데

38
00:02:24,980 --> 00:02:28,360
모아서 볼 수 있는 기능을 제공하는 서비스입니다

39
00:02:28,360 --> 00:02:34,940
저 이제 화면이 나오는 것처럼 이런 형태로 구성이 되어 있습니다

40
00:02:34,940 --> 00:02:40,440
광고시청 감사드립니다 그러면은 본격적으로 좀 발표를 시작해볼게요

41
00:02:40,440 --> 00:02:44,130
뱅크샐러드 가 왜 파이콘 후원을 했냐

42
00:02:44,130 --> 00:02:48,080
왜 스폰서로 원을 했냐 궁금하실 수 있을 것 같아

43
00:02:48,080 --> 00:02:50,180
서 저희는 대부분의 서버

44
00:02:50,180 --> 00:02:53,650
비즈니스 로직 개발을 파이썬을 이용한 하고 있습니다

45
00:02:53,650 --> 00:02:56,350
그래서 이후 장소에서도 후술하겠지만

46
00:02:56,350 --> 00:02:59,860
저희 서비스한 70% 이상이 파이썬으로

47
00:02:59,860 --> 00:03:02,530
순수하게 작성이 되어 있고요

48
00:03:02,530 --> 00:03:04,740
뒤에 가서 좀 더 자세하게 얘기해 하도록 하겠습니다

49
00:03:04,740 --> 00:03:08,910
그리고 현장에서 개발자분들이 약 20명 정도 계신데요

50
00:03:08,910 --> 00:03:10,880
그 20명 전원이 이제 파이썬

51
00:03:10,880 --> 00:03:13,770
능숙하게 사용할 계시는 회사입니다

52
00:03:13,770 --> 00:03:17,190
그리고 또한 저희 제 이름은 뱅크샐러드 재만

53
00:03:17,190 --> 00:03:19,550
저희 회사 사명을 레이니스트 예요

54
00:03:19,550 --> 00:03:22,360
레이니스트 깃허브 닷컴을 들어가 보시면

55
00:03:22,360 --> 00:03:26,130
저희가 파이썬 관련된 이제 작지만 소소하지만

56
00:03:26,130 --> 00:03:29,740
유용한 소스들을 몇 개 운영하고 있습니다

57
00:03:29,740 --> 00:03:31,660
그리고 저희가 와 만드는 순서

58
00:03:31,660 --> 00:03:34,070
술만 아니라 파이썬 생태계

59
00:03:34,070 --> 00:03:37,250
전반적으로 많이 사용되는 라이브러리들 뭐예요 HP

60
00:03:37,250 --> 00:03:41,130
나 더 생각이 안 나 그런 라이브러리들

61
00:03:41,130 --> 00:03:44,100
저희가 회사 차원에서 기여를 하고

62
00:03:44,100 --> 00:03:45,890
기회를 한번 있기 때문에

63
00:03:45,890 --> 00:03:49,090
뱅크샐러드 가 이번에 파이콘 후원을 하게 되었습니다

64
00:03:49,090 --> 00:03:51,580
오늘 발표는 이런 내용을 다루려고 해요

65
00:03:51,580 --> 00:03:55,620
제가 밟혀서 프로필을 소개하면서도 말씀을 드렸지만

66
00:03:55,620 --> 00:03:57,500
뱅크 초기에 부터

67
00:03:57,500 --> 00:04:00,780
어떤 기술과 관련된 의사결정 들을 내려 왔었는지

68
00:04:00,780 --> 00:04:05,750
그거를 조금 에피소드 단위로 짤막짤막하게 공유를 드리면서

69
00:04:05,750 --> 00:04:08,770
지금 돌이켜 보니 어떤 것 좀 잘 선택

70
00:04:08,770 --> 00:04:12,070
어떤 거는 다시 돌아간다면 이렇게 생각을 할 것 같다

71
00:04:12,070 --> 00:04:13,750
라는 저의 어떤 견에

72
00:04:13,750 --> 00:04:16,640
그리고 저희 회사의 견해를 좀 말씀을 드리려고 하고요

73
00:04:16,640 --> 00:04:18,240
그리고 그 과정에서 어쩌다

74
00:04:18,240 --> 00:04:21,790
고르게 된 파이썬을 왜 지금까지도 잘 쓰고 있는지

75
00:04:21,790 --> 00:04:23,780
일요일 좀 설명을 하고 싶습니다

76
00:04:23,780 --> 00:04:26,040
그리고 현재 지금의 뱅크샐러드

77
00:04:26,040 --> 00:04:27,310
는 그럼 파이썬을 어디에

78
00:04:27,310 --> 00:04:28,830
어떻게 쓰고 있는지를

79
00:04:28,830 --> 00:04:32,450
아주 간단하게 좀 소개를 하려고 합니다

80
00:04:32,450 --> 00:04:35,060
약간 타임머신 컨셉으로 구성을 해 봤어요

81
00:04:35,060 --> 00:04:38,240
이제 약 4년 전 이 2015년

82
00:04:38,240 --> 00:04:40,300
썰을 풀도록 하겠습니다

83
00:04:40,300 --> 00:04:43,050
처음에 2015년에 뱅크샐러드

84
00:04:43,050 --> 00:04:44,830
이제 사람들이 모였을 때

85
00:04:44,830 --> 00:04:47,610
뱅크샐러드 하는 거 만들려고 사람들이 모였을 때

86
00:04:47,610 --> 00:04:49,430
약 여섯 명 정도가 있었고

87
00:04:49,430 --> 00:04:51,520
개발자가 2 정도 있었습니다

88
00:04:51,520 --> 00:04:54,740
서울이 뭘 만들지 라고 얘기를 하다가

89
00:04:54,740 --> 00:04:56,520
이런 거 만들어 보면 어떨까 라고 해서

90
00:04:56,520 --> 00:04:58,790
카드 카드를 추천하는 서비스에 대한

91
00:04:58,790 --> 00:04:59,970
아이디어가 나왔어요

92
00:04:59,970 --> 00:05:01,500
우측에 화면이 저희 현장

93
00:05:01,500 --> 00:05:07,810
지금 당장 웹사이트의 기능을 샷을 찍어 온 거거든요

94
00:05:07,810 --> 00:05:11,080
그래서 이 카드 추천 서비스는 뭐냐 라고 하면은

95
00:05:11,080 --> 00:05:12,720
내가 원하는 카드의 종류

96
00:05:12,720 --> 00:05:15,040
같은 거를 필터로 입력을 할 수 있고요

97
00:05:15,040 --> 00:05:16,530
그리고 내가 한 달에

98
00:05:16,530 --> 00:05:19,610
예를 들면 스타벅스에 5만 원 정도 쓰고

99
00:05:19,610 --> 00:05:21,900
대중교통에 10만 원 정도 쓰고

100
00:05:21,900 --> 00:05:23,380
이런 내가 좀 알고 있는

101
00:05:23,380 --> 00:05:27,420
나의 어떤 소비패턴 들을 직접 매뉴얼 하게 인풋을 넣으면

102
00:05:27,420 --> 00:05:31,460
그걸 바탕으로 카드대회 실제로 계산을 하는 거예요

103
00:05:31,460 --> 00:05:34,230
아 예를 들면은 뭐 스타벅스

104
00:05:34,230 --> 00:05:38,760
10% 할인 카드가 있으면 아주 간단하게 얘기해서

105
00:05:38,760 --> 00:05:40,110
원래 5만 원 정도 쓰면은

106
00:05:40,110 --> 00:05:42,110
월에 5,000원 정도 혜택을 받는 거 잖아요

107
00:05:42,110 --> 00:05:43,740
그래서 이런 식으로 계산을 해서

108
00:05:43,740 --> 00:05:45,680
가장 정확한 카드를 추천해

109
00:05:45,680 --> 00:05:48,480
주면 어떨까 라고 생각을 하게 되었습니다

110
00:05:48,480 --> 00:05:50,090
그래서 이런 아이디어를 가지고

111
00:05:50,090 --> 00:05:51,480
저희가 이런 사무실

112
00:05:51,480 --> 00:05:54,750
한번 만들어 보자 라고 결정을 했는데

113
00:05:54,750 --> 00:05:56,850
당시에 개발자가 2명이 없고

114
00:05:56,850 --> 00:06:01,340
저기 개발자들은 처음 만나서 어색한사이 갔어요

115
00:06:01,340 --> 00:06:05,220
파이썬 좋아하세요 안에 뭐 뭐 좋아하세요

116
00:06:05,220 --> 00:06:08,070
내가 이런 식으로 어색한 시간을 보냈고요

117
00:06:08,070 --> 00:06:09,780
그래서 당신 우연히 모임

118
00:06:09,780 --> 00:06:12,720
개발자 두 명이 둘 다 파이썬을 쓰고 있었고

119
00:06:12,720 --> 00:06:14,880
둘 다 좀 좋아했었어요

120
00:06:14,880 --> 00:06:18,080
그래서 이제 파이썬을 고르게 됐는데

121
00:06:18,080 --> 00:06:21,670
당시에 그냥 생각은 뭐 이런 생각까지 아니었지만

122
00:06:21,670 --> 00:06:26,130
지금 생각해보면 언어를 잘못 골라서 서비스 잘 안 돼서

123
00:06:26,130 --> 00:06:30,340
스타트업이 말을 확률과 그냥 서비스를 잘 못 만들어

124
00:06:30,340 --> 00:06:33,740
사용자들이 안 쓴 서비스를 만들어서 망할 확률 따져

125
00:06:33,740 --> 00:06:36,010
보면은 확진자 후자가 높았던 거 같아요

126
00:06:36,010 --> 00:06:39,200
그래서 그냥 뭐 파이썬 때문에 막 난리가 있겠어

127
00:06:39,200 --> 00:06:43,170
라는 생각으로 그냥 저희가 편한 언어 임파서블 골라

128
00:06:43,170 --> 00:06:46,610
그래서 이렇게 이제 쪼끔 친해지는 거야

129
00:06:46,610 --> 00:06:48,400
그러면 어떤 써버리면 그럼 안 될까요

130
00:06:48,400 --> 00:06:49,900
혹은 어떤 식으로 만들까요

131
00:06:49,900 --> 00:06:51,900
에 대해서 얘기를 하게 시작했어요

132
00:06:51,900 --> 00:06:53,740
우선은 저기 말고

133
00:06:53,740 --> 00:06:56,990
다른 함께 일하셨던 개발자 보니까

134
00:06:56,990 --> 00:07:00,080
잔고를 좀 많이 익숙하게 쓰시는 분이었어요

135
00:07:00,080 --> 00:07:02,340
그래서 잔고로 우리 뚝딱 한번 만들어 보자

136
00:07:02,340 --> 00:07:05,500
그래서 간단하게 프로토타이핑을 좀 해 봤으면 좋겠다 라고

137
00:07:05,500 --> 00:07:08,990
얘기를 해 주셔서 그러면 장 보러 한번 만들어 봅시다

138
00:07:08,990 --> 00:07:11,390
결정을 하고 상도로

139
00:07:11,390 --> 00:07:13,830
카드 추천을 만들기 시작을 했습니다

140
00:07:13,830 --> 00:07:15,680
근데 당시에 저희 데이터베이스

141
00:07:15,680 --> 00:07:18,650
상해 카드가 2천 개 정도가 있었고

142
00:07:18,650 --> 00:07:20,280
정확하게는 기억이 안나지만

143
00:07:20,280 --> 00:07:21,610
2,000개 카드 혜택

144
00:07:21,610 --> 00:07:25,880
데이터가 한 20만 개에서 30만 개 정도가 카드 중에

145
00:07:25,880 --> 00:07:28,840
이제 경우의 수를 고려해야 되는 막 카드들도 있다 보니까

146
00:07:28,840 --> 00:07:30,640
실제로 저희가 불러 와야 되는데

147
00:07:30,640 --> 00:07:31,350
인터넷이 수는 2

148
00:07:31,350 --> 00:07:33,110
자막 100만 100만 개가 됐었어요

149
00:07:33,110 --> 00:07:36,320
지금보다 카드 숫자근 절반 정도밖에 안 되는 데이터

150
00:07:36,320 --> 00:07:39,070
양 임에도 불구하고 실제로는 처리해야 되는데

151
00:07:39,070 --> 00:07:40,620
인터넷이 안 왔습니다

152
00:07:40,620 --> 00:07:45,300
그래서 저희가 첫 번째 장소로 만들었던 토탈 배웠던 거는

153
00:07:45,300 --> 00:07:47,820
카드 추천을 받으려고 만들었는데

154
00:07:47,820 --> 00:07:50,860
카드 데이터를 불러 추천을 못 했어요

155
00:07:50,860 --> 00:07:55,140
그래서 아 이 문제는 저희는 되게 못 복잡한 알고리즘

156
00:07:55,140 --> 00:07:57,470
내주는 수학 연산에 문재인 줄 알았는데

157
00:07:57,470 --> 00:08:00,250
우선 엔지니어링 적으로 좀 해결해야 되는 거는

158
00:08:00,250 --> 00:08:01,350
어떻게 하면 DB

159
00:08:01,350 --> 00:08:04,530
코를 많이 줄을 거냐 이 구조로 먼저 만들어 그랬구나

160
00:08:04,530 --> 00:08:06,020
나는 걸 아주 간단한

161
00:08:06,020 --> 00:08:08,310
프로토타이핑을 통해서 알게 되었습니다

162
00:08:08,310 --> 00:08:11,520
그래서 DB 문제를 해결하기 위해서

163
00:08:11,520 --> 00:08:14,470
디비에서 늘 데이터를 가져오는 게 아니라

164
00:08:14,470 --> 00:08:16,960
카드 혜택은 생각해 보니까

165
00:08:16,960 --> 00:08:19,180
한 달에 한 번 정도 바뀔까

166
00:08:19,180 --> 00:08:21,410
하는 유형의 데이터 했어요

167
00:08:21,410 --> 00:08:23,970
어떤 게시판에 글 처럼 자주 수정도 일어나라고

168
00:08:23,970 --> 00:08:25,090
코멘트가 달리고

169
00:08:25,090 --> 00:08:27,900
한형서 에 데이터가 아니라 한번 있어요

170
00:08:27,900 --> 00:08:32,370
금융사에서 혜택을 보시를 하고 나면 뭐 내 잘 아시죠

171
00:08:32,370 --> 00:08:35,510
네 그런 과정을 통해서 혜택이 변경되는데

172
00:08:35,510 --> 00:08:38,450
좀 시간이 걸리는 형태로 데이터 갔기 때문에

173
00:08:38,450 --> 00:08:39,980
꼭 데이터를 실시간으로

174
00:08:39,980 --> 00:08:42,630
불러 와 하겠다는 의지가 많이 없었어요

175
00:08:42,630 --> 00:08:44,800
그래서 저희가 생각을 했던 게

176
00:08:44,800 --> 00:08:46,690
우리는 일단 어떻게

177
00:08:46,690 --> 00:08:49,180
카드의 혜택을 계산할 지도 모르는데

178
00:08:49,180 --> 00:08:51,320
카드를 불러오는방법 또 모르니

179
00:08:51,320 --> 00:08:55,100
카드를 불러 오는 거를 굉장히 간다는 형태로 만들어서

180
00:08:55,100 --> 00:08:57,780
어떻게 하면 카드의 혜택을 계산할 수 있을까

181
00:08:57,780 --> 00:08:59,760
라는 문제 좀 집중을 해 보자

182
00:08:59,760 --> 00:09:02,160
내가 고은 오늘 했습니다

183
00:09:02,160 --> 00:09:03,970
그래서 바로 결심을 했던 게

184
00:09:03,970 --> 00:09:08,440
그럼 디비에서 더 이상 카드 데이터를 부르지 말고

185
00:09:08,440 --> 00:09:11,420
서버가 애플리케이션이 처음에 떴을 때

186
00:09:11,420 --> 00:09:14,480
딱 한 번만 최초의 모든 데이터베이스에서

187
00:09:14,480 --> 00:09:17,920
데이터를 가져온 다음에 그림 메모리에 띄우자

188
00:09:17,920 --> 00:09:20,300
그걸 캐시용 새로 저장을 해서

189
00:09:20,300 --> 00:09:22,660
매번 캐시에 접근할 수 있도록 하자

190
00:09:22,660 --> 00:09:25,070
이러한 여러 아이디어들이 있었어요

191
00:09:25,070 --> 00:09:26,450
집적 메뉴얼 하게

192
00:09:26,450 --> 00:09:29,480
rdbms 에서 계속 데이터베이스를 가져오는 해

193
00:09:29,480 --> 00:09:31,230
술 줄이고 다 했던 거

194
00:09:31,230 --> 00:09:33,000
내 여기에서 이제 저랑

195
00:09:33,000 --> 00:09:36,330
다른 개발자 분이랑 어떤 은 오늘 했던 점이

196
00:09:36,330 --> 00:09:38,240
레빗은 아멘 캐시 같은 걸 더워서

197
00:09:38,240 --> 00:09:42,930
그래도 조금 엔지니어 답게 이용하는 형태로 하자

198
00:09:42,930 --> 00:09:47,200
글로벌 변수 를 만드는 거는 정말 안 좋을 거 같아

199
00:09:47,200 --> 00:09:48,770
그리고 당신을 전화

200
00:09:48,770 --> 00:09:50,900
개발자 번이나 글로벌로

201
00:09:50,900 --> 00:09:54,180
이제 모든 레벨을 상수로 만들어 놓고

202
00:09:54,180 --> 00:09:57,250
이걸 데이터베이스 처럼 활용하는 거 자체가 굉장히 안지

203
00:09:57,250 --> 00:09:59,980
패턴이라는 건모두가 인지를 하고 있었어요

204
00:09:59,980 --> 00:10:03,400
그런데 과연 이 안티패턴 때문에만 할까

205
00:10:03,400 --> 00:10:07,300
아니면은 우리가 이 안티 패턴을 피하고자

206
00:10:07,300 --> 00:10:09,730
이런 실시간으로 데이터를 처리하는 거야

207
00:10:09,730 --> 00:10:12,880
굉장히 집중을 해서 한 두 달을 말리는 게

208
00:10:12,880 --> 00:10:18,680
우리의 상황에 만나 당신은 저희가 마땅히 매출도 없고

209
00:10:18,680 --> 00:10:20,140
그냥 이제 뭔가 잘해 보자

210
00:10:20,140 --> 00:10:22,740
뭐 하던 사람들이 모여 있던 상황이기 때문에

211
00:10:22,740 --> 00:10:25,180
과연 이 안티패턴 다음에 우리 서비스가 잘 안 될까

212
00:10:25,180 --> 00:10:27,510
라는 생각을 많이 했던 거 같아요

213
00:10:27,510 --> 00:10:29,770
그래서 일단은 이 문제를 굉장히 간단하게

214
00:10:29,770 --> 00:10:33,600
그리고 간소하게 바꾸기 위해서 안지 패턴이며

215
00:10:33,600 --> 00:10:37,010
날마다 불구하고 글로벌한 변수를 그냥 쓰고

216
00:10:37,010 --> 00:10:40,250
아무런 데이터베이스에 접근을 하지 말자 라고

217
00:10:40,250 --> 00:10:41,590
적어 놨습니다

218
00:10:41,590 --> 00:10:44,380
그래서 하루라도 빨리 이게 동작하는지

219
00:10:44,380 --> 00:10:45,850
그리고 사용자단체 나갔을 때

220
00:10:45,850 --> 00:10:48,360
사용자들이 고양이의 소리 이해를 하는지

221
00:10:48,360 --> 00:10:50,870
혹은 좀 설득이 되는 이유가 있는지

222
00:10:50,870 --> 00:10:53,900
이런 것을 알고 싶었던 개통 거 같아요

223
00:10:53,900 --> 00:10:55,660
그래서 어떻게 결국 했냐면

224
00:10:55,660 --> 00:10:59,040
앞서 말씀드린 것처럼 서버 어플리케이션이 처음에 떴을 때

225
00:10:59,040 --> 00:11:03,620
글로벌한 딕셔너리 에다가 모든 카드 데이터를 다 집어넣었어요

226
00:11:03,620 --> 00:11:05,570
그래서 딕셔너리 키 때문에

227
00:11:05,570 --> 00:11:08,320
그냥 카드에 아이디 같은 게 키가 되는 거죠

228
00:11:08,320 --> 00:11:10,140
그래서 이런 식으로 하니까

229
00:11:10,140 --> 00:11:13,010
메모리는 엄청나게 먹는 서비스가 됐지만

230
00:11:13,010 --> 00:11:15,570
일단 한번 더 올리고 나면 접근이 빨라요

231
00:11:15,570 --> 00:11:18,260
그래서 그때부터는 아이 데이터들이 이용해서

232
00:11:18,260 --> 00:11:20,490
어떻게 하면 정확하게 계산할 수 있지

233
00:11:20,490 --> 00:11:22,920
좀 집중을 할 수 있었습니다

234
00:11:22,920 --> 00:11:27,090
그래서 어떻게 어떻게 해서 개선을 드디어 완료 했어요

235
00:11:27,090 --> 00:11:29,400
그리고 서비스를 런칭했습니다

236
00:11:29,400 --> 00:11:31,070
물론 아무에게도 알리지 않았죠

237
00:11:31,070 --> 00:11:33,520
저희 지인들에게도 알리지 않았고요

238
00:11:33,520 --> 00:11:38,340
그냥 그냥 일단 저희끼리 런칭을 하고 그날 하루 제출할수

239
00:11:38,340 --> 00:11:40,230
근데 일단 한번 출신 해 보니까

240
00:11:40,230 --> 00:11:41,720
그래도 어떻게 알고 오신 건지

241
00:11:41,720 --> 00:11:45,280
너무 궁금하게 해도 한 달에 한 100명 정도는 쓰시더라구요

242
00:11:45,280 --> 00:11:48,870
그래서 그 버전으로 사용을 해 봤을 때

243
00:11:48,870 --> 00:11:50,830
카드 하나가 되는데

244
00:11:50,830 --> 00:11:53,190
약 10% 정도가 걸렸어요

245
00:11:53,190 --> 00:11:56,660
그래서 식초를 기다리면 이제 웹사이트가 꺼졌나 아

246
00:11:56,660 --> 00:11:58,530
뭐 내 컴퓨터가 이상한 건가

247
00:11:58,530 --> 00:12:00,470
의심할 때쯤에 카드가 나와요

248
00:12:00,470 --> 00:12:03,840
그러면 있을 뭔가 추천 되는 거예요

249
00:12:03,840 --> 00:12:06,290
그래서 이제 2분들을 가지고

250
00:12:06,290 --> 00:12:08,840
어쨌든 저희가 좀 지표를 볼 수가 있었어요

251
00:12:08,840 --> 00:12:11,480
그래도 100명이랑 사용자가 그렇게

252
00:12:11,480 --> 00:12:14,050
데이터 적으로 유미 할까 싶긴 하지만

253
00:12:14,050 --> 00:12:17,680
어쨌든 100명이 들어왔을 때 몇 명이나 다음탭으로 뭐가

254
00:12:17,680 --> 00:12:21,180
혹은 몇 명이나 우리 카드 정보를 좀 더 보려고 해

255
00:12:21,180 --> 00:12:23,260
나는 지표들을 얻을 수 있겠죠

256
00:12:23,260 --> 00:12:24,930
그래서 사용자는 매우 적지만

257
00:12:24,930 --> 00:12:27,030
적어도 하루하루 무언가를 배울 수 있는

258
00:12:27,030 --> 00:12:31,310
어떤 저희가 기본적인 구조가 있었던 승현 메일 들어와서

259
00:12:31,310 --> 00:12:33,890
저희가 했던 거는 이 버튼이 이렇게 바꿔 볼까

260
00:12:33,890 --> 00:12:38,410
아니면은 뭐 보다는 좀 더 좋지 않을까요

261
00:12:38,410 --> 00:12:39,840
스타벅스로 표현하는데 뭐

262
00:12:39,840 --> 00:12:41,490
이런 식으로 되게 자잘

263
00:12:41,490 --> 00:12:45,060
자잘한 어떤 전환율을 높이고자 하는 실험들과

264
00:12:45,060 --> 00:12:50,010
그리고 수많은 이제 슬슬 함으로써 알게 된 버그들을 잡는데

265
00:12:50,010 --> 00:12:52,100
시간을 많이 썼습니다

266
00:12:52,100 --> 00:12:55,630
그래서 근데 이런 식으로 계속 조금씩 개선을 해 나가다 보니까

267
00:12:55,630 --> 00:12:57,750
비록 식초나 걸리는 그렇게 후

268
00:12:57,750 --> 00:12:59,940
엔지니어링 선물은 아니지

269
00:12:59,940 --> 00:13:01,300
어쨌든 돌아가는 카드추천

270
00:13:01,300 --> 00:13:06,440
서비스가 전환율이 조금씩 올라가게 시작했고 이 정도면은 뭔가

271
00:13:06,440 --> 00:13:08,260
우리가 사업을 해 볼 만한데

272
00:13:08,260 --> 00:13:11,620
하는 뭔가 그런 느낌이 오기 시작했어요

273
00:13:11,620 --> 00:13:13,720
숫자를 봤을 때는 이걸로

274
00:13:13,720 --> 00:13:16,850
사업을 할까 를 결정 할 만한 수치는 아니었는데

275
00:13:16,850 --> 00:13:19,120
이걸 우리가 잘 하면 계속 올릴 수 있겠다

276
00:13:19,120 --> 00:13:22,860
라는 막연한 좀 생각이 들었던 거 같습니다

277
00:13:22,860 --> 00:13:24,880
그래서 당신 그러면

278
00:13:24,880 --> 00:13:28,670
좀 더 많은 사용자들이 잘 쓸 수 있도록 만들어야겠다

279
00:13:28,670 --> 00:13:31,590
한 번에 이제 10초씩 걸리는

280
00:13:31,590 --> 00:13:35,320
어떤 연산을 하는 서버는 잘 아시겠지만

281
00:13:35,320 --> 00:13:37,790
한 달에 100명 이상 들어오게 되면은

282
00:13:37,790 --> 00:13:39,800
그냥 뻗을 거 같으면 하거든요

283
00:13:39,800 --> 00:13:42,230
완전하게 서버 에다가

284
00:13:42,230 --> 00:13:45,380
한번 요청을 보낼 때마다 10초씩 걸리는 서버는

285
00:13:45,380 --> 00:13:47,680
너무 너무 불안정하고 너무 운영

286
00:13:47,680 --> 00:13:49,790
비용이 많이 드는 서버입니다

287
00:13:49,790 --> 00:13:51,780
그래서 어떻게 하면은

288
00:13:51,780 --> 00:13:54,310
성령을 빨리 될 수 있을까를 고민을 했어요

289
00:13:54,310 --> 00:13:56,220
그래서 지금 그러면 카드추천

290
00:13:56,220 --> 00:13:57,920
외식 표식이나 걸기

291
00:13:57,920 --> 00:14:00,920
20초를 얼만큼 하려 하고 있는 건지

292
00:14:00,920 --> 00:14:03,000
그걸 저희가 프로파일링을 해보니까

293
00:14:03,000 --> 00:14:05,020
디비디는 아무 문제가 아니었어요

294
00:14:05,020 --> 00:14:06,730
왜냐면 당연히 글로벌 뒤틀렸고

295
00:14:06,730 --> 00:14:09,210
그냥 뒤로 접근하면 되기 때문에

296
00:14:09,210 --> 00:14:12,100
그리고 그 결국에는 카드가 키기 때문에

297
00:14:12,100 --> 00:14:14,010
2,000개 정도밖에 안 했거든요

298
00:14:14,010 --> 00:14:16,180
그래서 어떤 데이터를 가져오고

299
00:14:16,180 --> 00:14:19,730
처리하는 부분에서는 저녁 성능에 대한 부하가 없었는데

300
00:14:19,730 --> 00:14:22,710
그 데이터를 가져왔을 때 너무 오래 걸렸어요

301
00:14:22,710 --> 00:14:25,350
그거를 저희가 계산을 해서 이 사람의 예상해

302
00:14:25,350 --> 00:14:26,790
택배 말을 안 하는 데까지

303
00:14:26,790 --> 00:14:28,540
너무 시간이 오래 걸렸습니다

304
00:14:28,540 --> 00:14:31,740
그래서 우리의 연산 형태를 좀 편히 그래야겠다

305
00:14:31,740 --> 00:14:34,220
어떻게 하면 이 알고리즘을 좀 더 낮게 만들 수 있을까

306
00:14:34,220 --> 00:14:35,500
고민을 해 봤어요

307
00:14:35,500 --> 00:14:39,270
네 파이썬이 이제 좀 일반적으로 다른 언어

308
00:14:39,270 --> 00:14:41,380
드라이브에서 느리다 라고 표현하는데

309
00:14:41,380 --> 00:14:43,990
파이썬이 느린 연산의 형태는

310
00:14:43,990 --> 00:14:46,080
제가 생각했던 크게 두가지가 있는 거 같아요

311
00:14:46,080 --> 00:14:48,810
첫 번째로는 수리 연산들이 하니까

312
00:14:48,810 --> 00:14:51,840
그냥 깡으로 어떤 숫자들을 많이 곱해야 돼

313
00:14:51,840 --> 00:14:53,880
10에 대해서 뭔가 연산을 해야 되고

314
00:14:53,880 --> 00:14:55,650
이런 유형의 연산들은 있어요

315
00:14:55,650 --> 00:14:58,780
파이썬이 아니라 파이썬으로 만들어진 라이브러리들을 이용해서

316
00:14:58,780 --> 00:15:00,770
10년 넘은 파이 넘버 같은 걸 이용 하면은

317
00:15:00,770 --> 00:15:02,900
그 성능을 많이 해결할 수 있어요

318
00:15:02,900 --> 00:15:05,360
근데 다만 저희가 지금 만들고 있던 카드

319
00:15:05,360 --> 00:15:08,430
추천 서비스 같은 경우에는 순수하게 다이나믹프로그래밍

320
00:15:08,430 --> 00:15:09,670
그러니까 동적 계획법

321
00:15:09,670 --> 00:15:14,100
정말 깡으로 많이 돌아 가야 되는 형태로

322
00:15:14,100 --> 00:15:16,010
만들어진 알고리즘이 없기 때문에

323
00:15:16,010 --> 00:15:19,040
이건 어떤 수리연산 라이브러리들을 이용함으로써

324
00:15:19,040 --> 00:15:22,860
뭔가 성능이 빨라질 수는 없는 평생을 문제였어요

325
00:15:22,860 --> 00:15:26,340
그렇다 보니까 그냥 좀 더 알고리즘을 잘 만들어서

326
00:15:26,340 --> 00:15:28,240
연산 횟수를 줄여야 했고

327
00:15:28,240 --> 00:15:31,390
그냥 깡으로 언어의 성능이 좋아 만했어요

328
00:15:31,390 --> 00:15:34,340
이런 유형의 문제들을 풀 다 보니까

329
00:15:34,340 --> 00:15:36,180
두 가지가 있었어요

330
00:15:36,180 --> 00:15:38,450
첫 번째로 알고리즘을 우리가 잘못한 거

331
00:15:38,450 --> 00:15:40,580
아닐까 라고 했을 때

332
00:15:40,580 --> 00:15:43,470
당시 저희 회사에 계셨던

333
00:15:43,470 --> 00:15:46,920
굉장히 스펙의 알고리즘 전문 가게 때문에

334
00:15:46,920 --> 00:15:48,510
2분은 범인이 아니다

335
00:15:48,510 --> 00:15:50,080
분명 범인의 다른 것이다

336
00:15:50,080 --> 00:15:52,050
그래서 파이썬을 믿은 나를

337
00:15:52,050 --> 00:15:54,970
믿은 우리 모두의 책임이다 라고 판단을 하고

338
00:15:54,970 --> 00:15:57,390
저희가 어떻게 할지를 고민하게 하겠습니다

339
00:15:57,390 --> 00:15:59,900
일단 이걸로 사업을 해보기로 마음을 먹었기 때문에

340
00:15:59,900 --> 00:16:02,760
어떻게든 스케일에 문제는 해결 했어요 안 했어요

341
00:16:02,760 --> 00:16:05,640
그래서 저희가 가장 쉽게 생각했던 방법은

342
00:16:05,640 --> 00:16:09,520
그럼 우리 파이썬으로 한번 잡았으니까 다른 언어로 다시 찾아

343
00:16:09,520 --> 00:16:13,340
그런데 당시에 저와 개발자 두 명

344
00:16:13,340 --> 00:16:14,990
파이썬 오후에는 파이썬 만큼

345
00:16:14,990 --> 00:16:17,010
능숙하게 쓰는 언어가 또 없었어요

346
00:16:17,010 --> 00:16:20,450
그리고 저희 둘 다 어떤 알고리즘대회 출신 하거나

347
00:16:20,450 --> 00:16:23,460
알고리즘문제 숙한 사람들이 아니었기때문에

348
00:16:23,460 --> 00:16:26,490
과연 이 복잡한 알고리즘을 처음 써보는 언덕으로

349
00:16:26,490 --> 00:16:30,270
잘 표현을 할 수 있을까 가만히 좀 두려웠어요

350
00:16:30,270 --> 00:16:34,920
그런 환경에서 다른 언어들을 고려를 할 경우에는

351
00:16:34,920 --> 00:16:37,930
저희가 뭔가 앞으로 나와 하는 데까지

352
00:16:37,930 --> 00:16:41,090
최소 세 달에 보폭은 필요한 거예요

353
00:16:41,090 --> 00:16:43,530
그리고 암 3달러 추정을 했지만

354
00:16:43,530 --> 00:16:45,580
보통 추정을 두 배 정도 틀리니까 1

355
00:16:45,580 --> 00:16:47,710
6 달에 시간이 필요할 수도 있겠죠

356
00:16:47,710 --> 00:16:48,790
그 다음에는 이제

357
00:16:48,790 --> 00:16:51,650
저의 2015년에 결과가 굉장히 시리랑

358
00:16:51,650 --> 00:16:53,080
달라졌을 거 같아요

359
00:16:53,080 --> 00:16:56,570
그래서 저희가 이런저런 방법대로 알아보면서

360
00:16:56,570 --> 00:16:59,010
최대한 파이썬을 사용하는 방향으로

361
00:16:59,010 --> 00:17:01,140
계속 어떤 방법을 찾았습니다

362
00:17:01,140 --> 00:17:03,810
그러다가 저희가 시도를 한 게 다 있어 넣었어요

363
00:17:03,810 --> 00:17:07,420
파이썬을 아주 간단하게 설명을 하면은

364
00:17:07,420 --> 00:17:09,060
제 설명회 좀 어려운데

365
00:17:09,060 --> 00:17:12,840
coc 랑 같은 걸 이용해서

366
00:17:12,840 --> 00:17:18,180
파이썬을 네퓨어 파이썬으로 되어 있는 많은 영화글

367
00:17:18,180 --> 00:17:20,760
이제 시계바늘을 이렇게 좀 쉽게 바인딩 하도록

368
00:17:20,760 --> 00:17:23,390
도와주는 라이브러리가 파이썬 이고요

369
00:17:23,390 --> 00:17:25,660
약간 하나의 언어라고 생각을 하셔도 됩니다

370
00:17:25,660 --> 00:17:27,810
특정한 이제 문법들이 존재를

371
00:17:27,810 --> 00:17:29,730
그게 파이썬과 크게 다르진 않아요

372
00:17:29,730 --> 00:17:32,140
근데 한가지 굉장히 명확한 특징은

373
00:17:32,140 --> 00:17:33,670
내가 계산하려고 하는 대상을

374
00:17:33,670 --> 00:17:35,640
타입을 명확하게 지정을 할 수 있어요

375
00:17:35,640 --> 00:17:38,800
그럼으로써 타입추론 해서 오늘 오버해도 드림 아니야

376
00:17:38,800 --> 00:17:40,990
추운 방식으로 고양이가 나온 합니다

377
00:17:40,990 --> 00:17:43,920
그래서 오늘 저희 가면 적용을 해봤고요

378
00:17:43,920 --> 00:17:47,580
기본적으로 파이썬 코드 가사에서는 그대로 돌아가요

379
00:17:47,580 --> 00:17:50,460
그냥 아무것도 안 해도 싸이 선으로 돌아 갑니다

380
00:17:50,460 --> 00:17:51,860
그리고 아무것도 안 하고

381
00:17:51,860 --> 00:17:54,680
사이선 으로 돌리기 만해도 조금 빨라져요

382
00:17:54,680 --> 00:17:57,060
그래서 한 20% 정도 빨리 치니까 아

383
00:17:57,060 --> 00:17:58,220
이것 좀 될 거 같은데

384
00:17:58,220 --> 00:17:59,750
한번 봐 볼까 라고 해서

385
00:17:59,750 --> 00:18:05,240
저희가 갑자기 싸이 서울 공부하기 핵심이 되는 한

386
00:18:05,240 --> 00:18:06,950
번 카드를 추천 할 때마다 정말

387
00:18:06,950 --> 00:18:09,220
반복적으로 많이 실행되는 연산들을

388
00:18:09,220 --> 00:18:11,600
파이썬으로 옮겨 오는 거를 먼저 시작했어요

389
00:18:11,600 --> 00:18:15,240
그리고 파이썬으로 옮겼을 때도 저희가 원하는 만큼

390
00:18:15,240 --> 00:18:19,400
성능이 올라 오지 않는 것들은 직접 해당 함수 하나만

391
00:18:19,400 --> 00:18:22,000
씨 로 다시 자 가지고 씨 바인딩을 하거나

392
00:18:22,000 --> 00:18:25,620
이런 식으로 그냥 파이썬을 최대한 형태로 유지하면서

393
00:18:25,620 --> 00:18:27,950
어떻게 하면 부분적으로 성능을 올릴 수 있을까에

394
00:18:27,950 --> 00:18:29,720
많이 집중을 해

395
00:18:29,720 --> 00:18:32,260
그래서 저희가 얻은 거

396
00:18:32,260 --> 00:18:35,360
원래 10초에서 11초 걸리던 카드 추천이 평균적으로

397
00:18:35,360 --> 00:18:37,270
4초 정도로 많이 떨어졌구요

398
00:18:37,270 --> 00:18:39,640
이제 복잡하지 않은 카드들에 대해서는

399
00:18:39,640 --> 00:18:42,250
굉장히 빨리 값들이 나오기 시작했어요

400
00:18:42,250 --> 00:18:44,440
엄마 이거는 사용자가 그게 저거 때문에

401
00:18:44,440 --> 00:18:46,560
가능했던 수치 없을 수도 있을 것 같아요

402
00:18:46,560 --> 00:18:50,650
근데 어쨌든 저희가 원했던 한번 추천하는데

403
00:18:50,650 --> 00:18:54,250
10초 10초 걸리는 것보다는 훨씬 압도적으로 빨라지고

404
00:18:54,250 --> 00:18:56,860
훨씬 운영비용이 많이 나아진 거 같고

405
00:18:56,860 --> 00:19:00,640
그래서 안정적인 서비스 는 여전히 어려울 순 있겠지만

406
00:19:00,640 --> 00:19:04,860
그래도 이 정도면 서비스를 사람들한테 참을만한 UX 를 제공하고

407
00:19:04,860 --> 00:19:06,790
참을 만해 탭들을 주면은

408
00:19:06,790 --> 00:19:10,140
해볼만 하겠다라는 저희가 판단을 좀 할 수 있었습니다

409
00:19:10,140 --> 00:19:13,970
그리고 다른 언어를 올랐을 때 비해서 아마도 이건 추측이지만

410
00:19:13,970 --> 00:19:17,280
훨씬 더 빨리 그 정답을 얻을 수 있었던 거 같아요

411
00:19:17,280 --> 00:19:21,610
그래서 저희가 이런 식으로 만들어진 카드 추천 서비스를 바탕으로

412
00:19:21,610 --> 00:19:23,940
마케팅이라는 걸 드디어 시작을 해 봤습니다

413
00:19:23,940 --> 00:19:28,100
원래는 이제 약간 부끄러워서 지인들에게도 잘 안 하고 다녔었거든요

414
00:19:28,100 --> 00:19:29,110
요새 뭐 해 뭐 이러면

415
00:19:29,110 --> 00:19:31,120
그냥 뭐 프로그램이 공부해 뭐

416
00:19:31,120 --> 00:19:33,220
이런 식으로 얘기하고 다 했었는데

417
00:19:33,220 --> 00:19:35,280
지인들에게 서비스가 나왔으니까

418
00:19:35,280 --> 00:19:38,530
한번 좀 써 봐 달라 라는 식으로 좀 홍보도 하고

419
00:19:38,530 --> 00:19:39,920
그리고 실제로 마케터 본드

420
00:19:39,920 --> 00:19:42,580
우리 처음이자 입사를 같이 하시면서

421
00:19:42,580 --> 00:19:44,330
키워드마케팅 같은 것도 시작을 하면서

422
00:19:44,330 --> 00:19:46,660
마케팅 자체를 시작을 해 봤던 거 같습니다

423
00:19:46,660 --> 00:19:48,490
그리고 이 마케팅을 통해서

424
00:19:48,490 --> 00:19:51,490
아주 최초의 작은 매출이 발생을 했고

425
00:19:51,490 --> 00:19:54,880
저희가 갖고 오면 서비스지표 발생했다

426
00:19:54,880 --> 00:19:57,400
매출도 를 바탕으로 저희 가능성을 좀 믿어 주고

427
00:19:57,400 --> 00:20:00,660
첫 번째 투자를 좀 위치를 알 수 있었습니다

428
00:20:00,660 --> 00:20:03,420
그래서 2015년을 지금 돌이켜보면서

429
00:20:03,420 --> 00:20:05,900
제가 요약을 하고 싶었던 내용들은

430
00:20:05,900 --> 00:20:08,830
이렇게 이한국 중인 거 같아요

431
00:20:08,830 --> 00:20:13,580
첫 번째로 저희가 당시에도 말씀드렸듯이

432
00:20:13,580 --> 00:20:16,940
뭐 글로벌로 디트를 선언해서 그걸 뒤로 쓰는 게 안티패턴

433
00:20:16,940 --> 00:20:18,360
일하는 건 무조건 알고 있었고

434
00:20:18,360 --> 00:20:20,150
더 좋은 방법들은 어떤 건지

435
00:20:20,150 --> 00:20:21,850
대략적 자기가 만들잖아

436
00:20:21,850 --> 00:20:24,340
아줌마 방법들은 알고 있었습니다

437
00:20:24,340 --> 00:20:27,660
안정적이고 성능이 좋은 식으로 서비스를 만드는 방법

438
00:20:27,660 --> 00:20:29,430
들은 존재해요

439
00:20:29,430 --> 00:20:31,230
그리고 그걸 찾을 수 있어요

440
00:20:31,230 --> 00:20:33,590
혹은 다른 사람들에게 들을 수 있고

441
00:20:33,590 --> 00:20:35,680
그렇다고 해서 이게 싶다는 건 아닌데

442
00:20:35,680 --> 00:20:39,050
비교적 그 방식이 명확하다고 저희는 생각을 했어요

443
00:20:39,050 --> 00:20:40,530
왜냐면 적어도 답은 있고

444
00:20:40,530 --> 00:20:42,560
그닥 대로 하는 게 굉장히 어려우니까

445
00:20:42,560 --> 00:20:45,420
열면 전교 1등을 하는 방법은 되게 막 하잖아

446
00:20:45,420 --> 00:20:47,220
시험에서 100점을 맞으면 돼요

447
00:20:47,220 --> 00:20:49,060
근데 그게 굉장히 어려울 뿐

448
00:20:49,060 --> 00:20:51,010
저희는 이런 문자라고 여겼는데

449
00:20:51,010 --> 00:20:54,080
반면에 사용자들이 쓰게 만드는 서비스

450
00:20:54,080 --> 00:20:54,860
어떻게 하면 카드

451
00:20:54,860 --> 00:20:57,470
추천을 많이 받을 수 있게 할까라는 문제는

452
00:20:57,470 --> 00:20:59,100
누구한테 물어볼 수도 없었고

453
00:20:59,100 --> 00:21:00,680
명확한 방식이 있지 않았어요

454
00:21:00,680 --> 00:21:04,100
그리고 저희는 우리가 앞으로 헤쳐 나가야 되는 문자 들

455
00:21:04,100 --> 00:21:06,040
혹은 우리가 만드는 제품이라는게

456
00:21:06,040 --> 00:21:08,730
결국 어떤 풀고 좋아하는 문제유형은

457
00:21:08,730 --> 00:21:11,240
정말 좀 답이 없는 불확실성이 큰 문자 드리고

458
00:21:11,240 --> 00:21:13,340
나 라는 거를 2015년 통해서

459
00:21:13,340 --> 00:21:16,030
좀 많이 조직적으로 알게 됐다

460
00:21:16,030 --> 00:21:18,670
그래서 결국에는 우리가 앞으로 더 나가기 위해서

461
00:21:18,670 --> 00:21:20,860
누리한테 필요한 전략은 더듬더듬

462
00:21:20,860 --> 00:21:24,970
방향을 조정하면서 가려는 접근을 해야 되고

463
00:21:24,970 --> 00:21:28,120
그렇다면 어떻게 하면 방향을 빨리 조정할 수 있을까

464
00:21:28,120 --> 00:21:30,690
어떻게 하면 우리가 잘못된 방향으로 갔을 때

465
00:21:30,690 --> 00:21:32,290
그 방은 아니다라는 휘발유

466
00:21:32,290 --> 00:21:36,040
빨리 받을 수 있을까 가 앞으로 저희에게 어떤 개발

467
00:21:36,040 --> 00:21:39,900
의사결정에 굉장히 큰 100% 작용을 했던 거 같습니다

468
00:21:39,900 --> 00:21:41,800
2016년으로 넘어와서

469
00:21:41,800 --> 00:21:44,610
이제 카드추천 서비스에는 저희가 만

470
00:21:44,610 --> 00:21:46,620
그게 아직 불안정한 상태일 지언정

471
00:21:46,620 --> 00:21:49,070
저희가 계속해서 실험들을 해 볼 수 있었어요

472
00:21:49,070 --> 00:21:53,230
근데 이제 사람이 당연히 비즈니스가 욕심은 끝이 없고

473
00:21:53,230 --> 00:21:56,560
사람들이 다 들어왔을 때 카드 추천을 받기 시작하고

474
00:21:56,560 --> 00:21:57,810
어느 정도 매출이 나니까

475
00:21:57,810 --> 00:22:00,900
더 많은 사람들이 카드 추천을 받았으면 하는 거죠

476
00:22:00,900 --> 00:22:03,100
그러면 그런 방법이 뭐가 있을까

477
00:22:03,100 --> 00:22:07,190
고민을 해 봤을 때 들어오는 사람들도 눌러야 되고요

478
00:22:07,190 --> 00:22:09,010
들어왔을 때 카드를

479
00:22:09,010 --> 00:22:12,190
최종적으로 발급받는 사람들까지 많아요

480
00:22:12,190 --> 00:22:16,420
양과 전환 연락처를 높이는 게 저희 어떤 고민이었는데

481
00:22:16,420 --> 00:22:18,020
당신의의미이자연 약간

482
00:22:18,020 --> 00:22:20,610
실리콘밸리에서 이 단어가 유행 했어요

483
00:22:20,610 --> 00:22:24,260
파괴적 혁신 파괴적 혁신

484
00:22:24,260 --> 00:22:28,660
뭘까를 고민을 해 보다가 더이상 카드를 받지 말게 하자

485
00:22:28,660 --> 00:22:30,870
사람들이 카드를 찾지않아도

486
00:22:30,870 --> 00:22:33,190
카드를 추천할 수 있는 환경을 만들자

487
00:22:33,190 --> 00:22:34,410
우리가 뭐 이런 식으로

488
00:22:34,410 --> 00:22:36,840
갑자기 파괴적인 아이디어가 나왔어

489
00:22:36,840 --> 00:22:38,360
그래 사람들의 소비

490
00:22:38,360 --> 00:22:41,490
데이터를 바탕으로 항상 좋은 카드가 이미 계산대 있고

491
00:22:41,490 --> 00:22:43,450
넌 고르면 돼 약간 이런 느낌으로

492
00:22:43,450 --> 00:22:46,890
서비스를 만들어 보면 어떨까 하는 아이디어가 있었어요

493
00:22:46,890 --> 00:22:48,930
그래서 2016년에 뱅크샐러드

494
00:22:48,930 --> 00:22:50,920
앱을 만들어 보게 됩니다

495
00:22:50,920 --> 00:22:53,070
당시에는 저희가 고민했던 게 아

496
00:22:53,070 --> 00:22:55,150
그러면 사람들의 소비데이터 가 있어야

497
00:22:55,150 --> 00:22:56,850
카드혜택을 계산을 하는데

498
00:22:56,850 --> 00:22:59,500
소비데이터 어떻게 어째 사람들한테 입력하라

499
00:22:59,500 --> 00:23:02,780
그러면 누가 입력을 할까 고민을 했던 거죠

500
00:23:02,780 --> 00:23:07,150
그래서 당신 다른 뭐 이런 비슷한 게 없나 하고 찾아보니까

501
00:23:07,150 --> 00:23:08,990
안드로이드 앱 스토어

502
00:23:08,990 --> 00:23:10,100
구글 플레이 스토어에서

503
00:23:10,100 --> 00:23:13,570
는 굉장히 많은 가계부 서비스들이 있었어요

504
00:23:13,570 --> 00:23:17,140
그리고 그 가격을 서비스들이 사용자들이 매뉴얼 하게

505
00:23:17,140 --> 00:23:19,550
어떤 본인의 소비로 입력할 수도 있지만

506
00:23:19,550 --> 00:23:21,470
당시에 날아오는 카드 결제

507
00:23:21,470 --> 00:23:22,710
승인 문자 같은 거

508
00:23:22,710 --> 00:23:25,160
자동으로 파싱해서 기록해주는 형태로

509
00:23:25,160 --> 00:23:27,800
가계부 서비스들이많이 있었습니다

510
00:23:27,800 --> 00:23:30,480
그래 그럼 우리도 이거 만들자

511
00:23:30,480 --> 00:23:33,180
안드로이드 기준으로 한번 만들어 보자

512
00:23:33,180 --> 00:23:34,670
ios 는 그럼 어떡하지 뭐

513
00:23:34,670 --> 00:23:36,380
이런 얘기가 당연히 나왔어요

514
00:23:36,380 --> 00:23:40,040
근데 일단 나중에 생각하자 우리 대부분 안드로이드 쓰고 있고

515
00:23:40,040 --> 00:23:44,120
우연히 그리고 뭐 안드로이드로 이거 만들어 봤는데

516
00:23:44,120 --> 00:23:45,210
잘 안 되면 ios

517
00:23:45,210 --> 00:23:48,000
개발 저도 없는데 어떻게 뽑냐

518
00:23:48,000 --> 00:23:48,950
뭐 뭐 이거 왜 또 없냐

519
00:23:48,950 --> 00:23:51,080
벌써 엄마 이런 얘기를 나왔습니다

520
00:23:51,080 --> 00:23:53,280
그래서 저희가 잘 될지 안 될지 를 전혀 모르겠다

521
00:23:53,280 --> 00:23:56,140
때문에 일단 안드로이드로 좀 만드는데

522
00:23:56,140 --> 00:23:57,230
집중을 했던 거 같아

523
00:23:57,230 --> 00:24:03,430
그리고 앱도 정말 쳐져 스펙으로 만들어서 두 달간 그냥 후다닥

524
00:24:03,430 --> 00:24:06,390
정말 개발하고 출시까지 뭐

525
00:24:06,390 --> 00:24:08,360
이제 나름의 내부 테스트도 해 보고

526
00:24:08,360 --> 00:24:10,430
그다음에 내부에서 사용하면서 조금씩 개선

527
00:24:10,430 --> 00:24:12,510
적들을 거치면서 7시까지는 거기

528
00:24:12,510 --> 00:24:14,810
한 세 달 정도 걸렸던 것 같더라고요

529
00:24:14,810 --> 00:24:17,480
그래서 뭔가 문자를 읽어 와서

530
00:24:17,480 --> 00:24:19,820
나의 지출내역을 깔끔하고

531
00:24:19,820 --> 00:24:21,880
뭔가 예쁘게 보여 주는 앱을 만드는 데

532
00:24:21,880 --> 00:24:22,720
성공했다고 한다

533
00:24:22,720 --> 00:24:25,080
그랬어요 그리고 이제 지금 2위

534
00:24:25,080 --> 00:24:28,350
우측에 UI 가 약간 그냥 뭐 평범한데

535
00:24:28,350 --> 00:24:32,380
평이 안 돼 하실 수 있지만 당신은 2015년 이었고

536
00:24:32,380 --> 00:24:35,260
2015년에 안드로이드에서 이 정도 uit 퀄리티면 아

537
00:24:35,260 --> 00:24:38,140
정말 힙하다 약간 이런 느낌 있었거든요

538
00:24:38,140 --> 00:24:40,470
저희는 그렇게 생각을 했습니다

539
00:24:40,470 --> 00:24:43,330
근데 레고 알게 된 거는 첫 번째로

540
00:24:43,330 --> 00:24:46,860
앱을 정말 잘 사용하시는 어려서 분들이 있었어요

541
00:24:46,860 --> 00:24:48,190
지표를 가 보니 정말

542
00:24:48,190 --> 00:24:50,740
회의하게 쓰시는 분들이 있었는데 이 분들은

543
00:24:50,740 --> 00:24:52,870
저희 를 통해서 카드를 추천받습니다

544
00:24:52,870 --> 00:24:54,610
그리고 그 카드를 실제로 쓰고

545
00:24:54,610 --> 00:24:56,380
다시 등록해서 잘 사용하세요

546
00:24:56,380 --> 00:24:58,370
그런데 저희가 또 알게 된 거

547
00:24:58,370 --> 00:25:00,190
근데 이런 사람들이 정말 얼마 없다

548
00:25:00,190 --> 00:25:02,830
아니 거의 없다 라는 걸 알게 되었습니다

549
00:25:02,830 --> 00:25:06,070
그래서 왜 그럴까 를 생각을 해 봤는데

550
00:25:06,070 --> 00:25:09,170
저희가 애초부터 이 앱을 만들기는 기획의도와 차가

551
00:25:09,170 --> 00:25:10,520
더 많은 사람들이 카드

552
00:25:10,520 --> 00:25:14,280
추천을 받고자 했던 의도가 해서 만든 거예요

553
00:25:14,280 --> 00:25:18,050
그래서 카드를 추천하려고 만든 가계부앱

554
00:25:18,050 --> 00:25:20,350
말 같아서 좀 이상하지 않아요

555
00:25:20,350 --> 00:25:22,840
근데 이제 당신은 저희가 전화기에서

556
00:25:22,840 --> 00:25:24,480
여기에 매몰돼 있다 보니까

557
00:25:24,480 --> 00:25:28,030
이게 정말 이상한 건지 아닌지 판단을 못 했습니다

558
00:25:28,030 --> 00:25:31,560
그래서 저희는 요새 이런 기회를 공급자 중심의 하니까

559
00:25:31,560 --> 00:25:32,660
사용자 중심이 아니라

560
00:25:32,660 --> 00:25:36,380
공급자 중심의 욕심 계획이다 라고 부르고 있어요

561
00:25:36,380 --> 00:25:39,790
저희 2016년 버전이 딱 이렇게 안 왔나

562
00:25:39,790 --> 00:25:41,580
나는 거를 저희가 알게 되었습니다

563
00:25:41,580 --> 00:25:44,260
그래서 저희가 판단을 하게 된 게 1.02

564
00:25:44,260 --> 00:25:49,070
정말 만나고 나서 카드 추천은 일단 버리자

565
00:25:49,070 --> 00:25:51,840
우리 이거 너무 욕심인 거 같다 라고 판단을 했어요

566
00:25:51,840 --> 00:25:53,530
그래서 뱅크샐러드 앱에

567
00:25:53,530 --> 00:25:58,120
카드 추천이라는 기능 없는 시간이 꽤 길었습니다

568
00:25:58,120 --> 00:26:00,770
그래서 카드 추천 이거 뭐고

569
00:26:00,770 --> 00:26:02,320
이런 걸 우리가 생각하지 말고

570
00:26:02,320 --> 00:26:04,030
일단은 가계부 앱으로써

571
00:26:04,030 --> 00:26:06,500
사람들이 정말 잘 쓰는 앱을 만들자

572
00:26:06,500 --> 00:26:08,100
거기서부터 가오리가 시작해야 되는

573
00:26:08,100 --> 00:26:11,090
어떤 시작점인 거 같다 라고 판단했습니다

574
00:26:11,090 --> 00:26:15,140
그래서 그 매해 그 겨울마다 반디앤루니스

575
00:26:15,140 --> 00:26:19,930
나 이런 서점들 가 보시면은 가계부가 굉장히 많거든요

576
00:26:19,930 --> 00:26:21,790
그 오프라인 가게 부들 굉장히 많아요

577
00:26:21,790 --> 00:26:24,450
석위 것들도 맞춰 2가 보기 시작했다

578
00:26:24,450 --> 00:26:25,800
그 다음에 다른 가계부

579
00:26:25,800 --> 00:26:28,120
앱 들은 어떻게 구성이 되어 있는지

580
00:26:28,120 --> 00:26:30,740
저희도 직접 맛있어 보면서

581
00:26:30,740 --> 00:26:33,430
많은 가계부 엑셀 조사하는데 집중을 했습니다

582
00:26:33,430 --> 00:26:35,270
그리고 이제 테크크런치 나 뭐

583
00:26:35,270 --> 00:26:37,390
이런 지금은 빼

584
00:26:37,390 --> 00:26:39,380
많은 스타트업 매체들을 보면은

585
00:26:39,380 --> 00:26:41,880
너무 힙하고 멋있는 서비스를 많아보여요

586
00:26:41,880 --> 00:26:44,070
그래서 이제 이런 것들은 원천적으로 차단하는 하고

587
00:26:44,070 --> 00:26:46,100
저희가 어떻게 하면은

588
00:26:46,100 --> 00:26:48,270
정말로 좋은 가격으로

589
00:26:48,270 --> 00:26:51,770
서비스를 만들 수 있을까 를 많이 파고 들었고요

590
00:26:51,770 --> 00:26:54,980
그래서 우연히 아는 분들을 통해서

591
00:26:54,980 --> 00:26:59,270
정말로 가계부를 거의 전공한 듯한 가계부 맛있냐

592
00:26:59,270 --> 00:27:01,150
씻어 오신 분들이 있어요

593
00:27:01,150 --> 00:27:02,940
그 분들을 만나 가지고

594
00:27:02,940 --> 00:27:07,000
왜 선생님은 앱을 안 쓰신 뭐 부터 물기 시작하면서

595
00:27:07,000 --> 00:27:09,500
2분들이 원하는 가계부가 뭔지

596
00:27:09,500 --> 00:27:12,200
정말로 가계부를 많이 쓰는 분들이 원하는 게

597
00:27:12,200 --> 00:27:15,250
뭔지를 진석 만나서 좀 듣기 시작을 했고

598
00:27:15,250 --> 00:27:18,450
이때의 유저분들 30명 정도 만나 딴 거 같아요

599
00:27:18,450 --> 00:27:19,430
그래서 저희 UX

600
00:27:19,430 --> 00:27:22,270
디자이너들의 당시에 거의 하루 출근한다

601
00:27:22,270 --> 00:27:24,270
인터뷰 장소로 간다 인터뷰한다 퇴근한다

602
00:27:24,270 --> 00:27:26,160
요걸 그냥 방법이 없거든요

603
00:27:26,160 --> 00:27:28,350
그래서 정말 많은 분들의 의견을 들을 수 있었고

604
00:27:28,350 --> 00:27:30,510
감사하게도 시간을 내주셔서

605
00:27:30,510 --> 00:27:32,330
저희의 어떤 기획의 핵심이 되는

606
00:27:32,330 --> 00:27:35,360
아이디어들을 많이 쉬었던 거 같아요

607
00:27:35,360 --> 00:27:38,810
그래서 이런 사용자인터뷰 와 라면 버전 1.0 왜 망했는지

608
00:27:38,810 --> 00:27:41,120
에 대한 저희 수술을 하고 를 통해서

609
00:27:41,120 --> 00:27:44,450
이번에도 똑같이 카드결제문자 기반으로 만들고

610
00:27:44,450 --> 00:27:46,100
아예 새로운 앱을 만들다

611
00:27:46,100 --> 00:27:49,330
기존의 코드를 어떻게 고쳐 가지 거기 기획

612
00:27:49,330 --> 00:27:52,260
너무 목매이는 식으로 하지 말자 라고 판단을 해서

613
00:27:52,260 --> 00:27:55,260
당시 2016년 약간 힙하게 코틀린으로

614
00:27:55,260 --> 00:27:58,050
저희의 새로운 안드로이드 앱을 만들기 시작했고요

615
00:27:58,050 --> 00:28:00,620
물론 서버는 1.0 때 만들었던 파이썬

616
00:28:00,620 --> 00:28:03,780
계속 유지 보수 하면서 쓰기 시작을 했습니다

617
00:28:03,780 --> 00:28:05,930
이것도 마찬가지로 약채 달 정도 에서

618
00:28:05,930 --> 00:28:08,570
내 달 정도에 테스트를 거치면서

619
00:28:08,570 --> 00:28:10,370
저희가 개발 완료 했고요

620
00:28:10,370 --> 00:28:13,770
저번에 앱에서 뭔가 스펙 결혼한 건 아닌데

621
00:28:13,770 --> 00:28:15,970
저희가 한 번만 하고 나니까

622
00:28:15,970 --> 00:28:17,610
좀 많이 조심스러웠던 거 같아요

623
00:28:17,610 --> 00:28:19,750
그래서 중간중간 사용자들에게

624
00:28:19,750 --> 00:28:20,940
그리고 저희가 만났던 가게 보고

625
00:28:20,940 --> 00:28:24,390
선생님들에게 중간중간 버전을 보내드리면서 선생님

626
00:28:24,390 --> 00:28:26,050
뭐 보시게 어떻습니까 이런 식으로

627
00:28:26,050 --> 00:28:28,990
의견을 많이 구했던 거 같습니다

628
00:28:28,990 --> 00:28:32,570
그래서 2016년에 다행히 약간은 해피엔딩으로

629
00:28:32,570 --> 00:28:33,990
좀 저희는 끝났다는 거 같아요

630
00:28:33,990 --> 00:28:36,490
그래서 2016년에 한번 말아 먹고

631
00:28:36,490 --> 00:28:40,010
다시 내놓은 뱅크샐러드 앱이 꽤 괜찮은

632
00:28:40,010 --> 00:28:41,710
앱이 되었습니다

633
00:28:41,710 --> 00:28:43,440
그리고 처음부터 이렇게 했던 건 아니고요

634
00:28:43,440 --> 00:28:47,240
내놓고 왜 다 나가지 에 대해서 계속 분석을 하다 보니까

635
00:28:47,240 --> 00:28:48,670
점점점 전 안유리나 저희가

636
00:28:48,670 --> 00:28:51,230
1월이 텐션이 나오기 시작을 했는데요

637
00:28:51,230 --> 00:28:54,170
그래서 저희가 2016년을 거치면서 알게되었던 거는

638
00:28:54,170 --> 00:28:57,070
일단 사용하면 꽤 많은 사용자가 사용하는

639
00:28:57,070 --> 00:28:59,420
어떤 서비스를 만드는 데까지는 왔구나

640
00:28:59,420 --> 00:29:00,880
많은 걸 알게 되었습니다

641
00:29:00,880 --> 00:29:03,130
그리고 이제 가계부를 만드는데

642
00:29:03,130 --> 00:29:05,850
집중하는 왜 카드 추천을 저희가 붙여 봤어요

643
00:29:05,850 --> 00:29:10,560
그랬을 때 어느 정도 선에서 많은 사용자들이 쓰고 있기 때문에

644
00:29:10,560 --> 00:29:12,610
가계부와 카드 추천해 궁합

645
00:29:12,610 --> 00:29:16,610
그렇게 나쁘지 않고 사용자 입장에서 빼 놨지 일반적이며

646
00:29:16,610 --> 00:29:20,680
가계부 사용자들이 원하는 가계부에 모습을 이제는 조금은 알겠다

647
00:29:20,680 --> 00:29:23,160
정도의 판단이 있었습니다

648
00:29:23,160 --> 00:29:28,340
2017년에 저희가 또 욕심이 한번 더 커져요

649
00:29:28,340 --> 00:29:29,590
그러면 우리가 가계부

650
00:29:29,590 --> 00:29:32,510
사용자들이 어느 정도 만족하는 서비스는 만들었는데

651
00:29:32,510 --> 00:29:36,140
더 많은 사람들이 가계부를 쓰면 어떨까

652
00:29:36,140 --> 00:29:38,240
혹은 그렇게 우리가 만들 순 없을까

653
00:29:38,240 --> 00:29:40,160
고민을 하게 시작 합니다

654
00:29:40,160 --> 00:29:43,250
그래서 가게 불을 사용하지 않는 사람들도

655
00:29:43,250 --> 00:29:46,120
우리의 사용자로 만들 수 있는 전략이 있을까

656
00:29:46,120 --> 00:29:49,070
그게 있다면 뭘까를 고민을 하기 시작을 했어요

657
00:29:49,070 --> 00:29:51,110
그래서 우선은 저희 앱이 지금

658
00:29:51,110 --> 00:29:53,400
갖고 있는 한 개를 좀 생각을 해 봤는데

659
00:29:53,400 --> 00:29:57,620
먼저 첫 번째로 카드 내용만 저희가 보여줘요

660
00:29:57,620 --> 00:29:59,500
그래서 체크카드를 쓰는 분들은

661
00:29:59,500 --> 00:30:03,460
대부분 효용을 좀 많이 느끼질 못 했고요

662
00:30:03,460 --> 00:30:07,010
그래서 카드 결제 문자 기반이 아니라

663
00:30:07,010 --> 00:30:09,360
금융사 데이터를 우리가 직접 가져와서

664
00:30:09,360 --> 00:30:11,660
왜냐면 대부분의 사람들이 은행 계좌 있고

665
00:30:11,660 --> 00:30:14,420
카드로 쓰니까 그 데이터를 그냥 그대로 보여 주면

666
00:30:14,420 --> 00:30:18,260
참 좋을 텐데 라는 없다는 아이디어를 갖고 있었어요

667
00:30:18,260 --> 00:30:20,260
그래서 2017년에 상황을 조금

668
00:30:20,260 --> 00:30:21,390
이렇게 정리를 해 보면

669
00:30:21,390 --> 00:30:24,540
저희가 당시에 알고 있었던 거는

670
00:30:24,540 --> 00:30:27,370
카드 추천을 잘하는 방법은 알고 있었고요

671
00:30:27,370 --> 00:30:29,760
비록 그게 5초 걸릴지 한다

672
00:30:29,760 --> 00:30:34,180
그리고 괜찮아 가계부를 만드는 방법은 알고 있었습니다

673
00:30:34,180 --> 00:30:36,220
근데 저희가 모르는 거는

674
00:30:36,220 --> 00:30:40,050
사용자의 금영 데이터를 누구한테 어떻게 받아서

675
00:30:40,050 --> 00:30:44,400
어떻게 보여 주지 이걸 아주 기획적으로 도 몰랐고요

676
00:30:44,400 --> 00:30:46,310
기술적으로도 더위가 몰랐어요

677
00:30:46,310 --> 00:30:47,690
그래서 이걸 몰랐고

678
00:30:47,690 --> 00:30:49,820
그걸 어떻게 하면 데이터로 불러오는데

679
00:30:49,820 --> 00:30:52,870
성공한 후에 데이터를 잘 보여 주게 하지

680
00:30:52,870 --> 00:30:56,010
그리고 어떻게 하면은 그걸 바탕으로 더 좋은 서비스를 만들지

681
00:30:56,010 --> 00:30:58,810
왜 대해서는 저희가 아무 것도 몰랐습니다

682
00:30:58,810 --> 00:31:00,270
그래서 2017년 에서

683
00:31:00,270 --> 00:31:03,080
어떤 전략은 우리가 모르는 것들이 빨리 아는데

684
00:31:03,080 --> 00:31:07,110
집중하자 저희가 모르는 불확실성을 빨리 제거하는 쪽으로

685
00:31:07,110 --> 00:31:10,570
우리개발 전략을 세워야 된다 라고 판단을 해서

686
00:31:10,570 --> 00:31:14,280
기존의 저희가 해 왔던 어떤 앱에서 제공했던 기능들을 전부

687
00:31:14,280 --> 00:31:16,960
다 배제하고 의도적

688
00:31:16,960 --> 00:31:19,430
그냥 새로운 필드에서 다시 만들기 시작을 했어요

689
00:31:19,430 --> 00:31:20,680
뭐 해 집중을 했냐면

690
00:31:20,680 --> 00:31:23,170
우리가 모른다고 생각했던 금융사에

691
00:31:23,170 --> 00:31:24,920
데이터를 가져 오는 거에

692
00:31:24,920 --> 00:31:26,430
되게 집중을 한 버전으로만

693
00:31:26,430 --> 00:31:28,130
앱을 만들기 시작을 했습니다

694
00:31:28,130 --> 00:31:30,610
어떻게 하면은 금융사에 데이터를 우리가 가져와서

695
00:31:30,610 --> 00:31:33,190
사용자들에게 잘 보여 줄 수 있 이 질문에만

696
00:31:33,190 --> 00:31:36,540
계속 저희는 답을 찾고 싶었어요

697
00:31:36,540 --> 00:31:40,110
그래서 기존에 잘 운영하던 뱅크샐러드 앱에

698
00:31:40,110 --> 00:31:42,600
서비스를 잠정적으로 중단을 하고

699
00:31:42,600 --> 00:31:44,860
새로운 금융사에 데이터를 불러올 수 있는

700
00:31:44,860 --> 00:31:46,320
앱을 만들기 시작했고

701
00:31:46,320 --> 00:31:49,670
이건 sms 문자 를 기반으로 하지 않아도 되기 때문에

702
00:31:49,670 --> 00:31:52,330
우리가 ios 앱스토어 충분히 만들 수 있겠다 라고

703
00:31:52,330 --> 00:31:55,940
판단을 해서 그때부터 이제 ios 개발자 분들을 찾다가

704
00:31:55,940 --> 00:32:02,110
내부에 인원을 ios 로 돌리기 싸게 아셀푸드 관심있으세요

705
00:32:02,110 --> 00:32:04,480
뭐야 그런 식으로 관심 있는 분들이 지원을 해서

706
00:32:04,480 --> 00:32:07,000
어떻게 접속해 아이고 새로만들기 시작하겠습니다

707
00:32:07,000 --> 00:32:10,100
저 2017년에 저희가 갖고 있던 전략들은

708
00:32:10,100 --> 00:32:14,370
이제 어느 정도 굵직굵직한 비즈니스 가설들은 검색을 했으니

709
00:32:14,370 --> 00:32:15,980
안정적인 서비스 분양가

710
00:32:15,980 --> 00:32:19,430
확장 가능성을 조금 고려해 보자

711
00:32:19,430 --> 00:32:23,840
그래서 저희가 2015년에 어떤 형태로 파이썬을 않고

712
00:32:23,840 --> 00:32:27,390
좀 더 안정적인 형태로 엔지니어링을 해보자라고 판단을 해

713
00:32:27,390 --> 00:32:29,040
당시에 저희 내부에 인턴

714
00:32:29,040 --> 00:32:32,220
호랑말코 서비스를 굉장히 많아지기 시작했어요

715
00:32:32,220 --> 00:32:38,470
그래서 한참 마이크로서비스 초기엔 다양한 어떤 서비스로부터

716
00:32:38,470 --> 00:32:42,540
내부 API 값을 받아 오지 않아서 직접 뒤에 접근을 한다거나

717
00:32:42,540 --> 00:32:45,460
서로 다른 서비스 3에서 막 이런 식으로 안티패턴

718
00:32:45,460 --> 00:32:48,290
그리 많이 늘어나기때문에 내부 API

719
00:32:48,290 --> 00:32:53,280
호출 하는 거를 굉장히 잘 할 수 있는 리모컨을 사끼시

720
00:32:53,280 --> 00:32:54,950
그때부터 싱카이 오늘

721
00:32:54,950 --> 00:32:56,810
좀 많이 눈여겨보기 시작을 했어요

722
00:32:56,810 --> 00:32:59,030
그래서 2017년에 뱅크샐러드

723
00:32:59,030 --> 00:33:00,840
3.0 을 만들면서 하는 것인가요

724
00:33:00,840 --> 00:33:05,580
기반의 ahp 서버를 써봐야겠다 라고 판단을 했습니다

725
00:33:05,580 --> 00:33:08,740
그리고 내부의 DB 전문가가 없으니까

726
00:33:08,740 --> 00:33:11,600
우리 데이터베이스를 유지보수 하는데

727
00:33:11,600 --> 00:33:13,400
시간을 쓸 자원도 없고

728
00:33:13,400 --> 00:33:14,880
사람도 없기 때문에

729
00:33:14,880 --> 00:33:17,460
최대한 문제가 안 일어날 수 있는 OS

730
00:33:17,460 --> 00:33:20,850
클로스 자 라고 판단을 했습니다

731
00:33:20,850 --> 00:33:25,790
그래서 그것도 몽고 DB 사용을 했고요

732
00:33:25,790 --> 00:33:29,920
그래서 이제 이제 저희가 만들기 시작했던 교육

733
00:33:29,920 --> 00:33:32,910
뱅크샐러드 앱은 지금 여러분들이 앱스토어나 구글 플레이

734
00:33:32,910 --> 00:33:34,940
스토어에서 다운로드 받을 수 있는

735
00:33:34,940 --> 00:33:37,550
그 뱅크샐러드 앱을 지금까지 만들고 있고

736
00:33:37,550 --> 00:33:39,730
만들기 시작을 했었습니다

737
00:33:39,730 --> 00:33:41,830
그래서 갑자기 현재로 돌아왔어요

738
00:33:41,830 --> 00:33:45,220
왜냐면 저희가 갑자기 이게 한달나비 안 끝났기 때문에

739
00:33:45,220 --> 00:33:46,660
뭐 얼마나 잘 하고 있는지

740
00:33:46,660 --> 00:33:50,400
학원들이 뭐가 있는지 는 아직 저희도 정리가 된 형태

741
00:33:50,400 --> 00:33:53,310
그래서 저희가 중요하게 생각했던 비지니스 가설들을

742
00:33:53,310 --> 00:33:55,250
지금은 좀 실험을 하고 있다 라고

743
00:33:55,250 --> 00:33:56,990
판단을 주면 좋을 것 같고요

744
00:33:56,990 --> 00:34:00,110
그리고 어느 정도 금영 데이터를 불러와서

745
00:34:00,110 --> 00:34:03,020
저희가 원하는 사용자들이 들어왔을 때

746
00:34:03,020 --> 00:34:05,080
꽤 많은 사용자들이 남는 서비스를 만드는데

747
00:34:05,080 --> 00:34:09,250
성공을 했으니 이걸 좀 더 넓은 도메인으로 넓혀서

748
00:34:09,250 --> 00:34:13,190
정말 경제인 구들 모두가 돈 달라는 걸 하게 될 텐데

749
00:34:13,190 --> 00:34:15,300
그때 돈 관리하실 수 있는 정말

750
00:34:15,300 --> 00:34:17,630
다양한 커버리지를 어떤 커버할 수 있는

751
00:34:17,630 --> 00:34:20,590
그런 유용한 서비스를 만들 그 방향으로 나가자

752
00:34:20,590 --> 00:34:24,410
나는 판단하여 이런저런 실험들을 하고 있습니다

753
00:34:24,410 --> 00:34:27,720
서현자 뱅크샐러드 서비스적인 내용은 그렇구요

754
00:34:27,720 --> 00:34:29,390
그러면 저희 뱅크샐러드 난 지금

755
00:34:29,390 --> 00:34:31,530
어떤 구조로 구성이 되어 있냐

756
00:34:31,530 --> 00:34:34,540
아까 저희가 왜 뱅크샐러드 팔콘 후원 했냐

757
00:34:34,540 --> 00:34:36,950
나는 항목에서 말씀을 드렸던 것처럼

758
00:34:36,950 --> 00:34:40,860
지금 한 70% 이상의 코드가 그냥 제가 급해 가지고

759
00:34:40,860 --> 00:34:44,210
깃허브 기준으로 파이썬 몇 개 먹었어

760
00:34:44,210 --> 00:34:46,690
칼라폼 몇 개 이런 식으로 다운 수취인

761
00:34:46,690 --> 00:34:49,340
아마 실제로 돌아가고 있는 서비스를 기준하면

762
00:34:49,340 --> 00:34:51,850
이거보다 더 수치가 높을 수도 있을 것 같아요

763
00:34:51,850 --> 00:34:53,550
70% 이상의 어떤 서비스

764
00:34:53,550 --> 00:34:56,410
대전에 코드가 파이썬으로 작성이 되어 있고요

765
00:34:56,410 --> 00:35:00,140
주로 거의 모든 대부분의 서비스내의 돌아가는 서버들을 다

766
00:35:00,140 --> 00:35:02,120
파이썬으로 작성을 하고 있습니다

767
00:35:02,120 --> 00:35:05,990
그 범인은 단순하게 crud 를 담당하는 서버부터

768
00:35:05,990 --> 00:35:08,150
특별 복잡한 비즈니스로직 처리까지 를

769
00:35:08,150 --> 00:35:10,450
다 파이썬 위임을 하고 있는데요

770
00:35:10,450 --> 00:35:12,650
이렇게 되면은 이제 오히려 궁금한 게

771
00:35:12,650 --> 00:35:16,860
그러면 이제 나머지 30% 왜 굳이 파이썬으로 안 했냐

772
00:35:16,860 --> 00:35:18,820
뭐 이런 걸 궁금하실 수 있는데

773
00:35:18,820 --> 00:35:21,660
그 위에는 다 각자의 사정이 있어 가지고

774
00:35:21,660 --> 00:35:24,100
보이비 단어들이다

775
00:35:24,100 --> 00:35:25,370
관련해서 예를 들면

776
00:35:25,370 --> 00:35:28,960
카드추천 같은 경우에는 저희가 사이에서는 썼음에도

777
00:35:28,960 --> 00:35:29,230
1번

778
00:35:29,230 --> 00:35:30,490
호출 당사에서 5초

779
00:35:30,490 --> 00:35:32,830
정도의 한계를 넘을 수가 없었거든요

780
00:35:32,830 --> 00:35:33,710
그렇다고 해서 저희가

781
00:35:33,710 --> 00:35:37,310
거기서 더 씨플로 작업을 하기에는

782
00:35:37,310 --> 00:35:39,970
그렇게 넉넉한 음성은 아니었어

783
00:35:39,970 --> 00:35:41,970
너무 어려운 난이도 왜 문제 없고

784
00:35:41,970 --> 00:35:44,610
거기를 이렇게 딥다이브 할 수는 없어 가지고

785
00:35:44,610 --> 00:35:46,320
카드총 같은 경우에는 예를 들면

786
00:35:46,320 --> 00:35:49,820
좀 더 적합하다고 생각하는 스칼라로 한의원으로 다시 만들기도하고

787
00:35:49,820 --> 00:35:53,980
요런 가정들이 있다 보니까 다른 언어 그래도 중간중간 사용되었습니다

788
00:35:53,980 --> 00:35:56,930
스칼라로 재개발하는 내용은 작년 파이콘

789
00:35:56,930 --> 00:35:58,990
어제 갔던 발표 참고하시면

790
00:35:58,990 --> 00:36:01,550
좀 더 자세한 내용을 들으실 수 있습니다

791
00:36:01,550 --> 00:36:04,620
그리고 저희가 대부분의 로즈애플파이 소리를 하고

792
00:36:04,620 --> 00:36:09,170
대부분의 서버를 파이썬으로 만든 다라고 저희가 이제

793
00:36:09,170 --> 00:36:12,750
심지어 원하는 항목으로 모모를 가져가려면

794
00:36:12,750 --> 00:36:15,840
저희가 금융사와 데이터를 많이 받아요

795
00:36:15,840 --> 00:36:18,140
문서로부터 데이터를 많이 받게 되는데요

796
00:36:18,140 --> 00:36:22,790
금융사의 통신 하는 방식이 뭐 아시는분들도 많으시겠지만

797
00:36:22,790 --> 00:36:25,970
뭔가 http 호출을 통해서 받아오는 방식이 아니라

798
00:36:25,970 --> 00:36:30,490
척했을 열고 이제 전문통신 이라고 하네 나왔던 픽스 드랭스

799
00:36:30,490 --> 00:36:31,670
바이트 라고 하더라고요

800
00:36:31,670 --> 00:36:35,250
영어로 그래서 아무튼 바이크를 주고 받는 방식으로

801
00:36:35,250 --> 00:36:38,690
데이터를 많이 요청을 하고 받기도 하고 하는데요

802
00:36:38,690 --> 00:36:41,100
이거 이제 대부분의 한국 금융회사

803
00:36:41,100 --> 00:36:43,950
내전압 회사들이 자바로 처리를 하고 있어요

804
00:36:43,950 --> 00:36:48,060
그래서 한국 A 전문 한국말 쓰는 거 아닙니다

805
00:36:48,060 --> 00:36:50,150
이점은 통신을 잘하도록

806
00:36:50,150 --> 00:36:52,280
지원하는 라이브러리들이 잡아 쪽에

807
00:36:52,280 --> 00:36:54,200
생태계는 굉장히 많고요

808
00:36:54,200 --> 00:36:57,010
또 좀 유용하고 쉽게 쓸 수 있는 것들이 있는데

809
00:36:57,010 --> 00:37:00,060
팔선생 좀 많이 없어서 아예 없었어요

810
00:37:00,060 --> 00:37:01,560
저희가 찾아 봤을 때는

811
00:37:01,560 --> 00:37:04,170
그래서 좀 더 저희가 전문통신

812
00:37:04,170 --> 00:37:05,700
앞으로 할 일도 많을 거고

813
00:37:05,700 --> 00:37:08,010
점점 핀테크 라는 생태계가 넓어짐에

814
00:37:08,010 --> 00:37:10,640
따라서 이런 일들이 많이 생길 것 같은데

815
00:37:10,640 --> 00:37:14,690
이거 우리 가족 오픈소스로 만들자 라고 해서 레이니스트

816
00:37:14,690 --> 00:37:19,630
깃허브 들어가 보시면 K 포맷이라는 저희가 오픈소스를 만들었거든요

817
00:37:19,630 --> 00:37:23,810
저 K-poms 이용해서 저희가 내부적으로 파이썬으로 도전

818
00:37:23,810 --> 00:37:28,000
통신을 좀 씻고 편하게 할 수 있도록 만들고 있음

819
00:37:28,000 --> 00:37:29,440
그리고 심지어는 있어요

820
00:37:29,440 --> 00:37:34,080
최근에 런칭한 스위치 보험이라는 서비스에서 카드를 등록하고

821
00:37:34,080 --> 00:37:36,440
결제 하는 거를 출시를 했어요

822
00:37:36,440 --> 00:37:38,570
저 그 기능을 위한 카드 결제

823
00:37:38,570 --> 00:37:41,130
처리 서비스도 개발을 했고요

824
00:37:41,130 --> 00:37:42,820
이건 감사하게도 아이엠포트

825
00:37:42,820 --> 00:37:44,960
라는 서비스가 파이썬을 지원을 합니다

826
00:37:44,960 --> 00:37:47,600
다이어트를 이용해서 지사들과 통신을

827
00:37:47,600 --> 00:37:51,360
쪼끔 저희가 수월하게 구현을 했던 게 있고요

828
00:37:51,360 --> 00:37:57,350
그리고 아직은 공개할 수 없는 비밀의 서비스북

829
00:37:57,350 --> 00:38:01,030
이것도 파이썬으로 했어 라고 할 만한 뭔가가 있는데

830
00:38:01,030 --> 00:38:04,350
이것도 100% 저희 가서 파이썬으로 했습니다

831
00:38:04,350 --> 00:38:05,910
그래서 파이썬을 구석구석

832
00:38:05,910 --> 00:38:09,290
많이 쓰려고 놀이 하고 있고요

833
00:38:09,290 --> 00:38:10,820
그리고 앞서 언급했듯이

834
00:38:10,820 --> 00:38:12,490
저희가 굉장히 많은 도메인과

835
00:38:12,490 --> 00:38:14,460
다양한 서비스들을 내부에 존재예요

836
00:38:14,460 --> 00:38:17,660
그래서 완전하게 좀 거대한 마이크로서비스

837
00:38:17,660 --> 00:38:20,200
아키텍처 로운 재고 있는데

838
00:38:20,200 --> 00:38:22,970
좋은 msa 환경은 기능 단위로

839
00:38:22,970 --> 00:38:24,830
서비스가 자에겐 아니고

840
00:38:24,830 --> 00:38:25,750
그리고 그렇게 잘게

841
00:38:25,750 --> 00:38:26,680
나는 파편화 에서

842
00:38:26,680 --> 00:38:28,300
오늘 운영에 어려움을 시스템적으로

843
00:38:28,300 --> 00:38:29,600
많이 커버할 수 있는 게

844
00:38:29,600 --> 00:38:30,890
좋은 MS 일을 할 수 있는

845
00:38:30,890 --> 00:38:33,090
환경이 라고 생각을 하는데요

846
00:38:33,090 --> 00:38:36,640
새로운 서비스를 만드는 게 싶지 않으면

847
00:38:36,640 --> 00:38:38,560
가곡의 메일을 하더라도

848
00:38:38,560 --> 00:38:41,320
기존의 만들었던 서비스의 코드를 덧대는 방식으로

849
00:38:41,320 --> 00:38:43,450
많이 운영을 하게 되더라고요

850
00:38:43,450 --> 00:38:45,090
서출 msa 가 아니라

851
00:38:45,090 --> 00:38:47,710
몇 개를 친한 서버 존재하는 약간 오손도손

852
00:38:47,710 --> 00:38:51,100
서버 판 이런 모습이 좀 되기도 해

853
00:38:51,100 --> 00:38:52,770
그래서 이렇게 되면은 서비스가 좀 많이

854
00:38:52,770 --> 00:38:54,430
전반적으로 비대해지고

855
00:38:54,430 --> 00:38:56,130
이걸 운영하고 유지보수 하는데

856
00:38:56,130 --> 00:38:57,520
비용이 굉장히 커집니다

857
00:38:57,520 --> 00:39:01,610
교사의 메세지를 적용하는 의미가 많이 되더라고요

858
00:39:01,610 --> 00:39:04,220
또한 사람들이 늘어나고 도메인도 늘어나고

859
00:39:04,220 --> 00:39:04,980
코드도 늘어나고

860
00:39:04,980 --> 00:39:07,100
그러니까 코드 래퍼 들어가고

861
00:39:07,100 --> 00:39:09,760
하다 보니 코드를 일이 매우 안 하시고요

862
00:39:09,760 --> 00:39:13,660
그렇다 보니까 코드 리브가 효율적으로 돌아가지 않으면 유명

863
00:39:13,660 --> 00:39:16,380
호텔 결과 되지 않는 거 많이 발견하게 되었습니다

864
00:39:16,380 --> 00:39:19,080
그리고 또 파이썬 혹은 파이썬

865
00:39:19,080 --> 00:39:23,380
특정 라이브러리나 프레임워크를 잘 쓰는 분들의 노하우가 쉽게

866
00:39:23,380 --> 00:39:25,790
공유가 그렇게 효율적으로 대지는 못 한다는 거

867
00:39:25,790 --> 00:39:26,830
발견했어요

868
00:39:26,830 --> 00:39:31,030
이게 구전의 해소되거나 아니면은 어떤 형태로 위키와 해가지고

869
00:39:31,030 --> 00:39:34,100
명곡 읽어야만 선수단 형태로 되다 보니까

870
00:39:34,100 --> 00:39:37,780
과연 우리가 이런 노하우가 많은 분들의 어떤 그런

871
00:39:37,780 --> 00:39:41,510
노하우를 잘 활용하고 있는 건가 하는 생각이 들어서

872
00:39:41,510 --> 00:39:42,790
파이썬 프로젝트 태블릿도

873
00:39:42,790 --> 00:39:46,220
저희가 오픈소스로 운영을 하고 있는 오픈소스

874
00:39:46,220 --> 00:39:49,330
라기보다는 저희가 내부적으로 쓰고 있는 파이썬 프로젝트

875
00:39:49,330 --> 00:39:50,570
템플릿을 공개하는 것은

876
00:39:50,570 --> 00:39:51,840
불가해요

877
00:39:51,840 --> 00:39:53,170
피어리나 같은 거

878
00:39:53,170 --> 00:39:56,500
보시면은 그냥 저희 내부 대화들이 많은데

879
00:39:56,500 --> 00:39:59,550
어쨌든 여러분들 사용할 수 있게 공개가 되어 있고

880
00:39:59,550 --> 00:40:01,600
공개한지 됐던 거 같습니다

881
00:40:01,600 --> 00:40:06,030
쿠키커터 라는 곡으로 이용해서 제너럴 하게

882
00:40:06,030 --> 00:40:07,440
파이썬 프로젝트 를 만들 때

883
00:40:07,440 --> 00:40:09,700
쉽게 갖다 쓸 수 있는 파이썬 프로젝트가 뭐야

884
00:40:09,700 --> 00:40:12,520
그리고 저희가 특히나 자주 사용하고 있는 새내기라면

885
00:40:12,520 --> 00:40:16,290
프레임워크의 베스트 프랙티스 접목 시킨 세니

886
00:40:16,290 --> 00:40:21,230
쿠키커터 템플릿을 운영을 하고 있습니다

887
00:40:21,230 --> 00:40:24,300
그리고 이제 조금만 빠르게 진행을 하겠습니다

888
00:40:24,300 --> 00:40:25,300
그러면 뱅크샐러드 나

889
00:40:25,300 --> 00:40:28,540
앞으로도 계속 파이썬을 쓸 거냐 라고 하면은

890
00:40:28,540 --> 00:40:31,790
저 개인 의견 있으면 앞으로도 계속 쓸 것 같아요

891
00:40:31,790 --> 00:40:34,220
왜냐면 여러 이유가 있겠지만

892
00:40:34,220 --> 00:40:36,620
저희는 여성이 빠르게 성장중인 조직이고

893
00:40:36,620 --> 00:40:39,780
지금도 계속 저희 조직이 나가는 방

894
00:40:39,780 --> 00:40:40,870
그리고 가지고 있는 전략에

895
00:40:40,870 --> 00:40:43,480
방향이 어떻게 하면 불확실한 가 빨리 배울까

896
00:40:43,480 --> 00:40:45,380
학습을 버스가 맞춰져 있어요

897
00:40:45,380 --> 00:40:47,440
저 2차전을 계속 저희가 유지하는 한

898
00:40:47,440 --> 00:40:49,010
파이썬이란 언어는 저에게

899
00:40:49,010 --> 00:40:51,080
굉장히 매력적인 언어가 될 것이고

900
00:40:51,080 --> 00:40:56,110
저희가 하는 방식 차도 저희 인원이 현백 20명 정도 되는데

901
00:40:56,110 --> 00:40:58,370
그 안에서도 5명에서 10명

902
00:40:58,370 --> 00:41:00,110
단위의 작은 팀들을 일어서

903
00:41:00,110 --> 00:41:01,850
작은 스타트업들이 뱅크샐러드

904
00:41:01,850 --> 00:41:04,580
나는 하나의 울타리 안에 같이 일하는 방식으로

905
00:41:04,580 --> 00:41:06,370
저희가 업무를 시내 가기 때문에

906
00:41:06,370 --> 00:41:10,830
결국에는 저희가 제가 보기로 했던 내용들을

907
00:41:10,830 --> 00:41:13,930
고민을 다시 각각의 작은 그룹들이 하고

908
00:41:13,930 --> 00:41:15,800
그렇다면 파이썬이 아마 적합하거나

909
00:41:15,800 --> 00:41:18,350
되지 않을까 라고 생각을 합니다

910
00:41:18,350 --> 00:41:20,620
시간이 좀 부족해서 더 많은 정보

911
00:41:20,620 --> 00:41:24,170
오늘 볼 수 있는 것들을 저희가 정리를 해 놨어요

912
00:41:24,170 --> 00:41:25,900
그래서 내일 있을 파이썬

913
00:41:25,900 --> 00:41:26,910
서버프레임워크 와

914
00:41:26,910 --> 00:41:30,270
관련된 저희의 다른 세션을 들으시는 것도 방법이고

915
00:41:30,270 --> 00:41:31,540
다음에 저희가 콘샐러드

916
00:41:31,540 --> 00:41:35,060
라는 세미나를 공개적으로 운영을 하고 있거든요

917
00:41:35,060 --> 00:41:36,900
관련 영상들이 유튜버 있으니

918
00:41:36,900 --> 00:41:38,400
내용을 참고하시면 좀

919
00:41:38,400 --> 00:41:40,450
더 자세한 내용을 얻으실 수 있습니다

920
00:41:40,450 --> 00:41:42,300
그리고 당연한 얘기지만

921
00:41:42,300 --> 00:41:45,170
앞서 언급한 것보다 훨씬 더 많은 정보는

922
00:41:45,170 --> 00:41:46,590
여기 들어오시면 됩니다

923
00:41:46,590 --> 00:41:48,710
그래서 이렇게 많은 분들을 뽑고

924
00:41:48,710 --> 00:41:53,420
저희에게도 관심 가져 주시면 감사하겠습니다 네

925
00:41:53,420 --> 00:41:54,880
그러면 김밥도 들어 주셔서

926
00:41:54,880 --> 00:41:57,200
너무 감사드립니다 감사합니다
