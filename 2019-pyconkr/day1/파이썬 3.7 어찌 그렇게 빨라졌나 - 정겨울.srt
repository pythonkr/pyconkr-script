1
00:00:00,830 --> 00:00:03,900
네 안녕하세요

2
00:00:03,900 --> 00:00:07,560
이번 시간에는 전기 올림픽에서 파이썬 3.7

3
00:00:07,560 --> 00:00:13,970
어찌 그렇게 빨라졌나 라는 제목으로 15분간 발표 했습니다

4
00:00:13,970 --> 00:00:17,300
다 15분간 발표 드리겠습니다 죄송합니다

5
00:00:17,300 --> 00:00:18,980
원활한 발표를 위해

6
00:00:18,980 --> 00:00:19,860
질의응답은 발표 후

7
00:00:19,860 --> 00:00:22,180
시간이 나오면 진행하도록 하겠습니다

8
00:00:22,180 --> 00:00:33,060
그럼 큰 박수 부탁드리겠습니다 아아 아 네 감사합니다

9
00:00:33,060 --> 00:00:36,410
제가 저는 2주제가 약간은 좋아할 사람만

10
00:00:36,410 --> 00:00:38,140
좋아하는 주제라고 생각을 했는데

11
00:00:38,140 --> 00:00:42,040
생각보다 많은 분들이 발표를 들어와 주셔서 정말

12
00:00:42,040 --> 00:00:43,150
감사합니다

13
00:00:43,150 --> 00:00:45,850
이게 사실 저도 이런 주제로

14
00:00:45,850 --> 00:00:48,180
원래 발표 할 생각은 없었어요

15
00:00:48,180 --> 00:00:52,540
그냥 저는 파이썬이 버전이 릴리즈 될 때마다 그냥 뭐가 달라졌지

16
00:00:52,540 --> 00:00:55,830
뭐 3.6 3.7 들어서는 어떻게 달라졌는지

17
00:00:55,830 --> 00:00:59,030
이제 리믹스 잘 때마다 챙겨보곤 하는데

18
00:00:59,030 --> 00:01:02,620
이게 오늘의 주제가 파이썬 3.7 빨라 지니예요

19
00:01:02,620 --> 00:01:05,540
근데 이게 3.72 전에도 퍼포먼스 임프루브먼트

20
00:01:05,540 --> 00:01:09,410
나 아니면 옵티마이제이션 에 관한 항목은 존재를 했습니다

21
00:01:09,410 --> 00:01:13,470
3.5 같은 경우에는 OS 모질었던 함수가 빨라졌다

22
00:01:13,470 --> 00:01:15,410
정규표현식 82 빨라졌다

23
00:01:15,410 --> 00:01:17,470
이런 자잘한 개성들이 있었고

24
00:01:17,470 --> 00:01:19,960
3.6 에서도 머신 카이온의 퓨처

25
00:01:19,960 --> 00:01:23,500
나 테스트가 클래스를 시로다시 고향을 했다

26
00:01:23,500 --> 00:01:26,210
그다음에 타이핑 모드를 빠르게 다시 해

27
00:01:26,210 --> 00:01:28,300
이런 식의 한 것만 있었는데요

28
00:01:28,300 --> 00:01:32,120
이게 파이썬 3.7 들어와서는 옵티마이제이션 이라는 거를 콕

29
00:01:32,120 --> 00:01:35,610
집어서 리스 노트에 쓰기 시작했읍니다

30
00:01:35,610 --> 00:01:40,640
그래서 보면은 씽크아이 오모 조율해서 되게 중대한 뭐 퍼포먼스

31
00:01:40,640 --> 00:01:42,770
임프루브먼트 가 있었다

32
00:01:42,770 --> 00:01:44,130
그리고 이거 뿐만 아니라

33
00:01:44,130 --> 00:01:47,170
되게 괄목할 만한 여러가지 성능개선이 있었다

34
00:01:47,170 --> 00:01:50,810
옵티마이제이션 항목을 한번 봐라 디테일하게 쓰니까

35
00:01:50,810 --> 00:01:53,790
그런 식으로 릴리즈 노트 에 적어 놨는데

36
00:01:53,790 --> 00:01:55,180
처음에 한 일 년 전인가

37
00:01:55,180 --> 00:01:59,670
그때 3.71 대구에서도 그때는 그냥 빨리 잤구나 좋네

38
00:01:59,670 --> 00:02:01,900
그정도로만 생각을 했었습니다

39
00:02:01,900 --> 00:02:03,890
데리고 이후에 제가 속한 조직에서

40
00:02:03,890 --> 00:02:05,200
파이썬을 어떻게 사용하는지

41
00:02:05,200 --> 00:02:06,990
에 대한 발표를 했을 때도

42
00:02:06,990 --> 00:02:08,700
파이썬 3.7 소개하면서

43
00:02:08,700 --> 00:02:11,210
그냥 인핸스먼트 쪽에 이런 게 빨라 졌다

44
00:02:11,210 --> 00:02:13,230
그리고 가장 빠른 원타임 버전이다

45
00:02:13,230 --> 00:02:15,040
라고만 소개로 했었고

46
00:02:15,040 --> 00:02:17,080
이때도 그냥 파이썬 3.7

47
00:02:17,080 --> 00:02:18,590
지금까지 나온 파이썬

48
00:02:18,590 --> 00:02:22,530
파이썬버전 중에서 가장 빠르구나 이정도로만 인식하고

49
00:02:22,530 --> 00:02:26,950
그래서 근데 이제 저도 요번에 기회가 돼 가지고

50
00:02:26,950 --> 00:02:30,460
자기가 되기 전에 왜 빠른지 살펴보려고 네 했어요

51
00:02:30,460 --> 00:02:32,620
근데 이게 옵티마이제이션 항목을 보면은

52
00:02:32,620 --> 00:02:33,820
이런 식으로 써져 있는데

53
00:02:33,820 --> 00:02:36,320
BP50 났을 더라고요

54
00:02:36,320 --> 00:02:38,520
저는 이제 기타 엄마 사랑해요 안 돼

55
00:02:38,520 --> 00:02:40,850
여기서 그냥 이슈 #234

56
00:02:40,850 --> 00:02:43,120
이런 식의 형태가 나한테 익숙한데

57
00:02:43,120 --> 00:02:44,810
BP 오라는 것도 낯설었고

58
00:02:44,810 --> 00:02:48,910
아 이게 그냥 5.org 라는 이슈트래커

59
00:02:48,910 --> 00:02:50,180
약간 20만 원을 주라고

60
00:02:50,180 --> 00:02:53,580
나 뭐 지랄 티켓 이런 식으로 알긴 알겠는데

61
00:02:53,580 --> 00:02:54,580
한번 들어가 봤더니

62
00:02:54,580 --> 00:02:57,670
너무나도 낯선환경 펼쳐져 있는 거예요

63
00:02:57,670 --> 00:03:00,030
이게 어떤 깃허브로 따지자면 어떠하니

64
00:03:00,030 --> 00:03:02,750
슈의 그 20페이지 거든요

65
00:03:02,750 --> 00:03:05,480
거기서 봤을 때 저는 처음 봤어요 제가 당황스러웠어요

66
00:03:05,480 --> 00:03:06,790
이건 뭔지도 잘 모르겠고

67
00:03:06,790 --> 00:03:09,800
나한테 있을까 하면은 일어나면 인데

68
00:03:09,800 --> 00:03:12,010
그리고 나는 PR 같은 거 익숙해져 있는데

69
00:03:12,010 --> 00:03:13,520
뭐 옛날에 말로만 듣던 뭐

70
00:03:13,520 --> 00:03:17,200
이메일로 패치를 보내 가지고 메인테이너 패치를 적용하는 정태

71
00:03:17,200 --> 00:03:20,740
뭐 이런 식으로 개발이 진행되고 있었더라

72
00:03:20,740 --> 00:03:21,690
그리고 아 그래 그래

73
00:03:21,690 --> 00:03:24,640
어떤 패치가 있는지 코드라도 보자 라고 봤는데

74
00:03:24,640 --> 00:03:27,420
리뷰 2 같은 게 이렇게 생겼더라고요

75
00:03:27,420 --> 00:03:29,960
여러 가지 버전이 존재하고

76
00:03:29,960 --> 00:03:31,840
어떤 파일이 변경되는지 보이고

77
00:03:31,840 --> 00:03:36,510
여기서 손절했습니다 이거는 나는 볼 수가 없다

78
00:03:36,510 --> 00:03:40,730
참고로 이제 2017년 2월 부터 18성 개발은 딸은 뭐

79
00:03:40,730 --> 00:03:43,530
HG 라는 곳에서 깃허브로 이동은 했어요

80
00:03:43,530 --> 00:03:44,940
그리고 이슈 트레킹을

81
00:03:44,940 --> 00:03:46,980
그 bpo 쪽을 사용을 하고 있니

82
00:03:46,980 --> 00:03:48,250
이제 그 기타 비씨 로

83
00:03:48,250 --> 00:03:50,640
사용하자라는 피가 성인이 되어 가지고

84
00:03:50,640 --> 00:03:52,980
마이그레이션이 진행 중입니다

85
00:03:52,980 --> 00:03:56,260
아주 다행히 소식이 면서도 지금 파이콘 발표

86
00:03:56,260 --> 00:03:59,420
준비 할 때는 아직 완전히 이동이 되지가 않아 가지고

87
00:03:59,420 --> 00:04:01,080
완전히 좋지만 안 한대요

88
00:04:01,080 --> 00:04:04,640
그래서 단념하고 지내던 중에 2개가 돼 가지고 아

89
00:04:04,640 --> 00:04:05,920
난 모르는 모르는 거 발표

90
00:04:05,920 --> 00:04:08,380
하면은 어떻게 어떻게든 데드라인 3분으로

91
00:04:08,380 --> 00:04:09,420
내가 공부를 하겠지

92
00:04:09,420 --> 00:04:13,160
그리고 발표하게 되겠지 약간 이런 생각이 있었어요

93
00:04:13,160 --> 00:04:18,210
그런데 나는 분명 팔콘 가르쳐 갈 때는 아이고

94
00:04:18,210 --> 00:04:20,250
좀 가기 보인다 것인가요

95
00:04:20,250 --> 00:04:23,030
나 좀 써 받고 좀 시 레벨 보면

96
00:04:23,030 --> 00:04:24,870
알 수 있지 않을까 했는데

97
00:04:24,870 --> 00:04:26,270
준비를 하면 할수록 아

98
00:04:26,270 --> 00:04:28,480
진짜 발표주제 바꿀 수 있는지 물어 볼까

99
00:04:28,480 --> 00:04:29,730
진짜 딱 그 파이콘

100
00:04:29,730 --> 00:04:32,330
준비위원회 분들한테 맥박 메일 보내는 거

101
00:04:32,330 --> 00:04:34,660
임시보관함에 아직도 들어가 있어요

102
00:04:34,660 --> 00:04:36,140
그래서 그 상태를 지 나와서 지금

103
00:04:36,140 --> 00:04:39,340
그래도 어느 정도 어느정도 준비를 하다 보니까

104
00:04:39,340 --> 00:04:41,830
그래도 여러분들께 말씀드릴 정도로 주면 되는데

105
00:04:41,830 --> 00:04:45,270
그래도 이 발표에서 말씀드릴 것과

106
00:04:45,270 --> 00:04:47,060
오늘 말하지 않을 내용

107
00:04:47,060 --> 00:04:48,620
그런 거를 구몬 하고 싶었어요

108
00:04:48,620 --> 00:04:51,080
그래서 저도 씨를 잘 모르기 때문에

109
00:04:51,080 --> 00:04:55,870
그냥 새롭게 뭐 성능개선을 하면서 OP 코드가 추가 오피코드

110
00:04:55,870 --> 00:04:57,220
어떻게 부연이 되었는지

111
00:04:57,220 --> 00:05:00,240
이거를 식구들 라인바이라인 으로 한번 해 봅시다

112
00:05:00,240 --> 00:05:03,410
라거나 아니면은 이제 어떤 abc 보드리

113
00:05:03,410 --> 00:05:06,870
나 워싱턴 초기 어떤 모듈을 씨로 파이썬으로 짜져 있던 거

114
00:05:06,870 --> 00:05:08,100
다시 잤어요

115
00:05:08,100 --> 00:05:10,030
이거 한 2천 주제넘는 짓 하나

116
00:05:10,030 --> 00:05:13,340
따라가보면 어떤 식으로 바뀌었는지 보자

117
00:05:13,340 --> 00:05:15,000
엄청 긴 정규편입 파 썰어

118
00:05:15,000 --> 00:05:15,860
우리 정부 때 보자

119
00:05:15,860 --> 00:05:17,660
약간 이런 거는 오늘

120
00:05:17,660 --> 00:05:20,250
제가 주로 말씀드리고 싶은 내용은 아니고요

121
00:05:20,250 --> 00:05:23,870
오늘 말씀 드리고 싶은 내용을 이인원 개선을 대체

122
00:05:23,870 --> 00:05:25,000
어떻게 이번 했을까

123
00:05:25,000 --> 00:05:27,670
그냥 딴 것도 있겠지만

124
00:05:27,670 --> 00:05:29,090
신호 다시 하지 않더라도

125
00:05:29,090 --> 00:05:31,140
성능개선을 이런 부분들이 많아요

126
00:05:31,140 --> 00:05:34,190
그래서 이런 부분에 어떤 아이디어가 적용되었는지

127
00:05:34,190 --> 00:05:38,280
그리고 여러분들이 만약에 제가 말씀을 제대로 못 드려서 아

128
00:05:38,280 --> 00:05:43,640
이거 알고 싶은데 써 보면 됐지 그리고 몇시고

129
00:05:43,640 --> 00:05:44,950
저는 아주 어렵지만 않더라고요

130
00:05:44,950 --> 00:05:47,910
그래서 그런 부분들을 한번 같이 보고자 합니다

131
00:05:47,910 --> 00:05:51,360
저는 뱅크샐러드 에서 현대엔지니어링 일하고 있는 전교

132
00:05:51,360 --> 00:05:56,130
그리고 오늘 말씀드린 커피가 한 11가지 정도예요

133
00:05:56,130 --> 00:06:01,280
그래가지고 이런 여러 가지로 팩트를 함께 보면서 파이썬 3.7

134
00:06:01,280 --> 00:06:04,060
어떻게 해서 달라졌는지 진짜 빨라 졌는지

135
00:06:04,060 --> 00:06:10,200
내일 한번 보고 잡네

136
00:06:10,200 --> 00:06:12,860
먼저 이제 파이썬에 기본 라이벌

137
00:06:12,860 --> 00:06:15,140
클래스 쪽에 메소드를 호출하는 게 빨라

138
00:06:15,140 --> 00:06:16,900
졌다 라고 명시되어 있어요

139
00:06:16,900 --> 00:06:20,230
여기서는 리조트에서 집까지는 적혀 있지 않고

140
00:06:20,230 --> 00:06:24,260
그냥 되게 많이 빨라졌어 라고만 적혀 있었는데요

141
00:06:24,260 --> 00:06:26,740
이게 선이 주된 내용은 그냥 표준라이브러리

142
00:06:26,740 --> 00:06:29,650
속한 클래스 있는 여러 메써드를 최적화했다

143
00:06:29,650 --> 00:06:31,310
그리고 어떻게 최적화를 했냐

144
00:06:31,310 --> 00:06:33,560
냈어도 패스트콜 이라는 컨벤션을

145
00:06:33,560 --> 00:06:35,540
딸이 씨 코드를 변경했다

146
00:06:35,540 --> 00:06:39,450
나는 게 주된내용 여기서 표준라이브러리 같은 것들을

147
00:06:39,450 --> 00:06:43,180
우리가 뭐 컬렉션즈 아니면 빌트인이 네모 트림

148
00:06:43,180 --> 00:06:45,880
이게 표준라이브러리 로컬클래스 드리고요

149
00:06:45,880 --> 00:06:48,890
여기에 이제 속한 모임 로테이트

150
00:06:48,890 --> 00:06:52,400
아니면 우리가 흔히 오버라이드 해서

151
00:06:52,400 --> 00:06:54,030
그냥 하는 게 다 아이템

152
00:06:54,030 --> 00:06:55,710
그런 거는 스트링의 리플레이스

153
00:06:55,710 --> 00:06:59,280
저스트슬립 없어 이런 것들이 호출할 때 빨라졌다

154
00:06:59,280 --> 00:07:00,960
나는 내용이고요

155
00:07:00,960 --> 00:07:03,040
여기서 주목할 만한 것은 이 집에서도

156
00:07:03,040 --> 00:07:06,880
패스트콜 컨벤션이 볼까 하는 거

157
00:07:06,880 --> 00:07:08,620
이런 거는 처음 봤을 때는 이게

158
00:07:08,620 --> 00:07:12,060
그냥 오바이트 코드의 어떤 오피코드 생겼네

159
00:07:12,060 --> 00:07:15,300
하지만 사실은 그냥 우리가 파이썬 컨벤션 스타일

160
00:07:15,300 --> 00:07:18,170
뭐 그런 때 쓰는 양서면 컨벤션 이에요

161
00:07:18,170 --> 00:07:22,470
그래서 어떤 특정 컨벤션에 맞춰서 씨팍

162
00:07:22,470 --> 00:07:25,960
파이썬에 함수를 선을 하면은 성능상의 이득이 생긴다

163
00:07:25,960 --> 00:07:27,660
나는 거고요

164
00:07:27,660 --> 00:07:32,220
이게 기존에는 메서드가 발해를 컨벤션을 상했는데

165
00:07:32,220 --> 00:07:34,080
이게 다른 컨벤션을 사용하면서

166
00:07:34,080 --> 00:07:37,190
원래는 파이썬 피플 객체로 넘어오던

167
00:07:37,190 --> 00:07:40,340
그러니 장갑들이 5zic 대원로 넘어오면서

168
00:07:40,340 --> 00:07:42,660
약간의 성능향상이 있었습니다

169
00:07:42,660 --> 00:07:46,590
만약에 이거에 대해서 더 깊게 알고 싶다면

170
00:07:46,590 --> 00:07:50,210
이쪽에 관련된 이슈들을 참고해 주시면 될 거 같고요

171
00:07:50,210 --> 00:07:53,070
이것도 childrens 매뉴얼에 적혀 있습니다

172
00:07:53,070 --> 00:07:55,280
이제 각각의 어떤 컨벤션

173
00:07:55,280 --> 00:07:57,770
어떤 걸로 의미하는지 냈어도

174
00:07:57,770 --> 00:08:01,450
패스트콜 이라는 컨벤션을 바꾼 거는 이제 포지션을 알고

175
00:08:01,450 --> 00:08:04,480
먼트 쪽에만 적용이 되는 것 되는데

176
00:08:04,480 --> 00:08:08,840
파이썬 3.8 회는 포지션에 알만툴 개념이 저희 됩니다

177
00:08:08,840 --> 00:08:11,570
그래서 이매 쏠패스

178
00:08:11,570 --> 00:08:14,390
콜은 쓰면은 빠른 대신에

179
00:08:14,390 --> 00:08:16,470
키워드 알림 들을 수가 없게 됩니다

180
00:08:16,470 --> 00:08:17,580
그래서 예를 들면은

181
00:08:17,580 --> 00:08:20,660
우리가 뭐 스트링에 리플레이 사람들을 시그니처를 봤을 때

182
00:08:20,660 --> 00:08:21,960
이렇게 올드뉴 뭐

183
00:08:21,960 --> 00:08:24,540
그런 그런 인자가 설명이 되어 있는데

184
00:08:24,540 --> 00:08:25,430
우리가 흔히 하듯이

185
00:08:25,430 --> 00:08:27,470
밑에처럼 이거를 키워줘

186
00:08:27,470 --> 00:08:31,060
아이디만 측으로 넘길 수가 없어요

187
00:08:31,060 --> 00:08:33,220
내 넘기면 에러가 납니다

188
00:08:33,220 --> 00:08:35,250
어떤 식으로 자기 컨벤션이 바뀌었냐

189
00:08:35,250 --> 00:08:37,660
면은 예전에는 빨간색으로

190
00:08:37,660 --> 00:08:41,130
메소드가 아규먼트로 성인된 컨벤션이 이제 80

191
00:08:41,130 --> 00:08:45,850
90 쪽이랑 3세 시그니처 쪽에 바뀌면서 넘어가는 객체 바뀌고

192
00:08:45,850 --> 00:08:47,590
그러면서 성능향상 이런 왔고요

193
00:08:47,590 --> 00:08:50,530
여기서 이야기만 클리닉 이라는 개념이 나오게 돼요

194
00:08:50,530 --> 00:08:53,260
그래서 파이썬 코어 개발자들이 이렇게 C 코드로

195
00:08:53,260 --> 00:08:55,840
파이썬을 개발할때 시그니처

196
00:08:55,840 --> 00:08:58,120
이러한 시그니처가 종류도 많고

197
00:08:58,120 --> 00:09:01,730
우리가 방금도 받듯이 컨벤션이 되게 많아요

198
00:09:01,730 --> 00:09:04,930
우리가 이런 거를 좀 변환하거나 생성하는데

199
00:09:04,930 --> 00:09:08,410
도움을 봤자 해서 있는 도구가 뭐야

200
00:09:08,410 --> 00:09:13,710
이거는 이제 약간 주석 쪽에 dslr 같이 선언을 해가지고

201
00:09:13,710 --> 00:09:16,290
이런 식으로 선을 해준다음에 이 도구를 돌리면

202
00:09:16,290 --> 00:09:19,740
이거 해 봤는 함수에 시그니처가 생성이 됩니다

203
00:09:19,740 --> 00:09:21,460
그래서 이거를 사용 해 가지고

204
00:09:21,460 --> 00:09:25,810
기존의 다른 컨벤션을 따라도 함수들을 패스트콜 컨벤션

205
00:09:25,810 --> 00:09:26,620
바꿨고

206
00:09:26,620 --> 00:09:30,560
이래서 다양한 메소드들이 최대 30% 정도까지 빨라졌다

207
00:09:30,560 --> 00:09:35,490
나는 게 이 토픽에 주는 내용입니다

208
00:09:35,490 --> 00:09:37,960
그리고 파이썬 시작 시간이라고 표현했는데요

209
00:09:37,960 --> 00:09:40,860
우리가 파이썬 인터프리터 를 실행하는 데 있어서

210
00:09:40,860 --> 00:09:42,790
시작 시간이 약간 감소했습니다

211
00:09:42,790 --> 00:09:45,030
리눅스에서는 10% 정도 빨라졌고

212
00:09:45,030 --> 00:09:49,260
매고 했어요 저는 삼십분 정도 빨라졌습니다

213
00:09:49,260 --> 00:09:53,260
있어서 주로 두 가지 아이디어가 주 했는데요

214
00:09:53,260 --> 00:09:56,600
하나는 그냥 abc 모조를 시로다시 잤더니 빨라졌다

215
00:09:56,600 --> 00:10:01,510
그리고 하나는 사이트 사이트 라는 모듈이 사용하는 씻어 컨피그

216
00:10:01,510 --> 00:10:04,200
오줌액정 함수를 임포트해서 쓰고 있었는데

217
00:10:04,200 --> 00:10:05,590
이거를 임포트 하지 말고

218
00:10:05,590 --> 00:10:08,760
그냥 그 함수를 그대로 복사해서 사용했더니 빨라졌다

219
00:10:08,760 --> 00:10:10,160
나는 게 주된 내용이다

220
00:10:10,160 --> 00:10:13,060
덤으로 abc 모듈을 시로다시 잤더니

221
00:10:13,060 --> 00:10:15,380
머리가 자주 사용하는 S9

222
00:10:15,380 --> 00:10:17,450
서버클래스 같은 함수들도 1.5

223
00:10:17,450 --> 00:10:19,800
달라졌다 라고 되어 있는데

224
00:10:19,800 --> 00:10:22,980
여기서는 깨달으신 않겠습니다

225
00:10:22,980 --> 00:10:24,730
다시다 네이비씰 아 그래

226
00:10:24,730 --> 00:10:28,400
제가 처음에 토픽을 한번 가 보려고 시작했을 때 아

227
00:10:28,400 --> 00:10:32,250
그래 이거 한번 봐 볼까 했는데 너무 하더라고요

228
00:10:32,250 --> 00:10:35,610
그리고 그냥 내용도 파이썬코드로 되어 있던 모드를 C

229
00:10:35,610 --> 00:10:37,530
코드로 바꿔 쓴 거예요

230
00:10:37,530 --> 00:10:40,220
제 생각에는 너무 지금 발끝까지도 아니고

231
00:10:40,220 --> 00:10:41,740
너무 당연한 당연히 파이썬으로

232
00:10:41,740 --> 00:10:44,800
짱 있는 거를 싫어 자면은 빨라지지

233
00:10:44,800 --> 00:10:46,760
그래서 여기에서는 이게

234
00:10:46,760 --> 00:10:51,520
어떻게 정확히 구현이 바뀌었는지는 다만

235
00:10:51,520 --> 00:10:54,160
여기서 제가 주목하고 싶었던 epi 되게

236
00:10:54,160 --> 00:10:56,890
한 달간 진행이 됐어 보시면 알겠지만

237
00:10:56,890 --> 00:10:58,930
뭐 1월부터 6월까지 되게

238
00:10:58,930 --> 00:11:02,560
오랜 기간동안 피하기 얼렸다가 태국 아버지가 되는데

239
00:11:02,560 --> 00:11:04,140
그동안 파이널컷 디벨로퍼

240
00:11:04,140 --> 00:11:06,920
둘이 되게 300개가 오늘 이별을 주고 받고

241
00:11:06,920 --> 00:11:10,460
또 이게 거의 다 씻고 거예요

242
00:11:10,460 --> 00:11:12,680
그래 가지고 이천 주인 없는 변경 있었는데

243
00:11:12,680 --> 00:11:14,140
그대 포기하지 않고

244
00:11:14,140 --> 00:11:16,290
되게 파이썬의 성능개선을 위해서 되게

245
00:11:16,290 --> 00:11:18,560
현서 주고 있다는 알겠고

246
00:11:18,560 --> 00:11:20,220
또 그러면서도 G7 법도 한데

247
00:11:20,220 --> 00:11:23,180
계속해서 지속 가 유지 보수를 추가 하더라고요

248
00:11:23,180 --> 00:11:25,790
금오산에서 파이썬 생태계 활성

249
00:11:25,790 --> 00:11:29,610
코어 디벨롭먼트 상태가 되게 잘 동작을 하고 있구나

250
00:11:29,610 --> 00:11:32,530
인식을 해서 또 이제 두 번째로 아까

251
00:11:32,530 --> 00:11:34,660
말씀드린 게 어디로 해서 씨

252
00:11:34,660 --> 00:11:39,230
컴퓨터 들을 제거했다는 내용이에요 이 사이트 모듈은

253
00:11:39,230 --> 00:11:40,550
인터프리터를 실행할 때

254
00:11:40,550 --> 00:11:42,630
자동으로 인식해서 실행되는 못 이래요

255
00:11:42,630 --> 00:11:46,310
그래서 이 사이트 패키지 우리가 뭐 피니톨 같은 설치했거나

256
00:11:46,310 --> 00:11:49,830
다른 서드파티 패키지들이 설치되어 있는 경로를 찾고

257
00:11:49,830 --> 00:11:52,720
그 배추가 하는 그런 모델인데

258
00:11:52,720 --> 00:11:55,480
여기서 어시스트 컴퓨터에

259
00:11:55,480 --> 00:11:57,650
특정 함수들을 임포트해서 사용을 하고 있었어요

260
00:11:57,650 --> 00:12:00,160
근데 이시스 컨피그 모듈이 되게 크고

261
00:12:00,160 --> 00:12:02,680
임포트하는 대만도 되게 무겁다 보니까

262
00:12:02,680 --> 00:12:06,760
시간에 도착해 좀 느리게 하는 범인이 없는데 이

263
00:12:06,760 --> 00:12:09,260
대선에서는 그 거기에서 사용하는 측정

264
00:12:09,260 --> 00:12:11,680
함수들을 그냥 포털에서 쓰지 말고

265
00:12:11,680 --> 00:12:15,020
복사해서 사이트 모듈 안에서 가져갔을 아까 라면

266
00:12:15,020 --> 00:12:17,810
포트 때문에 그러지 않을 거야 해서

267
00:12:17,810 --> 00:12:23,480
개선을 당연히 이 과정에서 이거에 대한 유지보수 오류가 발생하였습니다

268
00:12:23,480 --> 00:12:26,200
이게 두 모두 상해서 암묵적인 관계가 발생하고

269
00:12:26,200 --> 00:12:27,500
어느 하나를 수정했을때

270
00:12:27,500 --> 00:12:29,030
하나를 수정하지 않으면은

271
00:12:29,030 --> 00:12:32,220
이게 서로 버전이 맞지 않는 그러니깐요

272
00:12:32,220 --> 00:12:37,630
담아 이게 개발자들이 논의하는 끝에 모듈을 시로다시 작성하거나

273
00:12:37,630 --> 00:12:38,880
이렇게 되게 오래되고

274
00:12:38,880 --> 00:12:40,630
큰 모듈에서 필요한 부분만

275
00:12:40,630 --> 00:12:43,950
또 따로 추상적으로 분리 하는 거는 너무 작업이니까

276
00:12:43,950 --> 00:12:46,530
그래 너 말대로 그냥 딱 필요한 분만 가져오고

277
00:12:46,530 --> 00:12:48,840
대신 우리가 유지보수에서 잊지 않기 위해

278
00:12:48,840 --> 00:12:52,480
양쪽 다 모두 모두 주석을 달아 줌으로써

279
00:12:52,480 --> 00:12:55,850
최대한 이런 드랍되는 거를 방지하자 라고 확인했고요

280
00:12:55,850 --> 00:12:58,630
그 결과 아까 말씀드린 대로 인사에서는 빨라졌고

281
00:12:58,630 --> 00:13:01,540
내가 더 많이 빨라져 결과 나왔습니다

282
00:13:01,540 --> 00:13:03,930
그래서 실제 피해를 보면은 이런 식으로

283
00:13:03,930 --> 00:13:05,000
네가 만약에 못 이루고

284
00:13:05,000 --> 00:13:12,370
칠 때는 딱 모듈도 잊지 말고 고쳐라 명심해서 해결했습니다

285
00:13:12,370 --> 00:13:13,910
그리고 또 빨라져 어떤 부분이

286
00:13:13,910 --> 00:13:16,380
이제 우리가 클래스의 인스턴스메소드

287
00:13:16,380 --> 00:13:19,150
호출이 20% 정도 빨라졌다는 내용이에요

288
00:13:19,150 --> 00:13:21,610
근데 여기서는 이제 길게 말씀드린 내용들을 없고

289
00:13:21,610 --> 00:13:22,460
그냥 단순히 이게

290
00:13:22,460 --> 00:13:26,570
어떤 특정 함수호출에 대해서 새로 오피코드 두 개를 추가했더니

291
00:13:26,570 --> 00:13:28,550
아주 빠르게 됐다

292
00:13:28,550 --> 00:13:30,390
나는 내용이고요

293
00:13:30,390 --> 00:13:32,900
이게 굳이 OP 코드를 추가하지 않고

294
00:13:32,900 --> 00:13:36,130
그냥 기존에 사용하던 코드를 따로 최적화하거나

295
00:13:36,130 --> 00:13:37,420
바꾸면 되지 않을까

296
00:13:37,420 --> 00:13:38,670
나는 돈이 좀 있었는데

297
00:13:38,670 --> 00:13:42,210
이런 경우 오히려 많은 부분에서 성능이 학회

298
00:13:42,210 --> 00:13:44,340
실패했다 라고 광주로 해서

299
00:13:44,340 --> 00:13:46,640
그거는 받아들여지지 않았습니다

300
00:13:46,640 --> 00:13:50,240
여기서 그냥 계속 내용을 크게 파지는 않고

301
00:13:50,240 --> 00:13:54,800
만약에 더 알고 싶다면 이 패킷을 직접 한번 보고

302
00:13:54,800 --> 00:13:57,100
어떻게 25P 코드가 그러니 됐고

303
00:13:57,100 --> 00:13:58,570
이게 어떤 식으로 동작하는지

304
00:13:58,570 --> 00:14:00,690
또 알 수 있을 것 같고요

305
00:14:00,690 --> 00:14:02,440
6회 말로는 여기에서

306
00:14:02,440 --> 00:14:07,710
이제 진행하면서 귀도반로섬 이 그동안 이스타

307
00:14:07,710 --> 00:14:12,390
트윗으로 사용하는 함수 오른쪽 형태보다 줄였는데

308
00:14:12,390 --> 00:14:16,020
이걸로 우리가 빨라질 수 있는 가능성을 찾았다 라고 좋아했는데요

309
00:14:16,020 --> 00:14:17,670
재생 저는 처음에 보고

310
00:14:17,670 --> 00:14:21,140
막 그래 오른쪽이 오히려 객체를 다시 생성 하니까

311
00:14:21,140 --> 00:14:23,630
우리가 더 느리지 라고 생각을 했었는데

312
00:14:23,630 --> 00:14:27,010
실제로 돌려보니까 오른쪽 상태에서 빠르더라구요

313
00:14:27,010 --> 00:14:30,650
인스턴스메소드 개선이 아직은 적응이 되지 않아서

314
00:14:30,650 --> 00:14:34,320
여전히 아래같은 형태가 더 빠르기는 하는데

315
00:14:34,320 --> 00:14:36,840
어 나중에는 이게 더 개선될 수 있기를 기대합니다

316
00:14:36,840 --> 00:14:39,040
기대해 보겠습니다

317
00:14:39,040 --> 00:14:44,090
그리고 이제 그쪽에서 토픽들 말씀을 드릴 건데요

318
00:14:44,090 --> 00:14:45,640
이거는 약간 잠시 쉬어가는 시간이에요

319
00:14:45,640 --> 00:14:47,990
그래서 그 동안은 막 시로다시 잤다

320
00:14:47,990 --> 00:14:49,530
그다음에 오피 코드로 추가했다

321
00:14:49,530 --> 00:14:51,810
그런 내용만 말씀을 드렸는데

322
00:14:51,810 --> 00:14:52,570
이게 내가 간다

323
00:14:52,570 --> 00:14:56,230
나는 아이디어로 더 성능향상을 일어날 수 있다

324
00:14:56,230 --> 00:14:58,590
라는 거를 보여 드리고자 합니다

325
00:14:58,590 --> 00:15:02,630
그래서 이 계정에 내용을 싱크의 슬립함수 썼을 때

326
00:15:02,630 --> 00:15:04,450
두 개 빨라 졌다

327
00:15:04,450 --> 00:15:05,920
대신에 언제 빨라졌네

328
00:15:05,920 --> 00:15:09,440
레알 그만 서로 영인아 음수를 넘겼을때 빨라졌다

329
00:15:09,440 --> 00:15:14,200
나는 내용이에요 사실 저는 이쪽 것인가요

330
00:15:14,200 --> 00:15:17,640
슬리 딜레이 어떨 때 음수를 넘겨야 될지

331
00:15:17,640 --> 00:15:18,980
잘 가는 건 안 오는데

332
00:15:18,980 --> 00:15:21,290
어쨌거나 피아레이디 뿐이었습니다

333
00:15:21,290 --> 00:15:23,580
그래서 딱 한 줄 바뀌었어요

334
00:15:23,580 --> 00:15:25,600
처음에는 딜레이가 영어로

335
00:15:25,600 --> 00:15:29,160
너 먹으면은 이슬리 병이라는 거를 기다려서

336
00:15:29,160 --> 00:15:31,220
바로 리턴을 한다라는 것인데

337
00:15:31,220 --> 00:15:35,520
이때 딜레이 다음 수면은 여기에 걸리지 않고 기차도 만들고

338
00:15:35,520 --> 00:15:36,540
그 다음에 루프 에다가

339
00:15:36,540 --> 00:15:39,550
컬레이터 에다가 스케줄 인도하고 그랬는데

340
00:15:39,550 --> 00:15:41,040
이거를 변경은 내용이에요

341
00:15:41,040 --> 00:15:43,890
그래서 3명을 보면은 그냥 단순히 일들 밖에 없나

342
00:15:43,890 --> 00:15:47,000
바닷가에서 바로바로 기다렸어

343
00:15:47,000 --> 00:15:49,670
기다리지도 않고 바로 오리탕이 되는 형태인데

344
00:15:49,670 --> 00:15:51,470
처음에는 원래 음수가 넘어

345
00:15:51,470 --> 00:15:53,240
오면은 여기에서 걸리지가 않았고

346
00:15:53,240 --> 00:15:56,510
그래서 루프를 가져온 다음에 추천을 만들고 있어서

347
00:15:56,510 --> 00:15:59,590
급히 차에다가 스케줄링 하고

348
00:15:59,590 --> 00:16:00,680
이런 과정을 거치는데

349
00:16:00,680 --> 00:16:03,840
2킬로 인해서 아 그거는 생각하고

350
00:16:03,840 --> 00:16:05,520
패스 패스 로 검색 있다면

351
00:16:05,520 --> 00:16:08,700
바로 전화해라 라는 식으로 변경을 한 내용입니다

352
00:16:08,700 --> 00:16:10,910
그래서 이 작은 딸은 당일 날 제한되고

353
00:16:10,910 --> 00:16:13,230
당일 날 뼈를 올라와서 2시간 만에 뭐지 됨

354
00:16:13,230 --> 00:16:14,700
아주 작고 간다는 하지만

355
00:16:14,700 --> 00:16:18,710
아이디어로 또 성능개선을 이루어 낼 수 있다 라고

356
00:16:18,710 --> 00:16:23,110
표준 키 아닙니다

357
00:16:23,110 --> 00:16:26,110
그리고 이제 이벤트를 그쪽에서 되게 큰 형님

358
00:16:26,110 --> 00:16:26,940
계좌 있었어요

359
00:16:26,940 --> 00:16:29,240
그래서 시로다시 짜기는 짰는데

360
00:16:29,240 --> 00:16:30,500
오늘 얼마나 빨라졌네

361
00:16:30,500 --> 00:16:33,820
15분 빨라졌다 라는 게 주된 내용이고요

362
00:16:33,820 --> 00:16:36,150
여기서는 앞서 말씀드린 바와 같이

363
00:16:36,150 --> 00:16:38,620
그냥 파이썬으로 짜져 있던 코드를 씨 로 잤더니

364
00:16:38,620 --> 00:16:40,370
빠르게 빨라졌다

365
00:16:40,370 --> 00:16:43,860
그 다음에 그 이벤트를 함수안에서 사용하는 게

366
00:16:43,860 --> 00:16:47,980
러닝이프 로직을 쪽에서 했더니 또 내 벨 빨라졌다

367
00:16:47,980 --> 00:16:51,950
그 그 때 어떤 아이돌을 정액라면 패딩을 사용했는데

368
00:16:51,950 --> 00:16:55,480
이렇게 씽 으로 인해서 개성이 좀 미미하고

369
00:16:55,480 --> 00:16:59,030
대신에 skip 삼수를 파이썬 함수 사용했는데

370
00:16:59,030 --> 00:17:01,480
대신에 씨 쪽에서 바로 시장

371
00:17:01,480 --> 00:17:03,680
코를 함으로써 사계절을 했다

372
00:17:03,680 --> 00:17:08,070
그래서 이게 성능향상에 80% 여행이라고 말을 합니다

373
00:17:08,070 --> 00:17:09,990
그래서 이게 시로다시

374
00:17:09,990 --> 00:17:13,070
짱 내용을 웬만하면 그냥 넘어가려 했는데

375
00:17:13,070 --> 00:17:15,920
이거는 되게 간단한 코드 변경해 가서

376
00:17:15,920 --> 00:17:17,340
한번 보여 드리고자 합니다

377
00:17:17,340 --> 00:17:19,160
그래서 처음에는 개그맨

378
00:17:19,160 --> 00:17:21,980
슬로프가 간단한 파이썬코드 있습니다

379
00:17:21,980 --> 00:17:24,540
그래서 현재 실행 중인 어플을 가져오고

380
00:17:24,540 --> 00:17:27,690
이게 만약에 있으면은 그거 루프를 바로바로 안 하고

381
00:17:27,690 --> 00:17:30,970
만약에 없어 그러면 이벤트로 폴리스에서 이벤트 2

382
00:17:30,970 --> 00:17:32,610
1 가져와서 바나나 해라

383
00:17:32,610 --> 00:17:34,570
나는 한 4줄짜리 해 보세요

384
00:17:34,570 --> 00:17:36,340
그게 이제 씻고 들자면

385
00:17:36,340 --> 00:17:39,350
되게 되게 모습을 볼 수가 있습니다

386
00:17:39,350 --> 00:17:41,600
그래서 아까 받으심 뭐

387
00:17:41,600 --> 00:17:43,760
그냥 개인적인 노트북 가져 오는 것도

388
00:17:43,760 --> 00:17:45,530
그냥 가져 오는 거 에서 끝나는 게 아니라

389
00:17:45,530 --> 00:17:47,100
뭐 또 체크를 하고

390
00:17:47,100 --> 00:17:49,000
그 다음에 꼭 너

391
00:17:49,000 --> 00:17:51,680
아규먼트로 켜지면 프로폴리스를 가져와서 얘도

392
00:17:51,680 --> 00:17:53,060
또 널 체크를 하고

393
00:17:53,060 --> 00:17:57,030
그 다음에 이렇게 이벤트루프 콜벳을 해서 가져 왔는데

394
00:17:57,030 --> 00:17:59,460
또 그러면서 레퍼런스 카운트를 감소시키고

395
00:17:59,460 --> 00:18:02,730
그래서 최종적으로 반응하고 이런 코드인데

396
00:18:02,730 --> 00:18:06,680
여기서 주된 내용은 계좌이체를 써가지고

397
00:18:06,680 --> 00:18:08,250
계산이 됐다는 내용이에요

398
00:18:08,250 --> 00:18:12,620
그래서 보면은 원래는 파이썬의 OS

399
00:18:12,620 --> 00:18:15,880
모듈 안에 있는 함수를 호출 하고

400
00:18:15,880 --> 00:18:18,060
거기에서 이제 이제 인티저 인지

401
00:18:18,060 --> 00:18:20,320
아니면 뭔지 타입을 비교한다

402
00:18:20,320 --> 00:18:24,040
감소시키고 그런 과정을 거쳐 있는데

403
00:18:24,040 --> 00:18:26,870
이게 그냥 이런 식으로 왜 굳이 파이썬 OS

404
00:18:26,870 --> 00:18:28,150
뭐 들어 있는 kpi 될 거야

405
00:18:28,150 --> 00:18:32,510
하지 그냥 시스템 함수호출을 하면 되잖아

406
00:18:32,510 --> 00:18:34,400
이거 때문에 내가 빨라졌다

407
00:18:34,400 --> 00:18:35,660
나는 내용입니다

408
00:18:35,660 --> 00:18:37,120
기존에도 분명히 없으니까

409
00:18:37,120 --> 00:18:38,990
아이유에게 이벤트 불을 빠르게

410
00:18:38,990 --> 00:18:41,520
쓰고 싶은 쓸 수 있는 방법은 존재했습니다

411
00:18:41,520 --> 00:18:42,680
그래서 보통 UV

412
00:18:42,680 --> 00:18:46,380
로프를 같이 쓰고는 하는데 이 변경사항

413
00:18:46,380 --> 00:18:48,870
기존의 615 프로도 속도가 빨라질

414
00:18:48,870 --> 00:18:51,100
수 없었던 부분을 계산한 변경 사항입니다

415
00:18:51,100 --> 00:18:55,170
그래서 유류분은 이벤트로그 폴리쉬를 통해 가지고

416
00:18:55,170 --> 00:18:57,390
이벤트루프 그 자체에 대한 부분에 계산했다

417
00:18:57,390 --> 00:19:02,520
면은 피하는 그걸로도 제공을 api 를 제공 하지 않아서

418
00:19:02,520 --> 00:19:05,750
그 UV 로 프로도 개선할 수 없던 개선하고

419
00:19:05,750 --> 00:19:06,670
계산한 거고요

420
00:19:06,670 --> 00:19:08,370
기존에는 이게 젠트로

421
00:19:08,370 --> 00:19:11,770
폴리쉬를 자체적으로 정의함으로써 빨라질 수 있는 부분

422
00:19:11,770 --> 00:19:14,180
그리고 그 이외의 부분은 건드리지 못 했는데

423
00:19:14,180 --> 00:19:15,910
그 나머지 부분도 빨라졌다

424
00:19:15,910 --> 00:19:18,540
라는 내용이 그리고 없으니까

425
00:19:18,540 --> 00:19:21,620
아예 쪽에서 개설하는 수가 있는데

426
00:19:21,620 --> 00:19:22,910
이게 계속 계속 싱크

427
00:19:22,910 --> 00:19:24,720
싱크 막 계속 얘기를 나오는 거 같은데

428
00:19:24,720 --> 00:19:26,880
이제 이거 포함해서 딱 하나만 남았으니까

429
00:19:26,880 --> 00:19:29,060
더 기다려 주시면 좋을 거 같고요

430
00:19:29,060 --> 00:19:32,810
그래서 걔도 함수가 이제 15% 정도 빨라졌다

431
00:19:32,810 --> 00:19:34,340
나는 내용입니다

432
00:19:34,340 --> 00:19:38,490
함수가 뭐냐면은 쪽에 가 쪽에서 여러가지

433
00:19:38,490 --> 00:19:42,530
코루틴함수 들을 동시 시작할 때 사용하는 것입니다

434
00:19:42,530 --> 00:19:45,490
예를 들면은 약간 프로모션코드란

435
00:19:45,490 --> 00:19:47,840
적당히 워싱 해서 가져온 거

436
00:19:47,840 --> 00:19:51,330
뭔가 마이크로서비스 환경에서 다른 서비스들을 호출할 때

437
00:19:51,330 --> 00:19:53,980
하나 호출했다 가 응 다 보면은 그 다음 고추라고

438
00:19:53,980 --> 00:19:56,690
또 이거 리턴값 받아 온 다음에 호출 하면은

439
00:19:56,690 --> 00:20:00,280
이게 동시에 실행이 되는 게

440
00:20:00,280 --> 00:20:02,070
정렬적으로 생일 되는 거잖아요

441
00:20:02,070 --> 00:20:05,540
이거를 한 번에 그냥 난 한 번에 가져오고 싶어

442
00:20:05,540 --> 00:20:07,570
여고에서 동질적으로 돌릴 수 있는 게

443
00:20:07,570 --> 00:20:10,140
어디신가요 계정입니다

444
00:20:10,140 --> 00:20:14,430
그래서 이게 이게 저의 넘어온 코루틴 하나하나마다

445
00:20:14,430 --> 00:20:16,930
기존에는 평촌 출조에 파스를 사용

446
00:20:16,930 --> 00:20:20,420
어떤 부분이 있었는데 이 부분을 제거했다 이 부분을 뒤에서

447
00:20:20,420 --> 00:20:21,560
더 자세히 말씀 드릴게요

448
00:20:21,560 --> 00:20:25,670
그리고 게 더 펑션의 내용 안에서 인쇄

449
00:20:25,670 --> 00:20:28,400
퓨처 쪽과 중복되므로 집에 있었는데 이 부분을

450
00:20:28,400 --> 00:20:31,010
제가 옆에 10% 정도 빨라졌다

451
00:20:31,010 --> 00:20:32,960
나는 내용이고요

452
00:20:32,960 --> 00:20:39,830
기존의 파샤 를 어떻게 제거해 내면은 왼쪽 2개 도함수를

453
00:20:39,830 --> 00:20:43,730
제가 약간 이렇게 적당히 천일 건천 애고 주된내용

454
00:20:43,730 --> 00:20:46,820
로직만 남긴 난 뼈대 내용이에요

455
00:20:46,820 --> 00:20:51,060
왼쪽이 보고 오른쪽에 부터인데 보시면은 알겠는데

456
00:20:51,060 --> 00:20:57,890
기존에는 여기 마지막에 2동 콜백 부분에서 재판소를 사용

457
00:20:57,890 --> 00:20:58,240
가지고

458
00:20:58,240 --> 00:21:01,800
이게 몇 번째 몇 번째 콜 백인지 다 기록을 한 다음에

459
00:21:01,800 --> 00:21:04,170
거기서 맥콜 102

460
00:21:04,170 --> 00:21:06,710
끝날 때마다 이제 리조트를 가져와 가지고

461
00:21:06,710 --> 00:21:12,340
디자인 바꿔 떠 있던 걸로 된 거 리졸 차에다가 넣어 주고

462
00:21:12,340 --> 00:21:16,890
이제 이제 모든 추천해 끝났어

463
00:21:16,890 --> 00:21:21,170
그러면 이제 아이폰으로 너무 너무 퓨처 검사해 가지고 라우터

464
00:21:21,170 --> 00:21:24,420
퓨처 쪽에 리조트를 3 해 가지고

465
00:21:24,420 --> 00:21:27,810
그런 콜백을 넘겨 줬다며 오른쪽으로 변경

466
00:21:27,810 --> 00:21:29,870
했을 때는 왜 굳이 하나하나

467
00:21:29,870 --> 00:21:31,990
끝날 때마다 그렇게 외부에서 가져와서

468
00:21:31,990 --> 00:21:33,540
그 결과를 넘겨 줘야 되지

469
00:21:33,540 --> 00:21:36,920
그냥 다 끝날 때까지 기다리고 그거 다 끝났는데

470
00:21:36,920 --> 00:21:39,450
검사 한 다음에 진짜 사건 났을 때

471
00:21:39,450 --> 00:21:40,910
만 로직을 시작하면 되는 거

472
00:21:40,910 --> 00:21:43,540
안 라고 해 가지고 계산한 게 오른쪽 내용입니다

473
00:21:43,540 --> 00:21:48,110
그래서 이쁘면 위에는 그냥 몇 개나 끝났는지

474
00:21:48,110 --> 00:21:50,880
카운터를 증가시키는 로직 밖에 없어요

475
00:21:50,880 --> 00:21:53,060
그래서 진짜로 지금 이게 아

476
00:21:53,060 --> 00:21:55,950
네가 옮겨졌던 코루틴함수 들이 진짜 다 끝났어

477
00:21:55,950 --> 00:21:59,520
그러면 그때 2리조트 들을 남겨 줄게 하는 내용은

478
00:21:59,520 --> 00:22:04,040
그때서야 실행이 되게끔 변경을 한 거고요

479
00:22:04,040 --> 00:22:11,100
그래서 이게 더 계단에서 빨라졌다 입찰에 내용입니다

480
00:22:11,100 --> 00:22:13,050
그리고 앞서 말씀드렸듯이

481
00:22:13,050 --> 00:22:17,060
이게 그 쪽에 마지막 약간 토픽 인데요

482
00:22:17,060 --> 00:22:18,950
이니셜피 저쪽이 약간 1.2

483
00:22:18,950 --> 00:22:19,910
700 빨라졌다

484
00:22:19,910 --> 00:22:20,930
나는 내용인데

485
00:22:20,930 --> 00:22:26,680
이게 단순히 그냥 이쁘네 순서를 바꿔서 이렇게 성능이 빨라졌다

486
00:22:26,680 --> 00:22:33,240
난 내용입니다 잠시만요

487
00:22:33,240 --> 00:22:35,460
그래서 이게 선이 주된 내용은 원래 인쇄

488
00:22:35,460 --> 00:22:38,750
피처는 이제 인자로 넘어온 갑이 퓨처 가

489
00:22:38,750 --> 00:22:41,310
아니면 퓨처 로 변환하는

490
00:22:41,310 --> 00:22:43,420
그런 로직을 담고 있는 함수입니다

491
00:22:43,420 --> 00:22:46,680
거기에서 이제 몇 가지 검사를 처음에

492
00:22:46,680 --> 00:22:48,200
처음에 몇 가지 검사를 했는데요

493
00:22:48,200 --> 00:22:53,060
먼저 이게 퓨처 이게 피처 인지 먼저 검사 하고

494
00:22:53,060 --> 00:22:57,050
그다음에 콜이 틴즈 코루틴 함수로 콘서트 인지검사

495
00:22:57,050 --> 00:22:57,430
갑니다

496
00:22:57,430 --> 00:23:00,400
근데 피아노 올린

497
00:23:00,400 --> 00:23:04,580
저자는 우리가 리얼월드 에서 사용되는 걸 보면은 E 스피커

498
00:23:04,580 --> 00:23:06,790
대부분 이런 언제 컴플리트 나

499
00:23:06,790 --> 00:23:08,830
이제 계도함수 안 해서 실행이 되는데

500
00:23:08,830 --> 00:23:11,930
이때 이미 넌 언제 컴플리트

501
00:23:11,930 --> 00:23:16,340
나 걔네는 코루틴함수 가 넘어 오는 경우가 더 많아

502
00:23:16,340 --> 00:23:18,880
그래서 뭐 굳이 표절을 먼저 검사 할 필요 없이

503
00:23:18,880 --> 00:23:20,800
그냥 코루틴을 먼저 검사하면

504
00:23:20,800 --> 00:23:22,730
성능이 달라지지 않을까 생각했고

505
00:23:22,730 --> 00:23:23,970
실제로 그렇게 해 봤더니

506
00:23:23,970 --> 00:23:27,890
성능이 빨라졌어 라는 게임 내용이고요

507
00:23:27,890 --> 00:23:29,600
그리고 내가 제일 많이 보는 원래

508
00:23:29,600 --> 00:23:33,060
우리가 신칸 함수를 사용할 때는 어 싱크대

509
00:23:33,060 --> 00:23:35,620
이렇게 이런 식으로 하면 시그니처를 정리를 하는데

510
00:23:35,620 --> 00:23:39,170
그렇게 선언은 함수는 그룹 직접적으로 코루틴이 된다기보다는

511
00:23:39,170 --> 00:23:41,210
코루틴을 생성하는 함수가 되는 겁니다

512
00:23:41,210 --> 00:23:43,490
그래서 아까 예제에서 보여드렸던 시

513
00:23:43,490 --> 00:23:49,510
뭐 서비스에 딜리트 뭐 이런 함수들이 실제로는 실행했을때

514
00:23:49,510 --> 00:23:52,740
코루틴이 생성 돼 가지고 이계도함수를 넘어가진 거고

515
00:23:52,740 --> 00:23:53,680
이런 식으로 리얼

516
00:23:53,680 --> 00:23:55,580
저쪽에서는 퓨처 보다는

517
00:23:55,580 --> 00:23:58,850
코루틴 자체를 넘어 넘길 일이 더 많으니까

518
00:23:58,850 --> 00:24:00,890
이렇게 순서 이 부분에 순서를 바꿨고

519
00:24:00,890 --> 00:24:06,460
그래가지고 성능이 향상되었다 하는 게 그 주된 내용은

520
00:24:06,460 --> 00:24:08,600
그리고 우리가 내리지도 업체 봤을 때

521
00:24:08,600 --> 00:24:11,140
어 신카연 쪽도 되게 많은 큰

522
00:24:11,140 --> 00:24:13,820
성능개선 있었다 라고 써 주면 돼 있는데

523
00:24:13,820 --> 00:24:16,160
마찬가지로 타이핑 모듈 쪽에서도 되게

524
00:24:16,160 --> 00:24:19,850
많은 성능개선이 있었다고 적혀 있습니다

525
00:24:19,850 --> 00:24:23,130
그래서 보면은 이제 pppd-561 따라서

526
00:24:23,130 --> 00:24:26,430
타이핑 모드로 임포트 하는데 7 대 빨라졌고

527
00:24:26,430 --> 00:24:29,540
그리고 다양한 오퍼레이션 들이 이제 좀 빨라졌다

528
00:24:29,540 --> 00:24:32,170
일하는 게 이거 주된내용 있고요

529
00:24:32,170 --> 00:24:34,910
그래서 어떤 점이 변경이 됐냐면

530
00:24:34,910 --> 00:24:37,360
타이핑해서 제네릭 형식을 더 잘 지원하기 위해

531
00:24:37,360 --> 00:24:40,960
그냥 찝찝해서 들을 추가했다 라는 게 주된내용 해요

532
00:24:40,960 --> 00:24:44,630
근데 이게 왜 지금 그냥 그 pap-48 샀대

533
00:24:44,630 --> 00:24:47,060
우리가 구원을 해서 빠르게 만들었으면

534
00:24:47,060 --> 00:24:51,040
될걸 왜 지금 와서 어쩌냐 하는 거는 원래 처음에 pap-48

535
00:24:51,040 --> 00:24:54,210
회사에서 타이핑을 제안했을 때는 인터프리터

536
00:24:54,210 --> 00:24:58,230
레벨변경 없도록 자리 잡고 디자인이었습니다

537
00:24:58,230 --> 00:25:00,430
그래서 뭐 찬에게 티를 넘기거나

538
00:25:00,430 --> 00:25:02,260
이터레이블 페인트를 넘기거나

539
00:25:02,260 --> 00:25:05,380
모리스 이런 식으로 우리가 흔히 사용하는 식으로

540
00:25:05,380 --> 00:25:08,030
타이머 노테이션 구현하기 위해서는

541
00:25:08,030 --> 00:25:10,480
여러가지 트리가 사용할 수 밖에 없었습니다

542
00:25:10,480 --> 00:25:11,560
이거 딱 봤을 때

543
00:25:11,560 --> 00:25:12,550
우리가 주로 뭐

544
00:25:12,550 --> 00:25:14,290
뒷장은 에서 사용하는 게 다

545
00:25:14,290 --> 00:25:15,930
아이템 메소드를 다시

546
00:25:15,930 --> 00:25:18,630
오버라이드 하면 되는 거 아닐까 라고 생각했지만

547
00:25:18,630 --> 00:25:22,920
실제로는 그 메서드는 인스턴스에서 만 동작하고

548
00:25:22,920 --> 00:25:24,570
클래스에서는 동작하지 않습니다

549
00:25:24,570 --> 00:25:27,210
그래 가지고 이거를 구현하기 위해서는

550
00:25:27,210 --> 00:25:29,450
여러가지 트립 들을 수 밖에 없는데요

551
00:25:29,450 --> 00:25:33,740
이제 그 회사가 엑센트 대고 사용되는지

552
00:25:33,740 --> 00:25:34,880
되게 많은 시간이 흘렀고

553
00:25:34,880 --> 00:25:37,660
이제 다들 보면은 파이팅 타입힌트 가 널리 사용되는 가

554
00:25:37,660 --> 00:25:40,100
이제 이제 안 아플 때가 왔다 해 가지고

555
00:25:40,100 --> 00:25:43,480
제가 늘 위해서 메써드를 추가했다

556
00:25:43,480 --> 00:25:47,180
나는 게 dpo600Z 내용입니다

557
00:25:47,180 --> 00:25:48,560
그래서 이런 클래스

558
00:25:48,560 --> 00:25:51,380
겟 아이템이라는 더 메소드가 새롭게 추가되는데

559
00:25:51,380 --> 00:25:53,070
이게 어떻게 성능을 계정 시켰는지

560
00:25:53,070 --> 00:25:56,750
는 너무 앞으로 나와 있기 때문에 여기서는 좀 생각을 하고

561
00:25:56,750 --> 00:26:00,450
만약에 더 알고 싶으시다면

562
00:26:00,450 --> 00:26:02,570
입자를 한번 봐 주시면 될 거 같고요

563
00:26:02,570 --> 00:26:05,390
그래서 그동안 타이핑 모조리 임포트가 거의 다 드렸고

564
00:26:05,390 --> 00:26:07,760
이게 거의 채널을 타일 때문이었는데

565
00:26:07,760 --> 00:26:11,020
이제 이거에 제안을 좀 해제해 가지고 계산을 시켰더니

566
00:26:11,020 --> 00:26:12,460
모드 리포트도 빨라졌고

567
00:26:12,460 --> 00:26:16,740
E 클래스 클래스 생성 또 빨라졌다 그냥 내용입니다

568
00:26:16,740 --> 00:26:20,110
근데 여기서 유일한 브레이킹 체인지가 발생하는데

569
00:26:20,110 --> 00:26:26,590
여기서는 이제 기존의 어떤 사용자가 임의로 언더클래스

570
00:26:26,590 --> 00:26:29,660
겟 아이템 메소드를 내가 마음대로 사용하고 있었을 때

571
00:26:29,660 --> 00:26:31,710
그 사용자는 만약에 버전업을 하면은

572
00:26:31,710 --> 00:26:34,080
당연히 그렇게 편지가 발생을 하게 되겠죠

573
00:26:34,080 --> 00:26:38,250
근데 담아 여기서 파이널컷 블로거들은 이미 소들은 경고

574
00:26:38,250 --> 00:26:39,490
없이 쓸 수 있다라고

575
00:26:39,490 --> 00:26:42,270
우리가 저거 놨기 때문에 이 부분은 거를 안 해도

576
00:26:42,270 --> 00:26:43,390
될 거 같다 너 갑니다

577
00:26:43,390 --> 00:26:47,900
그래서 만약에 우리가 파이썬코드로 사용하더라도

578
00:26:47,900 --> 00:26:49,990
점점 엘소드를 임의로 구현해 가지고

579
00:26:49,990 --> 00:26:52,170
사용하는 이런 표정 없도록

580
00:26:52,170 --> 00:26:55,280
안전하게 사용하는 방법이 거 같고요

581
00:26:55,280 --> 00:26:58,550
그리고 이틀 정렬 쪽에서도 40% 에서

582
00:26:58,550 --> 00:27:02,010
75% 정도까지 성능개선이 이루어졌습니다

583
00:27:02,010 --> 00:27:04,740
여기서는 이게 뭐 정리 알고리즘의 팀소트

584
00:27:04,740 --> 00:27:06,340
딴 거로 변경된 게 아니고

585
00:27:06,340 --> 00:27:10,040
뭐 정확히 말하자면 정리하고 살고 내용이 바뀐 했겠죠

586
00:27:10,040 --> 00:27:14,700
근데 뭐 주덴 소통방식이 바뀐 거는 아니고요

587
00:27:14,700 --> 00:27:17,160
적용된 아이디어는 리스트를 정리할 때

588
00:27:17,160 --> 00:27:21,490
우리가 정리 할 때마다 그 두 타임을 검사하는데

589
00:27:21,490 --> 00:27:22,920
우리 그러지 말고

590
00:27:22,920 --> 00:27:24,740
그 대부분의 경우

591
00:27:24,740 --> 00:27:27,940
리스트의 서로 동일한 타입의 넘어온다 라고 가정을 하자

592
00:27:27,940 --> 00:27:29,440
라는 게 줄여요

593
00:27:29,440 --> 00:27:32,480
그래서 더 필요할 때마다 우리 타입검사 너무 비싼데

594
00:27:32,480 --> 00:27:33,720
그런 거 하지 말고

595
00:27:33,720 --> 00:27:38,430
미리 프리체크 스테이지를 더 가지고 한번 쫙 검사해도 자

596
00:27:38,430 --> 00:27:39,460
나는 거예요

597
00:27:39,460 --> 00:27:43,140
그래서 여러 가지 가정들을 세우고 프리츠커 스테이지를 만들었습니다

598
00:27:43,140 --> 00:27:45,740
기존에는 기존에 사용하던 세이프 오브젝트

599
00:27:45,740 --> 00:27:47,220
컴페어 나는 거고

600
00:27:47,220 --> 00:27:48,640
이거는 이제 여러가지

601
00:27:48,640 --> 00:27:51,040
팔리스터 안에 있다고 가정을 하는 거고

602
00:27:51,040 --> 00:27:52,960
기존에 사용하던 안전한 방식

603
00:27:52,960 --> 00:27:54,950
만약에 다른 것들을 검사해 봤는데

604
00:27:54,950 --> 00:27:58,010
도다 실패를 했어 이 과정이 틀렸어 풀백으로

605
00:27:58,010 --> 00:28:01,140
자동은 디폴트로 사용되는게 세이프 오브젝트 컴퓨터입니다

606
00:28:01,140 --> 00:28:04,050
그래서 다른 이제 언세이프

607
00:28:04,050 --> 00:28:06,690
하지만 우리가 향상을 얻을 수 있는 가정들은

608
00:28:06,690 --> 00:28:08,290
예를 들면은 리스트에 있는

609
00:28:08,290 --> 00:28:10,990
모든 오브젝트가 같은 타입이야 라고 하는 것

610
00:28:10,990 --> 00:28:14,090
그 다음에 뭐 같은 같은 문자열이어야 인투 야

611
00:28:14,090 --> 00:28:15,780
그리고 촛불로 다 이루어져 있어

612
00:28:15,780 --> 00:28:19,140
나는 여러 가지 가정들을 세워졌고 요 틀어 줘

613
00:28:19,140 --> 00:28:22,280
그래서 이런 가정들을 검증을 하고 많이 맞았어

614
00:28:22,280 --> 00:28:24,350
그러면은 비용이 비싸니

615
00:28:24,350 --> 00:28:27,570
안정성 검사를 오해하는 최적화된 전용 함수를 사용하자

616
00:28:27,570 --> 00:28:31,860
그 컴퓨터 함수로 사용하자 나는 계좌 내용입니다

617
00:28:31,860 --> 00:28:32,700
그래서 코드를 보면

618
00:28:32,700 --> 00:28:35,960
실제로 이 앞장에서는 여러가지 시킨 대로 합니다

619
00:28:35,960 --> 00:28:38,810
그래서 리스트를 다 돌면서 뭐 타입을 체크 한다던가

620
00:28:38,810 --> 00:28:41,240
그랬었던 플래그를 껐다 켰다

621
00:28:41,240 --> 00:28:43,300
던가 그런 일들을 하고 있는

622
00:28:43,300 --> 00:28:45,160
여기서는 생각하도록 하고요

623
00:28:45,160 --> 00:28:47,460
그래서 당연히 줄 수 있는 이유

624
00:28:47,460 --> 00:28:48,440
아주 최악의 경우

625
00:28:48,440 --> 00:28:51,290
그러면 이런 가정들을 여러가지 가정들을 검사

626
00:28:51,290 --> 00:28:52,980
하느라 오히려 눌러 줄 수도 있지 않냐

627
00:28:52,980 --> 00:28:55,200
하는 게 하는 우려가 있을 수 있고

628
00:28:55,200 --> 00:28:56,730
그 내용도 당연히 많습니다

629
00:28:56,730 --> 00:28:59,560
그래서 만약에 최악의 경우에는 기본동작 2

630
00:28:59,560 --> 00:29:01,520
2 세이프 오브젝트 컴퓨터로 넘어가니까

631
00:29:01,520 --> 00:29:05,080
지 체크 때문에 15% 정도 늦어지긴 하지만

632
00:29:05,080 --> 00:29:07,290
대부분의 경우 에서는 웬만해서는

633
00:29:07,290 --> 00:29:11,030
리스트 안에는 다 비슷한 똑같은 타입들이 들어 있으니까

634
00:29:11,030 --> 00:29:12,130
좋다

635
00:29:12,130 --> 00:29:15,680
그리고 조금 들어가는 것도 아니고 40%

636
00:29:15,680 --> 00:29:17,590
75% 정도까지 들어가니까

637
00:29:17,590 --> 00:29:19,450
이거는 일찍 될만하다 라고 해 가지고

638
00:29:19,450 --> 00:29:22,070
적용이 되었습니다

639
00:29:22,070 --> 00:29:26,080
그리고 집 전화기 복사 쪽에서도 약간 간단한데

640
00:29:26,080 --> 00:29:28,670
되게 큰 성능개선 있었어요

641
00:29:28,670 --> 00:29:33,130
베티스커피 를 사용할 때 5.5 게 빨라 졌다 되고요

642
00:29:33,130 --> 00:29:36,590
이게 원래는 기존의 우리가 이런 집도

643
00:29:36,590 --> 00:29:39,710
커피를 실행할 때는 먼저 빈집들이 만든 다음에

644
00:29:39,710 --> 00:29:42,010
키밸류 들을 하나하나 넣어주던 게

645
00:29:42,010 --> 00:29:43,470
기존 동작 방식이에요

646
00:29:43,470 --> 00:29:44,670
근데 이었어

647
00:29:44,670 --> 00:29:45,890
우리 그러지 말고

648
00:29:45,890 --> 00:29:48,480
그냥 기존에 있던 전체 키랑

649
00:29:48,480 --> 00:29:51,670
유령의 메모리를 통째로 복사를 뜨잖아

650
00:29:51,670 --> 00:29:56,070
그 다음에 파이썬은 이제 내 거는 방식으로 동작 하니까

651
00:29:56,070 --> 00:29:57,850
카운트 증가시켜 줄 일이 있는데

652
00:29:57,850 --> 00:29:59,480
그거는 메모리 복사한 다음에

653
00:29:59,480 --> 00:30:03,430
나중에 한번 쫙 돌면서 증가시켜 줘

654
00:30:03,430 --> 00:30:05,150
이거는 증가시켜 주자

655
00:30:05,150 --> 00:30:10,020
아이디어 고요 일어나 이자를 정리할 때 리뷰어는 알 것

656
00:30:10,020 --> 00:30:12,190
위드커피 자주 사용하지 않는 기능인데

657
00:30:12,190 --> 00:30:13,680
이것 때문에 식구들 추가하고

658
00:30:13,680 --> 00:30:16,030
하면은 유지보수 너무 힘들지 않을까

659
00:30:16,030 --> 00:30:17,930
라는 거를 염려했는데

660
00:30:17,930 --> 00:30:21,400
이제 저자는 내가 50만 줄 이상 이상해

661
00:30:21,400 --> 00:30:24,360
프로젝트에서도 지스카피의 활발히 쓰는 걸 받고

662
00:30:24,360 --> 00:30:29,260
특히 오른쪽에서는 커피를 자주 사용한 다라고 설정을 하고

663
00:30:29,260 --> 00:30:32,330
그래서 그리고 이것도 성능이 못 되는 것도 아니고

664
00:30:32,330 --> 00:30:35,510
이렇게 크게 향상이 되는 되는데

665
00:30:35,510 --> 00:30:37,960
이건 충분히 있다라고 설정합니다

666
00:30:37,960 --> 00:30:40,420
참고로 이 저자는 것인가요

667
00:30:40,420 --> 00:30:44,700
쪽에서 포스그레 라이브러리를 구입하는

668
00:30:44,700 --> 00:30:47,890
메인테이너 있고요

669
00:30:47,890 --> 00:30:49,210
소개시켜드리려고 그래

670
00:30:49,210 --> 00:30:51,790
가지고 가서 말씀 드릴 말씀도 있고

671
00:30:51,790 --> 00:30:54,380
커피가 빨라졌다 나는 내용입니다

672
00:30:54,380 --> 00:30:55,880
그리고 마지막으로 11번째 소피

673
00:30:55,880 --> 00:30:59,280
그러는 이제 우리가 정규표현식 부분도 빨라졌어요

674
00:30:59,280 --> 00:31:00,510
어느 부분이 빨라졌네

675
00:31:00,510 --> 00:31:02,650
하면은 케이스인 센서티브

676
00:31:02,650 --> 00:31:08,080
매칭 20대 정도 빨라졌다 라는 게 내용인데요

677
00:31:08,080 --> 00:31:09,600
우리가 기존의 케이스에서

678
00:31:09,600 --> 00:31:13,310
집을 모드에서는 모든 문자를 로봇 케이스로 만든 다음에

679
00:31:13,310 --> 00:31:18,700
몇 가지 최적화를 비활성 비활성화에서 사용을 했습니다

680
00:31:18,700 --> 00:31:21,850
근데 저거 한번 살펴보니까 아이고

681
00:31:21,850 --> 00:31:24,360
모든 문자가 뭐 케이스가 있는 것도 아니고

682
00:31:24,360 --> 00:31:25,360
오로지 한 2천 7백

683
00:31:25,360 --> 00:31:29,020
개 정도 많이 외로워 케이스 오케이 제가 따로 있는데

684
00:31:29,020 --> 00:31:32,350
이거 굳이 모든문자열 에 대해서 너무 케이스를 만들고

685
00:31:32,350 --> 00:31:34,960
모든 문제에 대해서 최적화를 비활성 하는 거는

686
00:31:34,960 --> 00:31:39,120
너무 우리가 우리 손으로 성능을 느리게 하는 거 아니야

687
00:31:39,120 --> 00:31:40,410
해가지고 자는 중 거고요

688
00:31:40,410 --> 00:31:44,350
침저 아스키모드 에서는 뭐 2700개 까지 갈 것도 없이

689
00:31:44,350 --> 00:31:46,560
산 50여개 글자만

690
00:31:46,560 --> 00:31:50,480
케이스 부분이 있다 보니까 이 개선으로 인해서 성령이 더욱더

691
00:31:50,480 --> 00:31:55,790
비약적으로 항상 이 되는 내용입니다 없대

692
00:31:55,790 --> 00:32:01,060
그래서 이런 식으로 정규 표현식 또 빨라졌다

693
00:32:01,060 --> 00:32:04,900
토끼가 내용이고 먼저 끝나기 전에 그래서 아

694
00:32:04,900 --> 00:32:07,050
어떤 내용 때문에 파이썬 3.7

695
00:32:07,050 --> 00:32:08,580
빠르다고 하는지는 알겠어

696
00:32:08,580 --> 00:32:10,850
근데 그거 진짜야 진짜 빨라진 거 맞아

697
00:32:10,850 --> 00:32:12,530
나도 어머니 줄 수 있습니다

698
00:32:12,530 --> 00:32:15,110
그래서 제가 소개해드린 11가지

699
00:32:15,110 --> 00:32:19,470
토픽 중에서 이거를 다 짬뽕 시켜 가지고 성능

700
00:32:19,470 --> 00:32:22,400
비교 하는 거는 약간 의미가 없을 것 같고요 이 중에서

701
00:32:22,400 --> 00:32:26,220
적당히 어울릴만한 메소드 호출 그다음에 것인가

702
00:32:26,220 --> 00:32:28,350
이쪽에 썬루프 가져와서 실행하는 법

703
00:32:28,350 --> 00:32:31,010
그다음에 우리가 이제 편하게 사용하면 타이핑

704
00:32:31,010 --> 00:32:33,240
뭐 저쪽도 가져 와서 정리하는 거

705
00:32:33,240 --> 00:32:37,290
이거에 대해서 많이 약간의 벤치마크를 돌려봤습니다

706
00:32:37,290 --> 00:32:40,980
그래서 약간은 억지스러운 수도 있어요 2함수 가무엇인가요

707
00:32:40,980 --> 00:32:45,140
신림 영도 들어가고 근데 이거를 이제 약간 뭐 리모트 콜

708
00:32:45,140 --> 00:32:47,440
이모티콘 일이라고 생각을 하고

709
00:32:47,440 --> 00:32:51,970
이런 식으로 다양한 어찌보면은 좀 사용할 판 코드를 3.6

710
00:32:51,970 --> 00:32:54,270
와 3G 로 돌려 봤을 때 얼마나 빨라

711
00:32:54,270 --> 00:32:59,040
존나 봤을 때 이제 파이버프로 도구를 사용해서

712
00:32:59,040 --> 00:33:03,450
벤치마킹해 받고요 95% 정도로 보면은 원래 3.6

713
00:33:03,450 --> 00:33:04,770
에서는 이게

714
00:33:04,770 --> 00:33:06,110
300M 정도 걸리는데

715
00:33:06,110 --> 00:33:08,190
3.7 해서는 이게 거의 반절로 줄었다

716
00:33:08,190 --> 00:33:11,460
다시 이게 밀리세컨드 절대적인 가비 중요하지 않고

717
00:33:11,460 --> 00:33:12,780
그냥 비율로 봤을 때

718
00:33:12,780 --> 00:33:15,830
얼마나 좋냐 를 보면은 거의 40% 넘게

719
00:33:15,830 --> 00:33:18,750
반절 가까이 주는 거를 우리가 볼 수 있습니다

720
00:33:18,750 --> 00:33:22,190
그래서 우리가 파이썬 3.7

721
00:33:22,190 --> 00:33:25,170
달라진 게 맞네 라고 생각할 수 있을 것 같고요

722
00:33:25,170 --> 00:33:27,010
제가 끝으로 드리고 싶은 말

723
00:33:27,010 --> 00:33:28,800
파이썬 3.7 저는 추천합니다

724
00:33:28,800 --> 00:33:33,310
특히 코드베이스가 어싱크 비동기 쪽으로만 이루어져 있다 며

725
00:33:33,310 --> 00:33:35,720
특히 3.7 추천할만 하고요

726
00:33:35,720 --> 00:33:40,750
파이썬 있느라고 하시는 느리다고 오늘만은 맞는데 말이 많은데

727
00:33:40,750 --> 00:33:42,010
저도 그거에 동감합니다

728
00:33:42,010 --> 00:33:42,940
파이썬은 느려요

729
00:33:42,940 --> 00:33:46,530
하지만 저는 그걸 신경 쓰지 않고 사용을 하고 있고요

730
00:33:46,530 --> 00:33:49,100
링크가 현재 놀려 지났는데

731
00:33:49,100 --> 00:33:50,890
발표 자료 공개 해 놨으니까

732
00:33:50,890 --> 00:33:54,320
궁금하신분들을 이 토끼 에 관한 글을 읽어 보시고

733
00:33:54,320 --> 00:33:54,930
추천 드립니다

734
00:33:54,930 --> 00:33:57,060
그리고 이런 파이썬

735
00:33:57,060 --> 00:34:00,360
퍼포먼스의 퍼포먼스인 프론트에 특정코드

736
00:34:00,360 --> 00:34:03,610
디벨로퍼 분들이 되게 많은 기여를 해주셨어요

737
00:34:03,610 --> 00:34:06,900
그래 가지고 2분들에게 감사함 감상하고

738
00:34:06,900 --> 00:34:09,780
그래서 여러분들이 기존에 파이썬 3.7 그래

739
00:34:09,780 --> 00:34:12,000
그나마 빠르구나 라고 생각을 하셨다면

740
00:34:12,000 --> 00:34:13,750
발표를 통해 가지고 아

741
00:34:13,750 --> 00:34:19,080
이래서 빠르구나 를 알고 가시는 개가 되시길 바랍니다

742
00:34:19,080 --> 00:34:35,240
감사합니다 발표 내 주신 청결님

743
00:34:35,240 --> 00:34:38,310
감사합니다 지금부터 질의 응답 시간을 가지겠습니다

744
00:34:38,310 --> 00:34:40,370
궁금한 점 있으시면 분은 가운데

745
00:34:40,370 --> 00:34:41,760
마련된 스탠딩 마이크

746
00:34:41,760 --> 00:34:44,880
앞으로 나와서 질문을 주시면 됩니다

747
00:34:44,880 --> 00:34:48,920
원활한 질의응답을 위해서 질문을 한 두 개 정도 짧게 부탁드리겠습니다

748
00:34:48,920 --> 00:34:52,190
그래야 발표 님께서도 질문 내용을 쉽게 기억하고

749
00:34:52,190 --> 00:34:55,360
답변하실 수 있으니 양해 부탁드리겠습니다

750
00:34:55,360 --> 00:35:01,030
시간 관계상 3분 정도 만 발표 질의 응답 시작하겠습니다

751
00:35:01,030 --> 00:35:04,690
앞에 스탠딩마이크 보이신 보이시나요

752
00:35:04,690 --> 00:35:06,040
그 쪽으로 나와 주시면 되겠습니다

753
00:35:06,040 --> 00:35:12,960
참고로 질문 해주시는 못깨는 도서관을 상품으로 드리겠습니다

754
00:35:12,960 --> 00:35:37,280
랩 어 일단은 저희가 프로덕션에서 3.0

755
00:35:37,280 --> 00:35:40,140
버전과 3.7 버전을 비교하지는 않았어요

756
00:35:40,140 --> 00:35:42,430
다만 제 생각으로는 그래도

757
00:35:42,430 --> 00:35:45,480
어느 정도 프로덕션에 사용하는 오직 때를 반영을 했고

758
00:35:45,480 --> 00:35:48,210
실제로 벤치마크 결과 3600

759
00:35:48,210 --> 00:35:49,560
3.72 빨라졌다

760
00:35:49,560 --> 00:35:50,950
라는 거를 보여 주고 있으니까

761
00:35:50,950 --> 00:35:53,300
아마 앞으로도 옥션에서도 충분히 의 하지 않을까

762
00:35:53,300 --> 00:35:58,570
생각을 합니다
