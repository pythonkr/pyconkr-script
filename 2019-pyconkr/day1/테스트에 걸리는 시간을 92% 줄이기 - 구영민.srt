1
00:00:03,060 --> 00:00:09,630
안녕하세요 저는 테스트에 걸리는 시간을 92% 줄이게

2
00:00:09,630 --> 00:00:12,960
라는 주제로 의 발표를 시작하게 된 겁니다

3
00:00:12,960 --> 00:00:17,250
일단 보내시 사십분 거의 마지막 시간 돼

4
00:00:17,250 --> 00:00:19,290
이렇게 많은 분들이 아직 가지고 너무 감사하고요

5
00:00:19,290 --> 00:00:26,800
뭐 이제 간단하게 말씀을 드리면

6
00:00:26,800 --> 00:00:30,290
은 왜 테스트에 걸리는 시간이 90% 들었냐

7
00:00:30,290 --> 00:00:32,870
그러면은 그냥 기본적으로 하시는 일

8
00:00:32,870 --> 00:00:35,330
거는 너무 비율적으로 테스트를 하고 있었다

9
00:00:35,330 --> 00:00:36,990
가는 거야 그래 가지고

10
00:00:36,990 --> 00:00:39,450
이제 저희가 비유적인 테스트

11
00:00:39,450 --> 00:00:42,470
테스트 로 바꾸는 과정에 대해 가지고

12
00:00:42,470 --> 00:00:47,080
이것저것 사용 안 해 가지고 설명을 들을 예정입니다

13
00:00:47,080 --> 00:00:53,230
한 가지의 퀴즈를 하는 드리겠습니다

14
00:00:53,230 --> 00:00:56,200
코드가 하나 있는데요 이 테스트가 하나

15
00:00:56,200 --> 00:01:00,590
있는데 이 테스트는 100명의 사용자를 만드는 됐어요

16
00:01:00,590 --> 00:01:04,050
과연 몇 초가 걸릴까요

17
00:01:04,050 --> 00:01:08,540
뭐 데이터베이스 인서트란 백번쯤 하니까 길어 봤자

18
00:01:08,540 --> 00:01:12,270
한 5초 걸리지 않을까 싶은데

19
00:01:12,270 --> 00:01:18,570
20초 걸렸습니다 100명을 만든 데이터 걸린다는 거는

20
00:01:18,570 --> 00:01:21,120
사실 되게 이상한 일이잖아요

21
00:01:21,120 --> 00:01:22,700
그래 가지고 이거에 대해 가지고

22
00:01:22,700 --> 00:01:25,420
왜 걸리는지 알아 봤는데

23
00:01:25,420 --> 00:01:27,240
정답은 기부 잔고는

24
00:01:27,240 --> 00:01:30,770
기본적으로 비밀번호를 과장한테 세시 처리를 합니다

25
00:01:30,770 --> 00:01:32,230
근데 이게 느려서 입니다

26
00:01:32,230 --> 00:01:35,940
이게 느려서 100명의 위인들 1절 걸렸던 겁니다

27
00:01:35,940 --> 00:01:38,890
그래서 제가 첫 번째로 말씀드리면요

28
00:01:38,890 --> 00:01:42,890
패스워드 혁신이라는 해서입니다

29
00:01:42,890 --> 00:01:45,970
일단 기본적으로 비밀번호

30
00:01:45,970 --> 00:01:47,870
라는 거를 어떻게 저장을 하는데

31
00:01:47,870 --> 00:01:50,640
어떻게 웹서비스에서 저장을 하는지에 대해서

32
00:01:50,640 --> 00:01:52,080
설명을 하면요

33
00:01:52,080 --> 00:01:56,080
비번은 이제 창문으로 사랑을 하면 안 돼요

34
00:01:56,080 --> 00:01:59,080
내가 말을 하면 안 되도록 소리를 내 가지고

35
00:01:59,080 --> 00:02:00,160
저장을 해야 되는데요

36
00:02:00,160 --> 00:02:03,310
보통 이제 일반적으로는 해시함수란 거를 이용을 해 가지고

37
00:02:03,310 --> 00:02:05,090
소리를 내어 해시함수란

38
00:02:05,090 --> 00:02:10,610
거는 입력된 값이 입력한 입력된 값이 코코아가 안되게

39
00:02:10,610 --> 00:02:13,350
아무 말을 하는 단방향암호화 라고

40
00:02:13,350 --> 00:02:16,190
강력하게 설명을 드릴 수 있겠는데요

41
00:02:16,190 --> 00:02:19,470
내일에 해시함수란 거는 보통 되게

42
00:02:19,470 --> 00:02:24,070
빠르게 처리를 해야 되는 빠르게 처리가 되기 때문에

43
00:02:24,070 --> 00:02:26,160
한 번만 하면 되게 빨라요

44
00:02:26,160 --> 00:02:28,370
그러면은 해커가 해커가

45
00:02:28,370 --> 00:02:30,640
비밀번호 테이블을 들고 가가지고

46
00:02:30,640 --> 00:02:35,120
대박 무차별적으로 때려 보면은 금방 나오겠죠

47
00:02:35,120 --> 00:02:39,120
그래서 키스 2층이라는 거를 붙었습니다

48
00:02:39,120 --> 00:02:40,740
키스트레칭 일하는 건 보통 이래

49
00:02:40,740 --> 00:02:42,740
어떤 건 하면은 비밀번호가

50
00:02:42,740 --> 00:02:44,650
이제 맞는지 확인 을 하는데

51
00:02:44,650 --> 00:02:47,570
이제 어느 정도 한 0.9 통해서 0.1

52
00:02:47,570 --> 00:02:50,110
더 이상 정도 걸리게 하는 거예요

53
00:02:50,110 --> 00:02:51,980
왜냐면은 유저가 로그인하는데

54
00:02:51,980 --> 00:02:56,710
0.1 초 관련 0.2 크게 신경 안 쓸 거든요

55
00:02:56,710 --> 00:03:02,000
그래서 뭐 대충 예시를 말씀드리는 해시함수를 결과를

56
00:03:02,000 --> 00:03:02,600
또 세시 하고

57
00:03:02,600 --> 00:03:04,820
세시 하고 세시 하는 거를 한 15만 원

58
00:03:04,820 --> 00:03:09,050
정도 반복을 하면 이렇게 0.2 정도 걸립니다

59
00:03:09,050 --> 00:03:11,450
냉장고는 따로 지정을 안 하면

60
00:03:11,450 --> 00:03:15,270
이제 기본적으로는 이제 pbkdf pbkdf2

61
00:03:15,270 --> 00:03:17,960
SH256 이란 알고 있었는데요

62
00:03:17,960 --> 00:03:20,580
그냥 몰라도 그냥 너희는 겁니다 느리니

63
00:03:20,580 --> 00:03:23,470
근데 이제 웹 서비스에 들린다는 좋아요

64
00:03:23,470 --> 00:03:25,390
근데 이래 테스트 시간을 들린다는

65
00:03:25,390 --> 00:03:28,270
게 일등공신을 가능합니다

66
00:03:28,270 --> 00:03:32,680
아까 테스트를 다시 구매하는 이제 0.1 초 걸리니까

67
00:03:32,680 --> 00:03:36,170
100명이면 200초 걸리는 거예요

68
00:03:36,170 --> 00:03:38,570
밑에 보시면 이제 테스트가 나도 라는데

69
00:03:38,570 --> 00:03:41,610
20초가 걸렸다고 돼 있죠

70
00:03:41,610 --> 00:03:44,890
그래서 어떻게 하면 되냐

71
00:03:44,890 --> 00:03:48,580
이래 테스트 황정일 때에는 비밀번호 이래

72
00:03:48,580 --> 00:03:53,840
헬싱 알고리즘을 이제 빠른 걸로

73
00:03:53,840 --> 00:03:54,970
이제 계속 빠른 걸로

74
00:03:54,970 --> 00:03:57,420
이제 교체를 해 가지고 사용하고 있어요

75
00:03:57,420 --> 00:03:59,500
예를 들어 가지고 이제 MD5

76
00:03:59,500 --> 00:04:01,900
패스워드 했어 하라는 거 있는데

77
00:04:01,900 --> 00:04:06,300
MD5 패스트 패션 하는 거는 이제 한 10년 10년

78
00:04:06,300 --> 00:04:09,580
20년 20년 그 정도 만들어 가지고

79
00:04:09,580 --> 00:04:14,360
이제 10년 전에 이건 위험하니까 쓰지 마라 라고

80
00:04:14,360 --> 00:04:21,280
기대 되게 되게 많은 곳에서 이제 쓰지 말라고 하는 알고리즘

81
00:04:21,280 --> 00:04:24,500
해요 근데 저희는 테스트에서는 쓸 거예요

82
00:04:24,500 --> 00:04:27,000
왜냐면 내가 빠르거든요

83
00:04:27,000 --> 00:04:28,440
근데 이제 이 설정을

84
00:04:28,440 --> 00:04:31,260
이제 프로덕션 사용을 하시면 절대 안 됩니다

85
00:04:31,260 --> 00:04:34,790
그래서 되게 취약하기 때문에

86
00:04:34,790 --> 00:04:38,370
그러면 이제 설정을 변경을 하고

87
00:04:38,370 --> 00:04:42,320
다시 테스트를 하면 그냥 아무것도 한 거 없이

88
00:04:42,320 --> 00:04:46,280
그냥 이 설정만 추가를 한 것뿐인데 걸리던데

89
00:04:46,280 --> 00:04:50,240
그때가 0.03 더 추가 관리 됩니다

90
00:04:50,240 --> 00:04:53,230
이렇게 하면 이제 그냥 저희

91
00:04:53,230 --> 00:04:56,180
내부적으로는 한 10분 정도 줄어든 거 같아요

92
00:04:56,180 --> 00:05:10,120
테스트가 이걸 적용하면서 오킹 아

93
00:05:10,120 --> 00:05:19,000
죄송합니다 두 번째로 말씀드릴 주제는 뭐 킹이라는 주세요

94
00:05:19,000 --> 00:05:24,710
강력하게 모킹 혹시 모킹 한번 들어보신분 계신가요

95
00:05:24,710 --> 00:05:28,400
네 아무도 없는 걸로 하겠습니다

96
00:05:28,400 --> 00:05:32,380
뭐 킹이라는 건 기본적으로 메소드 호출

97
00:05:32,380 --> 00:05:35,750
가짜 객체 내야 메소드 호출

98
00:05:35,750 --> 00:05:38,540
해 가지고 고정된 응답을 안 하고요

99
00:05:38,540 --> 00:05:42,960
그다음에 실제처럼 동작을 하면서 함수 파라미터

100
00:05:42,960 --> 00:05:45,860
안녕 리턴값 같은 거를 더 검증을 할 수 있는

101
00:05:45,860 --> 00:05:48,020
객체라고 말씀을 드릴 수 있을 것 같아요

102
00:05:48,020 --> 00:05:50,520
근데 솔직히 이것만 봐서는 뭔지 알 수가 없어요

103
00:05:50,520 --> 00:05:54,500
예 예 안 와서 이제부터 저도 괜찮습니다

104
00:05:54,500 --> 00:05:58,150
뭐 예를 들어 가지고 말씀 드릴게요

105
00:05:58,150 --> 00:06:03,310
보통 이제 갑시다 아들이 요청을 하면은 다

106
00:06:03,310 --> 00:06:04,120
해줘야 됩니다

107
00:06:04,120 --> 00:06:08,840
그게 뭐든지 내일에 대량으로 호출을 해야 되는

108
00:06:08,840 --> 00:06:11,300
왜 이런 이런 사례가 있다 봐요

109
00:06:11,300 --> 00:06:14,630
이따 대량으로 외부 액괴를 호출 해야 되는데

110
00:06:14,630 --> 00:06:17,960
막 일본의 열 개만 보내 주세요

111
00:06:17,960 --> 00:06:21,240
그 이상 되면은 뭐 쉽겠습니다

112
00:06:21,240 --> 00:06:23,470
이런 식으로 나올 수가 있잖아요

113
00:06:23,470 --> 00:06:25,340
그러면 우리는 해야 돼요

114
00:06:25,340 --> 00:06:27,590
해야 되기 때문에 로직 따는데

115
00:06:27,590 --> 00:06:29,690
이제 이로재 게

116
00:06:29,690 --> 00:06:32,660
정말로 잘 돈은 죄를 테스트를 해 보는 거야

117
00:06:32,660 --> 00:06:35,390
뭐 코드를 보시면 알겠지만

118
00:06:35,390 --> 00:06:39,860
나는 어떤 거를 하고 그다음에 타임 점프 하는 겁니다

119
00:06:39,860 --> 00:06:43,990
근데 이제 이런 거는 운영한 반드시 필요한 거예요

120
00:06:43,990 --> 00:06:46,380
왜냐면 갑사 귀성이 때문에 그런데

121
00:06:46,380 --> 00:06:51,090
유니테스트 원정에서는 이게 시간만 선물을 하는 거예요

122
00:06:51,090 --> 00:06:55,180
테스트케이스 11 작성해 왼쪽에 있는 오지고요

123
00:06:55,180 --> 00:06:57,060
오른쪽에 있는 거는

124
00:06:57,060 --> 00:07:01,740
정말로 식초를 잘 쓰는지 테스트로 하는 거예요

125
00:07:01,740 --> 00:07:06,240
그래서 이 테스트를 돌려보내는 근데

126
00:07:06,240 --> 00:07:10,540
불필요하게 10초 정도 이제 아무것도 안 하는 거예요

127
00:07:10,540 --> 00:07:12,060
그러면 제 2 타임

128
00:07:12,060 --> 00:07:14,620
좀 슬립이란 걸 한번 노킹이란 걸 써 볼까

129
00:07:14,620 --> 00:07:15,470
뭔진 모르겠지만

130
00:07:15,470 --> 00:07:16,960
일단 노킹을 한번 해 봐요

131
00:07:16,960 --> 00:07:21,090
그러면 이제 어떻게 하면은 그냥 테스트를 하려는 삼성

132
00:07:21,090 --> 00:07:22,760
게다가 목 일하는데

133
00:07:22,760 --> 00:07:26,260
크레이터를 목전 패치란 데이터를 사용을 해 줘 가지고

134
00:07:26,260 --> 00:07:30,410
어떤 함수를 모킹 할지를 정해 주면 돼요

135
00:07:30,410 --> 00:07:31,750
그리고 여기 두 번째

136
00:07:31,750 --> 00:07:34,630
인자의 복이라는 파라미터가 들어오는데

137
00:07:34,630 --> 00:07:40,100
이거는 모킹 된 객체입니다 객체가져오기 돼요

138
00:07:40,100 --> 00:07:44,780
그러면 아까 테스트를 해 보면은 실패

139
00:07:44,780 --> 00:07:51,200
실패 안 하면은 슬립으로 쉬어야 된대 안 쉬는 거예요

140
00:07:51,200 --> 00:07:58,750
근데 테스트가 근데 즉시 완료 되겠네요 맞죠

141
00:07:58,750 --> 00:08:01,260
근데 여기서 한가지

142
00:08:01,260 --> 00:08:04,140
라이브러리를 소개를 해 드릴까 합니다

143
00:08:04,140 --> 00:08:07,730
이제 술이 직원이라는 라이브러리 있는데요

144
00:08:07,730 --> 00:08:12,140
라이브러리를 사용을 하면 이제 흐르지 않고도

145
00:08:12,140 --> 00:08:14,340
실제로 시간이 흐른 것처럼

146
00:08:14,340 --> 00:08:17,290
사용할 이렇게 처리를 할 수가 있어요

147
00:08:17,290 --> 00:08:19,820
그래 가지고 뭐

148
00:08:19,820 --> 00:08:24,470
저희의 그냥 맞으면은 저희 회사는 일해

149
00:08:24,470 --> 00:08:26,580
시간을 대게만 잘 하자는 거예요

150
00:08:26,580 --> 00:08:27,580
근데 이제 그럴 때

151
00:08:27,580 --> 00:08:30,630
플리즈가 라이브러리를 되게 많이 사용하고 있구요

152
00:08:30,630 --> 00:08:34,990
뭐 예시로 이렇게 코드를 보여 드리면 프리스타일

153
00:08:34,990 --> 00:08:37,290
2012년 1월 14일로 걸어

154
00:08:37,290 --> 00:08:41,640
버리면은 이 함수 내부에서는 뭐 데이트타임 나오를 해서

155
00:08:41,640 --> 00:08:44,190
지금 이모 2019년 2020년 이든

156
00:08:44,190 --> 00:08:46,540
함수내에서 어쨌든 2012년 1월

157
00:08:46,540 --> 00:08:50,200
14일 일로 지켜야 되는 거예요

158
00:08:50,200 --> 00:08:51,880
그러면 아까 봤던

159
00:08:51,880 --> 00:08:54,640
그 테스트하면서 에다가 실패한 테스트합니다 가

160
00:08:54,640 --> 00:08:56,290
여기 이렇게 플리즈

161
00:08:56,290 --> 00:08:59,690
플리즈 건이라는 라이브러리를 적용하려는 야

162
00:08:59,690 --> 00:09:05,130
이렇게 여기 아까 목전 패치를 1

163
00:09:05,130 --> 00:09:10,070
목에 목 교체 에다가 이제 이 함수가 불렀을 때

164
00:09:10,070 --> 00:09:13,880
어떤 것을 할 어떤 것을 어떤 동작을 하냐

165
00:09:13,880 --> 00:09:15,720
이거를 지정 할 수가 있어요

166
00:09:15,720 --> 00:09:18,090
이거를 어떻게 이렇게 사이드 이펙트 에다가

167
00:09:18,090 --> 00:09:19,700
이렇게 말해 주면 되는데요

168
00:09:19,700 --> 00:09:22,310
이렇게 해 주면은 이제

169
00:09:22,310 --> 00:09:24,650
아까 10초 걸렸던 테스트가 0.04

170
00:09:24,650 --> 00:09:26,730
5초 만에 끝나고 실제로

171
00:09:26,730 --> 00:09:29,480
식초를 쉬는죄를 검증할 수 있습니다

172
00:09:29,480 --> 00:09:32,000
나중에 후임자가 20초를 실수로 빼먹어도

173
00:09:32,000 --> 00:09:39,040
테스트는 깨지게 되는 거

174
00:09:39,040 --> 00:09:41,770
어 한 가지 꿀팁을 알려

175
00:09:41,770 --> 00:09:46,450
주면은 이복행 한 객체가 진짜로 식초를 쓴 게 맞아

176
00:09:46,450 --> 00:09:47,710
그러니까 그 후에

177
00:09:47,710 --> 00:09:52,470
제가 프린세스 스타 에서 백엔드 핸드백

178
00:09:52,470 --> 00:09:56,250
스타트를 하는 거 말고 진짜로 타임 좀 풀릴 걸었어

179
00:09:56,250 --> 00:09:57,710
한 번만 걸었어

180
00:09:57,710 --> 00:09:59,710
이거를 검증을 할 수 있는데요

181
00:09:59,710 --> 00:10:05,980
이렇게 목에 차에다가 점 콜드 하면은 뭐 평택점 콜

182
00:10:05,980 --> 00:10:06,550
args

183
00:10:06,550 --> 00:10:07,800
이런 식으로 하면은

184
00:10:07,800 --> 00:10:10,950
이제 정말로 함수가 잘 호출되었는지

185
00:10:10,950 --> 00:10:24,190
예상한 대로 호출되었는지 검증할 수 있습니다

186
00:10:24,190 --> 00:10:29,600
어 죄송합니다 몸이 좀 빨리 말하라니까

187
00:10:29,600 --> 00:10:33,390
일단 세 번째로는 이제 트랜잭션 테스트

188
00:10:33,390 --> 00:10:38,300
케이스 하는 거를 사용하지 말자 하는 건데요

189
00:10:38,300 --> 00:10:42,790
일단 처음부터 설명을 드릴게요

190
00:10:42,790 --> 00:10:47,170
테스트는 다른 테스트에 영향을 받으면 돼요

191
00:10:47,170 --> 00:10:51,020
예를 들면은 뭐 두 개의 테스트 테스트 가 있는데

192
00:10:51,020 --> 00:10:53,090
하나의 테스트에서 만든

193
00:10:53,090 --> 00:10:56,770
두 번째 테스트에서 읽을 수 없어야 돼요

194
00:10:56,770 --> 00:11:00,620
맞죠 삭제 스케이트에서 테스트

195
00:11:00,620 --> 00:11:02,750
데이터가 삭제를 해야 되는데요

196
00:11:02,750 --> 00:11:04,700
창고에서는 이게 DB

197
00:11:04,700 --> 00:11:06,710
데이터를 삭제를 하는 똑같은 거지

198
00:11:06,710 --> 00:11:09,960
근데 이걸 다른 방법으로 교환을 해 놨어요

199
00:11:09,960 --> 00:11:13,350
첫 번째로는 테스트케이스를 상속을 받는 거고

200
00:11:13,350 --> 00:11:14,740
요 두 번째로는 트랙선택

201
00:11:14,740 --> 00:11:16,970
케이스를 상처를 받으면 됩니다

202
00:11:16,970 --> 00:11:18,980
사용법은 똑같은데

203
00:11:18,980 --> 00:11:25,900
실제로 내부 고양이 좀 좀 달라요

204
00:11:25,900 --> 00:11:31,280
테스트케이스 녀 클래스랑 테스트 함수를 시작할 때

205
00:11:31,280 --> 00:11:33,330
각각 트랜잭션으로 감싸 그래요

206
00:11:33,330 --> 00:11:38,220
그래 가지고 클래스가 실제로 뭐야

207
00:11:38,220 --> 00:11:42,190
클래스가 테스트를 시작할 때 하는 걸 거야

208
00:11:42,190 --> 00:11:45,380
그 다음에 트랜잭션 내부의 트랜잭션은

209
00:11:45,380 --> 00:11:47,060
세이브 포인트 라고 하는데

210
00:11:47,060 --> 00:11:50,500
이제 테스트를 들어갈 때는 세이브 포인트 를 만들고

211
00:11:50,500 --> 00:11:54,390
그다음에 테스트가 끝나면은 돌배 그래요

212
00:11:54,390 --> 00:11:58,300
이런 식으로 테스트케이스 를 한글로 하면

213
00:11:58,300 --> 00:11:59,550
이렇게 됐는데요

214
00:11:59,550 --> 00:12:04,650
근데 이제 트랜잭션 테스트케이스 음료 테스트가 끝날 때마다

215
00:12:04,650 --> 00:12:08,350
이제 트렁케이트 테이블이라는 SK 명령어를 사용하여

216
00:12:08,350 --> 00:12:10,610
데이터를 삭제를 하게 되거든요

217
00:12:10,610 --> 00:12:13,820
아까 옆에 보셨던 것처럼

218
00:12:13,820 --> 00:12:15,790
아까는 이게 트랜잭션을 걸었으니까

219
00:12:15,790 --> 00:12:16,980
이제 테스트를 시작할 때

220
00:12:16,980 --> 00:12:22,460
그리고 클래스를 시작할 때 트랙션을 건데 실행 안 돼

221
00:12:22,460 --> 00:12:25,510
얘는 테스트가 끝날 때

222
00:12:25,510 --> 00:12:28,520
그냥 모든 테이블에 다 해 가지고

223
00:12:28,520 --> 00:12:31,800
그러니까 데이터를 삭제를 하는 기계를 날려

224
00:12:31,800 --> 00:12:35,480
버리는 거예요

225
00:12:35,480 --> 00:12:37,500
내일의 화연이 두 개가

226
00:12:37,500 --> 00:12:39,530
퍼포먼스 차이가 얼마나 나느냐

227
00:12:39,530 --> 00:12:44,070
하면은 이거는 저희 피플펀드대부 시스템인데요

228
00:12:44,070 --> 00:12:48,540
이제 테스트 한정은 230개 정도의 테이블이 있고

229
00:12:48,540 --> 00:12:52,970
데이터베이스는 mysql 5.7 환경에서 테스트되었습니다

230
00:12:52,970 --> 00:12:56,270
팩스는 너무 빨라요

231
00:12:56,270 --> 00:13:00,310
엄청 빨라 가지고 한 번 하는 걸로 는 정확하게

232
00:13:00,310 --> 00:13:04,730
이게 몇 번을 돈지 퍼포먼스 팩스가 안 돼요

233
00:13:04,730 --> 00:13:08,980
그래가지고 천범수 0X0080 초가 걸렸으니까

234
00:13:08,980 --> 00:13:10,750
이거를 천으로 나눠 가지고

235
00:13:10,750 --> 00:13:17,420
0.0058 초가 나왔다고 퍼펙트 를 했어요

236
00:13:17,420 --> 00:13:18,830
그런데 이제 트랜잭션

237
00:13:18,830 --> 00:13:21,910
텍스 케이스는 한 번 한 번 하는데

238
00:13:21,910 --> 00:13:24,010
1.7 초 버리는 거예요

239
00:13:24,010 --> 00:13:27,210
이렇게 되면은 테스트 케이스는 뭐

240
00:13:27,210 --> 00:13:30,910
전체선 600개를 돌릴 때 물 빼 개만 걸리는 시간이 0.2

241
00:13:30,910 --> 00:13:31,760
전화 10초도 안 돼요

242
00:13:31,760 --> 00:13:33,990
이거는 그냥 무시할 수 있을 정돈데

243
00:13:33,990 --> 00:13:36,710
트랜잭션 테스트 계시면 배달하는데

244
00:13:36,710 --> 00:13:39,110
10046 범위초과 올리는 거예요

245
00:13:39,110 --> 00:13:42,180
아까운 시간을 롤백하는중 안 쓰고 있다는 거잖아

246
00:13:42,180 --> 00:13:46,170
그래 가지고 실제의 거의 3100 아까

247
00:13:46,170 --> 00:13:48,920
애들이라고 전화 해 가지고

248
00:13:48,920 --> 00:13:51,160
이제 저희는 트랜잭션 테스트

249
00:13:51,160 --> 00:13:54,210
케이스 를 사용하는 모든 테스트를 전부 달리고

250
00:13:54,210 --> 00:13:58,600
테스트 케이스로 다 이전했습니다

251
00:13:58,600 --> 00:14:01,090
그런데 한 가지 그니까

252
00:14:01,090 --> 00:14:04,440
테스트 케이스에서는 이제 못 잡는 트랜잭션 테스트

253
00:14:04,440 --> 00:14:06,760
케이스 많이 잡을 수 있는 몇 가지가 있어요

254
00:14:06,760 --> 00:14:11,110
내일 들어서 데이터베이스에는 락이라는 개념인데요

255
00:14:11,110 --> 00:14:12,420
라디 라는 개념은 이제

256
00:14:12,420 --> 00:14:15,070
트랜잭션 내부에서만 쓸 수 있는 거예요

257
00:14:15,070 --> 00:14:19,840
이거를 트랜잭션 외부에서 쓰려고 하면은 이거는 잔고가 너

258
00:14:19,840 --> 00:14:23,040
이거 잘못 썼어 하고 애를 뱉어요

259
00:14:23,040 --> 00:14:29,310
그러면 이제 근데 앞에서 말씀드렸잖아요

260
00:14:29,310 --> 00:14:33,570
테스트 케이스는 핸드폰을 잡고 시작해요

261
00:14:33,570 --> 00:14:36,300
그 말은 로즈 안에서

262
00:14:36,300 --> 00:14:40,620
트랜잭션을 잡지 않고도 락을 잡아도

263
00:14:40,620 --> 00:14:43,210
테스트가 통과를 않는 얘기거든요

264
00:14:43,210 --> 00:14:45,760
그래 가지고 이런 거에 대해 가지고는

265
00:14:45,760 --> 00:14:47,070
좀 유 일을 해야 되고요

266
00:14:47,070 --> 00:14:50,820
그래서 저희는 이제 개발한 정해서 충분하게 테스트를 하고

267
00:14:50,820 --> 00:14:54,860
배포를 하고 있습니다

268
00:14:54,860 --> 00:14:57,230
뭐 다른 한 가지로 는요

269
00:14:57,230 --> 00:15:02,150
제 장관은 온 컴 이라는 함수가 있어요

270
00:15:02,150 --> 00:15:05,550
간단하게 말씀드리면 예제를 말씀드려 는 첫 번째로

271
00:15:05,550 --> 00:15:08,120
첫 번째 예 저는 이제 sms 를

272
00:15:08,120 --> 00:15:09,550
그냥 보내는 거 잖아요

273
00:15:09,550 --> 00:15:11,650
그런데 되게 중요한 문자 해요

274
00:15:11,650 --> 00:15:15,680
그런데 두 번째 줄 보시면은 에러가 나겠죠

275
00:15:15,680 --> 00:15:19,910
그런 그러면 당연히 내려가면서 물빼기 되겠죠

276
00:15:19,910 --> 00:15:22,810
그런데 문자는 같네

277
00:15:22,810 --> 00:15:24,910
만약에 이게 고객한테 가는 문자 했으면

278
00:15:24,910 --> 00:15:26,450
고객 문자가 2번

279
00:15:26,450 --> 00:15:27,530
3번 4번 계속 간 거야

280
00:15:27,530 --> 00:15:30,480
대체 할 때마다 이거를 나가야 되는 거야

281
00:15:30,480 --> 00:15:33,640
저는 그래 가지고 어떻게 하느냐

282
00:15:33,640 --> 00:15:36,260
트랜잭션 저온 커민스 돼 가지고

283
00:15:36,260 --> 00:15:38,010
이거를 샌드 sms

284
00:15:38,010 --> 00:15:41,550
라는 것을 커밋 될 때 실행을 하면 되는 거야

285
00:15:41,550 --> 00:15:44,290
이렇게 하면은 예외가 발생한 가지고 트렌드 32 -

286
00:15:44,290 --> 00:15:47,990
데도 문자메세지 전송해 안 되는 거야

287
00:15:47,990 --> 00:15:53,230
1컴 있었기 때문에

288
00:15:53,230 --> 00:15:56,650
음 위에 세계는 방금 말씀 드린 거고요

289
00:15:56,650 --> 00:16:01,960
내일해 네 번째는 특히 한 가지 예시 인데요

290
00:16:01,960 --> 00:16:05,980
저희도 이래 굉장히 빈번하게 겪고 있는 실수인데

291
00:16:05,980 --> 00:16:08,740
이제 트랜잭션 내부에서

292
00:16:08,740 --> 00:16:12,780
생성은 객체는 다른 곳에서 접근이 안 되겠죠

293
00:16:12,780 --> 00:16:16,550
그런데 그 내부에서 갤러리로 보냈어요

294
00:16:16,550 --> 00:16:19,970
그러면은 샐러리는 그 객체를 못 믿겠지

295
00:16:19,970 --> 00:16:23,150
그럼 그 샐러리 작업은 커지겠죠

296
00:16:23,150 --> 00:16:25,010
그래 가지고 그럴 때

297
00:16:25,010 --> 00:16:27,820
저희는 온 커밋이란 걸 사용을 하고 있고요

298
00:16:27,820 --> 00:16:34,460
음 근데 이건 커미션 하는 게

299
00:16:34,460 --> 00:16:38,110
어쨌든 트랜잭션에 성공했을 때만 실행한 거 잖아요

300
00:16:38,110 --> 00:16:44,700
근데 테스트 케이스에서는 항상 트랜잭션이 롤백됩니다 4시면

301
00:16:44,700 --> 00:16:48,800
여기 보시면은 테스트가 어떤일이라도 어쨌든

302
00:16:48,800 --> 00:16:49,490
올 백이에요

303
00:16:49,490 --> 00:16:53,960
그러기 때문에 온 커밋을 온 커밋을 사용하는 테스트는

304
00:16:53,960 --> 00:16:57,160
이제 테스트에서 안동

305
00:16:57,160 --> 00:17:02,800
그러면 어떻게 하느냐 내일의 제가 찾아왔어요

306
00:17:02,800 --> 00:17:07,010
잔고 문자 해서 네 잔고 본사에서는 이거 결과

307
00:17:07,010 --> 00:17:13,000
테스트하려는 트렌드 컨텍스트 있으래요 절망적인 않아요

308
00:17:13,000 --> 00:17:14,610
근데 이제 물론 이제

309
00:17:14,610 --> 00:17:18,980
인터넷에는 굉장히 많은 좋으신 분들이 계속 가지고

310
00:17:18,980 --> 00:17:23,220
이런 코드를 공부를 하셨어요

311
00:17:23,220 --> 00:17:27,510
미래 뭐냐면은 장고 내부에서

312
00:17:27,510 --> 00:17:31,550
이제 트랜잭션이 원래 끝나면은 자동으로 자동으로

313
00:17:31,550 --> 00:17:34,950
이래 커밋된 예약된 숙제를 전부 다 돌리고 돌리고

314
00:17:34,950 --> 00:17:35,600
아니요

315
00:17:35,600 --> 00:17:38,190
근데 이래 이거를 테스트

316
00:17:38,190 --> 00:17:40,310
삼수 대구에서 강제로 걸리는 거예요

317
00:17:40,310 --> 00:17:44,270
이렇게 되면은 어떻게 돈 나면은 뭐

318
00:17:44,270 --> 00:17:47,320
테스트케이스 대구라도 온 커미션

319
00:17:47,320 --> 00:17:50,000
걸 테스트를 할 수가 있는 거예요

320
00:17:50,000 --> 00:17:54,190
근데 이제 물론 잔고 내부에도 방으로 중에 있어요

321
00:17:54,190 --> 00:17:55,940
그 방으로 재근 밸리

322
00:17:55,940 --> 00:17:58,630
데이트도 아토믹 블록이라는 함수 인데요

323
00:17:58,630 --> 00:18:00,430
그러면 2밸리 데이트도

324
00:18:00,430 --> 00:18:03,730
아토믹 블록이라는 사무소를 부킹을 해 버려 가지고

325
00:18:03,730 --> 00:18:08,120
항상 나는 혼자서 놀고 있다고 가정의 그 뭐야

326
00:18:08,120 --> 00:18:09,730
바꿔 버리면 되는 거잖아요

327
00:18:09,730 --> 00:18:14,690
그렇게 해 가지고 여기 링크를 보시면 아시겠지만

328
00:18:14,690 --> 00:18:17,360
되게 길게 써 놓은 게 있는데

329
00:18:17,360 --> 00:18:19,070
암튼 이런 화면 속이라는

330
00:18:19,070 --> 00:18:21,620
하루를 만들어 만들어 가지고 쓰고 있고요

331
00:18:21,620 --> 00:18:26,540
이거를 하면은 테스트 할 수 있습니다

332
00:18:26,540 --> 00:18:40,530
네 번째로는 경멸 테스트야

333
00:18:40,530 --> 00:18:43,830
정렬이 라고 하면은 좀 혼란스러울 것 같아 가지고

334
00:18:43,830 --> 00:18:47,480
제가 두 가지의 제일 준비하는데요

335
00:18:47,480 --> 00:18:50,840
테스트 병렬 처리 하는 단위가

336
00:18:50,840 --> 00:18:54,490
테스트케이스가 되면은 이제 왼쪽이 되는 거고

337
00:18:54,490 --> 00:18:58,090
테스트 급여를 하는 단위가 전체시트 가 되는 거면

338
00:18:58,090 --> 00:18:59,360
오른쪽에 되는 거야

339
00:18:59,360 --> 00:19:02,210
두께는 좀 완전히 좀 다른 쪽인데요

340
00:19:02,210 --> 00:19:08,820
저희가 이번에 제가 발표를 할 거는 왼쪽입니다

341
00:19:08,820 --> 00:19:10,620
만약에 혹시 장고

342
00:19:10,620 --> 00:19:15,950
1.82 사용하신 분 계신가요 없으시겠죠

343
00:19:15,950 --> 00:19:20,500
축하드립니다 여러분은 꼼짝없이 넣어두었습니다

344
00:19:20,500 --> 00:19:23,190
장고 1.9 이상을 사용을 하고 있으면은

345
00:19:23,190 --> 00:19:25,700
별도의 살상 없이 바로 쓸 수가 있어요

346
00:19:25,700 --> 00:19:27,680
그거는 그냥 이제 테스트하는데

347
00:19:27,680 --> 00:19:31,370
지혜 - 패러다임이라는 인소를 부쳐 주면은

348
00:19:31,370 --> 00:19:33,430
이제 알아서 됩니다

349
00:19:33,430 --> 00:19:37,430
네 이제 다 괜찮아요 다 빠르게 도는데

350
00:19:37,430 --> 00:19:46,130
이제 이예슬 하나 보여 드릴게요

351
00:19:46,130 --> 00:19:49,460
얘는 어떻게 깨질 거 같아요

352
00:19:49,460 --> 00:19:54,350
두 함수는 어쨌든 없는 거를 계속 하려고 하니까

353
00:19:54,350 --> 00:20:00,500
이제 더 전환 이글스가 뜨지 않을까 하면은 틀렸습니다

354
00:20:00,500 --> 00:20:03,150
이상한 내려갔어요 이상한 내려갔다고

355
00:20:03,150 --> 00:20:04,530
뭐 이상한 내려갔던 건 괜찮아요

356
00:20:04,530 --> 00:20:07,520
근데 테스트가 그냥 강제로 꺼져요

357
00:20:07,520 --> 00:20:10,120
그냥 어떤 게 남아 있던 그냥 상관 안 하고

358
00:20:10,120 --> 00:20:12,290
그냥 강제로 꺼져버립니다

359
00:20:12,290 --> 00:20:15,440
근데 이거를 되게 친절하게 돼 있는데

360
00:20:15,440 --> 00:20:19,090
제가 한글로 좀 키만 가져왔어요

361
00:20:19,090 --> 00:20:21,090
테스트도 좀 유사점

362
00:20:21,090 --> 00:20:24,800
더 좋은 이글스가 이기고 발생하는데 싫대 돼요

363
00:20:24,800 --> 00:20:28,880
근데 발생한 외에는 할 수 없기 때문에

364
00:20:28,880 --> 00:20:32,300
잔고 테스트하러 나가 깔끔하게 처리 할 수 없대요

365
00:20:32,300 --> 00:20:37,670
그리고 정렬옵션 끄고 돌리면 올바르게 잘 나온대요

366
00:20:37,670 --> 00:20:40,920
그리고 추워요

367
00:20:40,920 --> 00:20:44,890
그래서 제가 조금 잔고

368
00:20:44,890 --> 00:20:47,320
인턴 언론은 이게 어떻게 돼 있나

369
00:20:47,320 --> 00:20:51,320
그러니까 패럴 테스트 이거 어떻게 되는가를 좀 찾아봤는데요

370
00:20:51,320 --> 00:20:56,670
근데 마스터플러스 가 있고 워커 프로세스가 있어요

371
00:20:56,670 --> 00:20:59,090
마스터에서 워커로 테스트할 때 그래요

372
00:20:59,090 --> 00:21:01,510
그러면 제 워커는 열심히 택시를 걸리겠죠

373
00:21:01,510 --> 00:21:04,350
그러면 워크프로세스 에다가

374
00:21:04,350 --> 00:21:07,500
일에 테스트 결과를 이제 누적을 안 돼요

375
00:21:07,500 --> 00:21:10,160
그 누적을 한 다음에

376
00:21:10,160 --> 00:21:13,290
이제 마스터 프로세스는 이제 볼륨을 하니까

377
00:21:13,290 --> 00:21:17,660
워크프로세스 에 있는 이벤트라는 객체를 폴링을 해가지고

378
00:21:17,660 --> 00:21:19,390
가져오는 거야

379
00:21:19,390 --> 00:21:25,020
이거는 근데 프로세스간 백제 공유가 맞죠

380
00:21:25,020 --> 00:21:27,060
파이썬에서는 이제 프로세스 간

381
00:21:27,060 --> 00:21:28,780
객체를 공유를 가려면은

382
00:21:28,780 --> 00:21:31,350
피클 이라는 거를 보통 사용을 해요

383
00:21:31,350 --> 00:21:35,460
근데 이거 밑에 보시면은 에러 라는 게 있잖아요

384
00:21:35,460 --> 00:21:39,340
맨 오른쪽 밑에 보시면 일어나는 게 있을 거예요

385
00:21:39,340 --> 00:21:44,530
적 언제 예외 객체를 넣는 건데요

386
00:21:44,530 --> 00:21:48,050
문제점은 돈가스 보통

387
00:21:48,050 --> 00:21:54,090
이제 모델 모델 밑에 이런 거 이런 게 생기잖아요

388
00:21:54,090 --> 00:21:58,770
근데 이거는 그리 안 돼요

389
00:21:58,770 --> 00:22:02,730
그러면 근데 이제 피클이 안 되는데 어떻게 해요

390
00:22:02,730 --> 00:22:05,730
그러면은 격려를 불러요

391
00:22:05,730 --> 00:22:08,470
근데 정말 불만은 속도가 확률은

392
00:22:08,470 --> 00:22:14,270
그리고 맨날 하기 귀찮아요 그래서 찾아봤어요

393
00:22:14,270 --> 00:22:17,410
아 이거 혹시 또 이것도 내가 도장 거야

394
00:22:17,410 --> 00:22:21,170
이거 컴티브 살 수 있는 거 아니야 잃었는데

395
00:22:21,170 --> 00:22:22,370
누가 해 놨더라고요

396
00:22:22,370 --> 00:22:24,360
그것도 잔고 2.1

397
00:22:24,360 --> 00:22:28,490
부터는 그냥 기본적으로 적용이 되어 있고요

398
00:22:28,490 --> 00:22:33,080
근데 1.1 일은 적용이 안 되어 있어요

399
00:22:33,080 --> 00:22:36,560
만약에 2.1 이상을 사용하고 계시면 축하드립니다

400
00:22:36,560 --> 00:22:42,920
공짜 점심은 또 어디 같습니다 그래서 제가 하던 아이디어네요

401
00:22:42,920 --> 00:22:46,620
잔고 2.1 1.1 일이나 어쨌든 똑같은 장 보는데

402
00:22:46,620 --> 00:22:51,160
똑같은 코드베이 근데 이 2,100원 배치를 참고

403
00:22:51,160 --> 00:22:53,750
1.1 적응을 하면 잘 되지 않을까

404
00:22:53,750 --> 00:22:58,320
라는 생각이 들어서 했습니다

405
00:22:58,320 --> 00:23:01,860
그래서 정확히 얘가 간단하게 말씀드리면

406
00:23:01,860 --> 00:23:03,620
은 파이썬 3.8

407
00:23:03,620 --> 00:23:08,650
추가된 과외의 힘 이라는 거를 수영하는 하면은

408
00:23:08,650 --> 00:23:12,430
이제 정상적으로 피클 할 수 있대요

409
00:23:12,430 --> 00:23:15,110
저희는 이제 파일을 사용하는 없어 가지고

410
00:23:15,110 --> 00:23:21,680
다행히 이 함수를 이벤트를 사용해 가지고 정상적으로 개최되는데요

411
00:23:21,680 --> 00:23:27,670
2.7 아직도 사용하시고 계시다는 좀 묵념을 하겠습니다

412
00:23:27,670 --> 00:23:32,360
아무튼 이렇게 수정을 한 거는 이제 잔고

413
00:23:32,360 --> 00:23:35,120
내부 소스 코드를 직접 한 거잖아요

414
00:23:35,120 --> 00:23:38,310
그래서 아무래도 좀 불안하다

415
00:23:38,310 --> 00:23:40,990
그래서 저희는 이제 테스트 환경

416
00:23:40,990 --> 00:23:43,780
현장 내부에서만 이걸 쓰고 있고요

417
00:23:43,780 --> 00:23:49,410
운영에서 운영이나 개발에서는 안 쓰고 있습니다

418
00:23:49,410 --> 00:23:50,750
다섯 번째로 말씀드릴 겁니다

419
00:23:50,750 --> 00:23:54,100
이제 10대 위에 스마일 감포 인데요

420
00:23:54,100 --> 00:23:58,180
뭐 만약에 포스트그레스큐엘 같은 아니면 뭐

421
00:23:58,180 --> 00:24:01,630
다른 것들을 다 사용하셔도 똑같이 사용하실 거에요

422
00:24:01,630 --> 00:24:02,670
오라클만 빼고요

423
00:24:02,670 --> 00:24:09,880
오라클은 덤프가 덤프가 잘 안 된다고 하더라고요

424
00:24:09,880 --> 00:24:15,280
이래 장고 장고 프로젝트가 작을 때는 아무런 문제가 있어요

425
00:24:15,280 --> 00:24:18,610
프로젝트 나가면은 아무리 비율적 여도 빨리 끝나요

426
00:24:18,610 --> 00:24:20,220
그러면 그냥 코드가 작으니까

427
00:24:20,220 --> 00:24:25,590
근데 이게 코드가 커지고 운영에 계속 되고

428
00:24:25,590 --> 00:24:26,990
뭐 테이블이 많아지고

429
00:24:26,990 --> 00:24:31,560
그러면 이제 마이그레이션이 마이그레이션이 엄청 떨어지거든요

430
00:24:31,560 --> 00:24:32,630
뭐 예를 들어 가지고

431
00:24:32,630 --> 00:24:35,230
저희는 뭐 1사에서 5분 정도 걸리는데

432
00:24:35,230 --> 00:24:38,770
그러면은 테스트를 처음 돌릴 때마다

433
00:24:38,770 --> 00:24:43,250
이거를 처음부터 만들라는 엄청 드리잖아요

434
00:24:43,250 --> 00:24:48,150
그래서 창고에는 힙딥이란 기능이 죽인다

435
00:24:48,150 --> 00:24:49,760
일하는 거는 최초로

436
00:24:49,760 --> 00:24:52,220
테스트 데이터를 만들기 만들어 돼요

437
00:24:52,220 --> 00:24:56,840
근데 예를 재활용에 재활용 해 가지고

438
00:24:56,840 --> 00:24:59,890
다음에 테스트를 돌릴때는 새로 추가된 마이그레이션

439
00:24:59,890 --> 00:25:01,930
많은 생각을 하고

440
00:25:01,930 --> 00:25:04,430
그다음에 그다음에 테스트를 빼돌린 거예요

441
00:25:04,430 --> 00:25:06,530
그러면은 처음에 5분이 걸리겠지만

442
00:25:06,530 --> 00:25:10,060
그 이후에는 좀 많이 줄겠죠 1 2

443
00:25:10,060 --> 00:25:11,950
3 초 그쯤 체크하는 거

444
00:25:11,950 --> 00:25:18,430
근데 이제 여기서 약간 지하에서 돌리라고 하니까

445
00:25:18,430 --> 00:25:21,720
좀 문제가 생겨요

446
00:25:21,720 --> 00:25:24,440
저희는 제기 플로라는 거를 쓰고 있는데

447
00:25:24,440 --> 00:25:27,040
블로그에 적용해 봤어요

448
00:25:27,040 --> 00:25:30,790
근데 이제 첫 번째로

449
00:25:30,790 --> 00:25:32,950
이거는 왼쪽에서부터 시간 순입니다

450
00:25:32,950 --> 00:25:35,530
그래서 처음에는 어떤 컴실에서 가지고

451
00:25:35,530 --> 00:25:36,590
테스트를 그렸는데

452
00:25:36,590 --> 00:25:37,650
오케이 놨어요

453
00:25:37,650 --> 00:25:44,140
그런데 다른 쪽에서 소스코드 좀 정리한다고 이제 컬럼을 달렸어요

454
00:25:44,140 --> 00:25:47,220
컬럼을 달리는 말 그래 잘 만들었어요

455
00:25:47,220 --> 00:25:49,840
그런데 여기 꺼도 됐어요

456
00:25:49,840 --> 00:25:56,210
괜찮은데 다시 집으로 돌아오면은 소스 코드는 소스코드는

457
00:25:56,210 --> 00:25:59,490
이제 이 피쳐 어떤 일하는 그림체가

458
00:25:59,490 --> 00:26:04,280
반영이 안 된 상태로 못 올리는 건데

459
00:26:04,280 --> 00:26:05,960
dbms 는 적용이 된 거예요

460
00:26:05,960 --> 00:26:11,790
그러면은 희비는 그대로 재활용을 하기 때문에

461
00:26:11,790 --> 00:26:13,680
그러면 근데 이제

462
00:26:13,680 --> 00:26:17,370
그렇다고 이거를 처음부터 걸리면은 좀 그렇잖아요

463
00:26:17,370 --> 00:26:24,530
그래서 mysql 점프라는 집 앞에다가 추가를 했어요

464
00:26:24,530 --> 00:26:26,110
아이디어는 이거예요

465
00:26:26,110 --> 00:26:31,600
디벨롭 에 추가되는 소스 코드는 거의 - 안 돼요

466
00:26:31,600 --> 00:26:35,610
그러면 이제 뭐 어느 순간에 지배로 기준으로

467
00:26:35,610 --> 00:26:41,300
마이그레이션한 다음에 이제 그거를 테스트할 데이터베이스 한영으로

468
00:26:41,300 --> 00:26:45,430
그 - 점프로 가져 오면은 상구는 아

469
00:26:45,430 --> 00:26:48,470
아까 뭐지 발로 기준으로 했구나

470
00:26:48,470 --> 00:26:50,930
그러면은 이후에 적용한 거

471
00:26:50,930 --> 00:26:55,320
적용한 마이크에서 많이 써야지 하고 잘하거든요

472
00:26:55,320 --> 00:26:59,830
그러면 이제 이런 식으로 하면은 과연 얼마나 퍼포먼스 사라졌냐

473
00:26:59,830 --> 00:27:05,070
뭐 그래 봤자 테이블 어차피 똑같이 만드는 거 아니야 했는데

474
00:27:05,070 --> 00:27:07,510
OST 정도 걸리게 됩니다

475
00:27:07,510 --> 00:27:11,250
이거는 처음부터 마이그레이션을 하는 거는

476
00:27:11,250 --> 00:27:12,850
하이 소문이 걸렸는데

477
00:27:12,850 --> 00:27:16,050
5분에서 10분 5초에서 10초 정도 걸린다는 거는

478
00:27:16,050 --> 00:27:18,550
굉장히 시간 되면 되는 거거든요

479
00:27:18,550 --> 00:27:22,550
그래 가지고 이거를 저희는 사용하고있구요

480
00:27:22,550 --> 00:27:27,240
두번째로는 인터 뭐 아시죠

481
00:27:27,240 --> 00:27:32,030
뭐 같은 거 체크 하는 프로그램을 안 하는데요

482
00:27:32,030 --> 00:27:37,560
근데 이제 다 좋은데 얘는 좀 성능적으로 좀 오버헤드가 있어

483
00:27:37,560 --> 00:27:40,110
그러니까 이게 저희가 뭐 되게

484
00:27:40,110 --> 00:27:43,110
해변의 테스트를 걸려서 그런지 모르겠는데

485
00:27:43,110 --> 00:27:46,610
저희는 경험상 한 한 30분 정도 들어 있더라고요

486
00:27:46,610 --> 00:27:50,610
그리고 가끔씩 보관 오프 같은 것도 주더라고요

487
00:27:50,610 --> 00:27:55,080
그래 가지고 무한루프

488
00:27:55,080 --> 00:27:58,650
지금 현재 버전도 발생한 지 모르겠지만

489
00:27:58,650 --> 00:28:04,690
어쨌든 저희는 1년 반 전에 그걸 갖고 그냥 빼버렸습니다

490
00:28:04,690 --> 00:28:09,410
그랬는데 이제 이게 상대적으로 이게 필요할 때만

491
00:28:09,410 --> 00:28:13,000
이게 아예 없애는 거는 코드 퀄리티를 위해 가지고

492
00:28:13,000 --> 00:28:14,190
좀 용납이 안 되 거야

493
00:28:14,190 --> 00:28:17,520
그래가지고 이제 새벽에 돌리는 일이 더 같은 거 있잖아요

494
00:28:17,520 --> 00:28:23,010
그런 거 이제 뭐 잠깐 들러도 상관 없어요

495
00:28:23,010 --> 00:28:24,930
왜냐하면 개발자가 자고 있기 때문에

496
00:28:24,930 --> 00:28:28,390
근데 개발자가 뭐 게임 틀 때

497
00:28:28,390 --> 00:28:31,220
그러니까 테스트가 끝날 때까지 기다리는 것들은

498
00:28:31,220 --> 00:28:34,000
테스트가 어쨌든 최대한 빨리 끊어야 되는 거거든요

499
00:28:34,000 --> 00:28:37,300
그래 가지고 이거 할 때는 꺼놓고

500
00:28:37,300 --> 00:28:41,440
필요할 때만 켜 가지고 사용하고 있습니다

501
00:28:41,440 --> 00:28:46,070
그래서 얼마나 들었는데요

502
00:28:46,070 --> 00:28:49,590
하면은 저희는 원래 사십이분 에서 사시

503
00:28:49,590 --> 00:28:51,030
사십사분 에 걸렸어요

504
00:28:51,030 --> 00:28:55,660
근데 이게 3.5 문으로 들었어요 위에 인증 보이시죠

505
00:28:55,660 --> 00:28:58,170
진짜로 3분 30초로 들어 가지고

506
00:28:58,170 --> 00:29:01,340
저희는 이렇게 사용을 하고 있고요

507
00:29:01,340 --> 00:29:06,380
내일에 저는 그냥 테스트 시간을 줄이는 것만 줄이는

508
00:29:06,380 --> 00:29:07,520
작업 많이 했어요

509
00:29:07,520 --> 00:29:10,880
근데 이렇게 줄어드니까

510
00:29:10,880 --> 00:29:13,410
개발팀 내부에서 이제 변화가 나오지 시작해요

511
00:29:13,410 --> 00:29:17,400
전에는 이제 어 저기 이거 당장 배워야 되는데

512
00:29:17,400 --> 00:29:19,660
당장 대꾸 안 하면 이거 안 되는데

513
00:29:19,660 --> 00:29:22,680
그러면은 일단 돈 가든 말든

514
00:29:22,680 --> 00:29:25,300
일단 당장 급하니까 배포를 해요

515
00:29:25,300 --> 00:29:30,640
그리고 깨져 그리고 서버가 안 떠요 서버가 죽었어요

516
00:29:30,640 --> 00:29:34,390
근데 이제 이제는 테스트가 빠르니까

517
00:29:34,390 --> 00:29:39,360
뭐 바로 할게 그러면은 테스트 얼마 안 걸리는데

518
00:29:39,360 --> 00:29:41,450
그냥 테스트 돌리고 한 게 어때요

519
00:29:41,450 --> 00:29:44,080
이런 식으로 가게 됐단 말이야

520
00:29:44,080 --> 00:29:46,070
그래 가지고 이렇게 되니까

521
00:29:46,070 --> 00:29:48,070
더 자주 더 부담 없이

522
00:29:48,070 --> 00:29:50,290
테스트를 돌릴 수 있게 되었습니다

523
00:29:50,290 --> 00:29:55,390
그래서 빠른 인플레이션이 됐고요

524
00:29:55,390 --> 00:30:00,530
제발 편 여기 까진데

525
00:30:00,530 --> 00:30:01,830
질문을 받기 전에 한 가지만

526
00:30:01,830 --> 00:30:04,110
홍보를 하면은 저희가 일에

527
00:30:04,110 --> 00:30:07,980
히트파이프 가면서 일해 한 가지 목표가 있는데

528
00:30:07,980 --> 00:30:10,180
이제 여기 계신 분들 중에서

529
00:30:10,180 --> 00:30:17,090
이제 좀 좋으신 분들은 채용을 자는 그래 가지고

530
00:30:17,090 --> 00:30:19,470
이제 이거를 좀 하고 있고

531
00:30:19,470 --> 00:30:24,750
채용공고 가시면은 저희 파이썬 볼 수 있으니까

532
00:30:24,750 --> 00:30:34,550
거기 가서 이제 좀 상담도 하고 있습니다 감사합니다
